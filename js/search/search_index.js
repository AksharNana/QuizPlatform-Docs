var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddBookmark.html",[0,0.12,1,2.01]],["body/classes/AddBookmark.html",[0,0.187,1,3.136,2,1.161,3,0.351,4,0.351,5,0.309,6,3.033,7,0.486,8,3.859,9,3.505,10,1.955,11,0.395,12,0.619,13,3.893,14,3.893,15,0.559,16,0.028,17,1.278,18,0.68,19,0.68,20,0.619,21,4.099,22,1.313,23,4.837,24,4.837,25,4.099,26,3.449,27,0.447,28,1.008,29,0.938,30,1.245,31,1.431,32,1.245,33,1.161,34,1.008,35,0.021,36,0.021]],["title/classes/Answer.html",[0,0.12,37,1.253]],["body/classes/Answer.html",[0,0.184,2,0.93,3,0.281,4,0.281,5,0.248,7,0.389,10,1.927,11,0.316,12,0.534,15,0.705,16,0.028,17,1.288,18,0.781,19,0.836,20,0.71,26,3.091,27,0.441,28,1.108,29,1.031,30,1.561,31,1.573,32,1.561,33,1.276,34,1.108,35,0.018,36,0.018,37,2.55,38,2.177,39,4.688,40,3.667,41,3.284,42,3.284,43,3.284,44,2.799,45,2.799,46,3.284,47,3.667,48,4.093,49,3.284,50,2.091,51,2.228,52,3.284,53,1.806,54,2.477,55,1.806]],["title/injectables/AnswerService.html",[56,1.167,57,2.473]],["body/injectables/AnswerService.html",[0,0.1,3,0.24,4,0.24,5,0.211,7,0.332,11,0.27,12,0.478,15,0.643,16,0.028,17,1.206,18,0.366,19,0.366,20,0.695,27,0.24,28,1.269,29,0.922,35,0.016,36,0.016,37,2.483,40,2.671,50,1.407,53,2.837,54,2.595,56,1.407,57,2.982,58,1.541,59,2.364,60,1.802,61,1.312,62,2.837,63,1.511,64,4.03,65,4.03,66,4.03,67,5.159,68,4.03,69,2.388,70,1.685,71,3.102,72,2.803,73,2.039,74,3.006,75,2.216,76,2.369,77,1.079,78,2.369,79,4.03,80,2.803,81,2.039,82,3.398,83,2.29,84,3.453,85,4.03,86,2.803,87,4.03,88,4.03,89,2.803,90,3.818,91,4.03,92,2.803,93,2.423,94,2.803,95,2.803,96,3.398,97,2.423,98,2.423,99,4.03,100,2.803,101,2.423,102,2.423,103,2.423,104,1.548,105,1.685,106,2.837,107,1.541,108,0.74,109,1.685,110,1.858,111,1.418,112,2.803,113,1.418,114,1.685,115,1.541,116,1.418,117,2.766,118,1.685,119,5.159,120,4.03,121,2.049,122,2.074,123,2.803,124,2.423,125,1.511,126,1.747,127,2.423,128,1.685,129,3.102,130,2.803,131,2.803,132,2.803,133,2.803,134,2.803,135,2.803]],["title/components/AppComponent.html",[136,0.882,137,1.253]],["body/components/AppComponent.html",[0,0.115,3,0.274,4,0.274,5,0.242,7,0.38,9,2.435,11,0.308,12,0.525,15,0.475,16,0.028,17,0.632,18,0.577,19,0.714,20,0.649,22,1.013,27,0.274,35,0.018,36,0.018,44,2.24,45,1.62,60,1.912,61,1.043,63,1.659,77,0.874,83,1.2,104,0.907,108,0.845,116,2.24,136,1.517,137,2.052,138,2.07,139,1.62,140,1.62,141,1.62,142,1.62,143,2.7,144,3.733,145,4.427,146,1.62,147,3.188,148,2.946,149,2.24,150,5.074,151,2.24,152,4.427,153,5.074,154,4.844,155,6.09,156,5.942,157,3.202,158,1.919,159,4.427,160,5.473,161,5.745,162,1.925,163,5.074,164,4.427,165,3.202,166,4.427,167,3.202,168,5.074,169,3.733,170,3.733,171,3.202,172,4.427,173,4.05,174,3.202,175,3.202,176,3.202,177,4.427,178,4.427,179,3.202,180,3.202,181,3.276,182,3.276,183,4.427,184,4.427,185,4.427,186,4.427,187,4.427,188,4.427,189,3.733,190,4.427,191,1.62,192,2.24,193,2.24,194,2.77,195,1.62,196,1.62,197,1.118,198,1.29,199,1.62,200,1.118,201,1.62,202,1.118,203,1.62,204,1.118,205,1.62,206,1.118,207,1.62,208,1.118,209,1.62,210,1.62,211,1.62]],["title/modules/AppModule.html",[212,2.473,213,2.215]],["body/modules/AppModule.html",[0,0.129,3,0.309,4,0.309,5,0.272,16,0.028,22,1.098,27,0.309,35,0.019,36,0.019,104,1.875,107,1.981,108,0.951,137,2.482,148,1.684,197,2.149,198,1.451,200,2.149,202,2.149,204,2.149,206,2.149,208,2.149,213,4.537,214,2.166,215,3.178,216,3.038,217,3.038,218,3.038,219,3.038,220,3.699,221,4.043,222,3.038,223,3.038,224,3.602,225,4.795,226,4.043,227,4.795,228,4.043,229,4.795,230,3.038,231,2.665,232,4.795,233,1.981,234,4.795,235,3.602,236,3.602,237,3.038,238,2.388,239,3.038,240,3.038,241,2.388,242,3.038,243,3.038,244,2.388,245,3.038,246,3.602]],["title/modules/AppRoutingModule.html",[212,2.473,220,2.01]],["body/modules/AppRoutingModule.html",[0,0.144,3,0.442,4,0.345,5,0.304,8,2.982,16,0.028,20,0.478,22,1.303,27,0.442,35,0.02,36,0.02,60,1.408,104,1.868,108,1.064,136,1.675,144,3.399,181,2.982,197,1.802,198,2.078,200,1.802,202,1.802,204,1.802,206,1.408,208,1.802,212,2.982,214,2.423,220,3.102,226,3.399,228,4.351,237,3.399,238,2.671,239,3.399,240,3.399,241,2.671,242,3.399,243,3.399,244,2.671,245,3.399,247,4.03,248,4.03,249,5.16,250,3.977,251,2.671,252,3.42,253,4.03,254,4.03,255,6.451,256,4.03,257,3.399,258,2.671,259,2.982,260,2.982,261,3.399,262,2.982,263,4.03,264,4.03,265,3.399,266,4.03,267,4.03,268,4.03]],["title/classes/Bookmark.html",[0,0.12,9,1.838]],["body/classes/Bookmark.html",[0,0.181,1,2.345,2,1.105,3,0.334,4,0.334,5,0.294,6,2.886,7,0.463,8,2.886,9,3.521,10,1.894,11,0.375,12,0.599,13,3.849,14,3.849,15,0.636,16,0.028,17,1.281,18,0.773,19,0.773,20,0.703,22,1.283,23,4.725,24,4.725,26,3.369,27,0.433,28,1.243,29,1.156,30,1.702,31,1.764,32,1.702,33,1.431,34,1.243,35,0.02,36,0.02,269,3.9,270,3.9,271,3.9,272,3.9]],["title/injectables/BookmarkService.html",[56,1.167,273,2.473]],["body/injectables/BookmarkService.html",[0,0.113,1,3.272,3,0.271,4,0.271,5,0.238,7,0.375,9,3.682,11,0.304,12,0.52,14,2.637,15,0.635,16,0.028,17,1.074,18,0.412,19,0.412,20,0.678,27,0.271,29,1.004,35,0.017,36,0.017,56,1.532,58,1.738,60,1.532,61,1.428,62,3.029,63,1.644,69,2.55,70,1.9,71,3.272,73,2.22,74,3.144,75,2.412,76,2.359,77,1.074,78,2.359,83,2.218,84,3.337,97,2.637,98,2.637,101,2.637,102,2.637,103,2.637,104,1.619,106,2.637,107,1.738,108,0.834,109,1.9,110,2.095,111,1.599,113,1.599,114,1.9,115,1.738,116,1.599,117,2.754,118,1.9,121,2.143,124,1.9,125,1.185,126,1.37,127,1.9,128,1.9,129,3.029,273,3.246,274,2.665,275,4.387,276,4.387,277,4.387,278,3.161,279,4.387,280,3.161,281,3.246,282,2.04,283,4.387,284,3.161,285,3.699,286,4.387,287,3.161,288,4.387,289,3.699,290,4.387,291,3.161,292,3.161,293,3.161,294,4.387,295,3.161,296,3.161,297,3.161]],["title/classes/Category.html",[0,0.12,298,1.563]],["body/classes/Category.html",[0,0.158,2,1.254,3,0.379,4,0.379,5,0.334,7,0.525,10,1.66,11,0.426,12,0.649,15,0.637,16,0.028,17,1.225,18,0.775,19,0.832,20,0.705,27,0.379,28,1.346,29,1.253,30,1.804,31,1.912,32,1.804,33,1.55,34,1.346,35,0.022,36,0.022,77,1.173,298,2.982,299,3.733,300,4.427,301,4.427,302,4.427]],["title/classes/CreateQuiz.html",[0,0.12,303,2.01]],["body/classes/CreateQuiz.html",[0,0.143,2,0.782,3,0.237,4,0.237,5,0.208,7,0.709,10,1.495,11,0.266,12,0.473,15,0.699,16,0.028,17,1.287,18,0.794,19,0.794,20,0.722,22,1.549,27,0.342,28,0.68,29,0.632,30,0.839,31,0.965,32,0.839,33,1.751,34,1.436,35,0.016,36,0.016,44,2.368,45,2.368,51,2.029,77,1.152,81,1.398,298,2.73,303,2.398,304,2.044,305,4.923,306,4.322,307,4.923,308,2.819,309,3.792,310,2.763,311,3.463,312,2.763,313,2.763,314,3.947,315,2.763,316,2.763,317,2.763,318,2.763,319,3.947,320,3.463,321,3.463,322,3.463,323,2.763,324,3.463,325,3.947,326,2.763,327,3.947,328,3.947,329,3.947]],["title/classes/CreateUser.html",[0,0.12,330,1.691]],["body/classes/CreateUser.html",[0,0.205,2,0.814,3,0.246,4,0.246,5,0.217,7,0.341,11,0.277,12,0.487,15,0.615,16,0.028,17,1.321,18,0.748,19,0.748,20,0.681,27,0.41,28,0.707,29,0.658,30,0.873,32,0.873,33,1.673,34,1.284,35,0.016,36,0.016,77,1.03,282,2.365,308,3.248,330,2.641,331,1.905,332,3.171,333,3.54,334,2.421,335,3.54,336,2.719,337,3.381,338,3.318,339,3.111,340,3.381,341,3.381,342,2.874,343,3.941,344,3.861,345,2.874,346,3.137,347,2.874,348,2.874,349,3.54,350,2.874,351,2.874,352,1.905,353,2.126,354,2.076,355,1.905]],["title/components/EditProfileComponent.html",[136,0.882,197,1.167]],["body/components/EditProfileComponent.html",[0,0.062,3,0.149,4,0.149,5,0.131,7,0.206,11,0.168,12,0.332,14,1.046,15,0.377,16,0.028,18,0.227,19,0.227,20,0.662,22,0.641,27,0.149,35,0.011,36,0.011,60,0.978,61,1.144,63,1.05,69,1.778,73,1.417,76,0.754,77,0.871,78,0.754,81,1.417,83,2.167,104,1.25,108,0.46,121,1.768,125,2.197,126,0.754,136,0.928,137,0.652,138,1.31,139,0.881,140,0.881,141,0.881,142,0.881,146,0.881,147,2.694,148,2.489,149,1.417,151,1.417,158,1.214,162,1.046,191,0.881,192,1.417,193,1.417,194,2.038,195,0.881,196,0.881,197,1.407,198,2.144,199,0.881,200,0.608,201,0.881,202,0.608,203,0.881,204,0.608,205,0.881,206,0.608,207,0.881,208,0.608,209,0.881,210,0.881,211,0.881,233,0.957,238,3.771,258,1.154,260,2.072,282,2.093,334,3.035,337,3.129,338,1.046,339,2.966,340,3.005,341,3.005,343,1.684,346,1.684,354,1.417,356,4.797,357,1.468,358,3.515,359,2.801,360,3.515,361,3.515,362,3.266,363,3.358,364,4.028,365,1.856,366,4.181,367,4.181,368,1.468,369,1.74,370,2.801,371,2.98,372,2.801,373,1.74,374,2.064,375,2.926,376,3.832,377,3.771,378,2.072,379,2.072,380,2.926,381,2.329,382,1.74,383,2.072,384,2.072,385,2.072,386,2.072,387,2.072,388,1.74,389,2.801,390,2.362,391,2.362,392,1.74,393,1.468,394,1.74,395,3.42,396,1.468,397,1.74,398,1.468,399,1.74,400,1.288,401,1.74,402,1.288,403,1.74,404,1.468,405,1.74,406,1.288,407,1.468,408,1.468,409,1.468,410,1.468,411,1.74,412,1.74,413,1.74,414,1.74,415,1.74,416,1.74,417,1.74,418,1.74,419,1.74,420,1.468,421,1.468,422,1.468,423,1.468,424,1.468,425,1.468,426,1.468,427,1.74,428,1.288,429,1.468,430,1.468,431,1.468,432,1.74,433,1.74,434,1.74,435,1.74,436,1.74,437,1.74,438,4.21,439,2.072,440,2.072,441,2.362,442,1.288,443,2.362,444,1.684,445,1.154,446,3.358,447,2.926,448,2.926,449,2.926,450,1.154,451,2.926,452,1.154,453,2.422,454,2.654,455,2.422,456,2.422,457,2.329,458,1.684,459,1.684,460,1.856,461,2.654,462,1.154,463,1.154,464,0.881,465,1.54,466,1.154,467,1.288,468,1.288,469,1.288,470,1.154,471,1.154,472,1.154,473,1.154,474,2.422,475,1.154,476,1.154,477,1.154,478,1.856,479,1.046,480,1.046,481,1.046,482,1.154,483,1.046,484,1.154,485,1.288,486,2.422,487,1.856,488,1.288,489,2.072,490,1.288,491,1.288,492,1.288,493,1.288,494,2.329,495,1.288,496,1.288,497,1.684,498,1.684,499,2.072,500,1.288,501,1.288,502,1.288,503,1.288,504,1.288,505,1.288,506,1.288,507,1.288,508,1.288,509,1.684,510,2.072,511,1.288,512,1.288,513,2.072,514,1.288,515,1.288,516,1.154,517,1.288]],["title/guards/EditProfileGuard.html",[252,2.215,518,2.473]],["body/guards/EditProfileGuard.html",[0,0.143,3,0.342,4,0.342,5,0.301,7,0.473,11,0.384,15,0.428,16,0.028,20,0.473,27,0.342,35,0.02,36,0.02,44,2.594,45,2.018,47,3.397,56,1.79,60,1.79,61,1.669,63,1.921,76,1.729,77,0.787,78,1.729,83,1.921,84,3.115,104,1.604,108,1.053,111,2.018,115,2.194,116,2.018,117,2.594,121,1.921,158,2.222,173,2.952,198,1.607,251,2.644,252,3.397,260,2.952,261,5.213,282,2.123,391,4.322,410,3.363,519,3.989,520,4.322,521,3.363,522,3.989,523,5.977,524,5.977,525,5.977,526,3.989,527,5.125,528,5.125,529,5.663,530,5.125,531,5.663,532,3.363,533,3.989,534,3.363,535,3.989,536,3.989,537,3.989,538,3.989]],["title/classes/EditUser.html",[0,0.12,354,1.691]],["body/classes/EditUser.html",[0,0.207,2,0.832,3,0.252,4,0.252,5,0.222,7,0.349,11,0.283,12,0.494,15,0.597,16,0.028,17,1.324,18,0.726,19,0.726,20,0.66,27,0.415,28,0.723,29,0.673,30,0.893,32,0.893,33,1.576,34,1.192,35,0.017,36,0.017,77,1.041,282,2.349,308,2.899,330,2.11,331,1.948,332,3.211,333,3.585,334,2.452,335,3.585,336,1.948,337,3.399,338,3.347,339,3.127,340,3.399,341,3.399,343,3.954,344,3.901,346,3.17,349,3.085,352,1.948,353,2.175,354,2.668,355,2.763,539,2.939,540,2.939,541,2.939,542,2.939,543,2.939]],["title/components/HomeComponent.html",[136,0.882,200,1.167]],["body/components/HomeComponent.html",[0,0.106,3,0.254,4,0.254,5,0.223,16,0.026,22,0.96,27,0.254,35,0.017,36,0.017,61,0.964,77,0.827,93,2.52,104,0.839,108,0.782,136,1.284,137,1.11,138,1.96,139,1.499,140,1.499,141,1.499,142,1.499,146,1.499,147,3.133,148,2.895,149,2.121,151,2.121,181,3.914,191,1.499,192,2.121,193,2.121,194,2.677,195,1.499,196,1.499,197,1.034,198,1.193,199,1.499,200,1.847,201,1.499,202,1.034,203,1.499,204,1.034,205,1.499,206,1.034,207,1.499,208,1.034,209,1.499,210,1.499,211,1.499,464,3.08,486,3.18,544,2.498,545,4.865,546,4.192,547,4.192,548,3.102,549,4.192,550,4.192,551,6.087,552,6.087,553,6.087,554,6.087,555,6.087,556,6.087,557,6.087,558,6.087,559,6.087,560,6.087,561,6.087,562,6.087,563,6.087,564,6.087,565,6.087,566,5.133,567,6.087,568,6.087,569,6.087,570,6.087,571,6.087,572,6.087]],["title/components/LoginComponent.html",[136,0.882,202,1.167]],["body/components/LoginComponent.html",[0,0.087,3,0.208,4,0.208,5,0.183,7,0.288,11,0.234,12,0.43,16,0.028,18,0.317,19,0.317,20,0.571,22,0.831,27,0.208,35,0.014,36,0.014,60,1.267,61,1.414,63,1.36,77,0.716,81,1.836,83,1.933,104,1.028,108,0.641,121,1.36,125,2.028,126,1.053,136,1.147,137,0.911,138,1.697,139,1.229,140,1.229,141,1.229,142,1.229,146,1.229,147,2.981,148,2.755,149,1.836,151,1.836,158,1.573,162,1.461,191,1.229,192,1.836,193,1.836,194,2.438,195,1.229,196,1.229,197,0.848,198,0.978,199,1.229,200,0.848,201,1.229,202,1.683,203,1.229,204,0.848,205,1.229,206,0.848,207,1.229,208,0.848,209,1.229,210,1.229,211,1.229,233,1.336,259,2.685,262,4.264,282,1.36,334,2.737,337,3.348,339,3.081,362,3.214,365,2.405,371,2.685,374,2.031,375,3.418,376,3.418,377,3.194,378,2.685,379,2.685,380,2.879,383,2.685,384,2.685,385,2.685,386,2.685,387,2.685,395,2.897,400,1.798,402,1.798,438,3.565,439,2.685,440,2.685,442,1.798,444,2.182,445,1.61,446,3.66,447,3.418,448,3.418,449,3.418,450,1.61,451,3.418,452,1.61,453,2.897,454,3.1,455,2.897,456,2.897,457,2.879,458,2.182,459,2.182,460,2.405,461,3.1,462,1.61,463,1.61,464,1.229,465,1.996,466,1.61,470,1.61,471,1.61,472,1.61,473,1.61,474,2.897,475,1.61,476,1.61,477,1.61,478,2.405,479,1.461,480,1.461,481,1.461,482,1.61,483,1.461,484,1.61,485,1.798,486,2.897,487,2.405,488,1.798,489,2.685,490,1.798,491,1.798,492,1.798,493,1.798,494,2.879,495,1.798,496,1.798,497,2.182,498,2.182,499,2.685,500,1.798,501,1.798,502,1.798,503,1.798,504,1.798,505,1.798,506,1.798,507,1.798,508,1.798,509,2.182,510,2.685,511,1.798,512,1.798,513,2.685,514,1.798,515,1.798,516,1.61,517,1.798,573,2.049,574,4.344,575,3.629,576,4.344,577,2.43,578,2.43,579,2.43,580,2.43,581,2.43,582,2.43,583,2.43,584,2.43,585,3.06,586,2.43,587,2.43,588,2.43]],["title/classes/NewAnswer.html",[0,0.12,53,1.838]],["body/classes/NewAnswer.html",[0,0.188,2,0.973,3,0.294,4,0.294,5,0.259,7,0.407,10,1.972,11,0.331,12,0.551,15,0.7,16,0.028,17,1.288,18,0.735,19,0.823,20,0.669,26,3.164,27,0.451,28,0.845,29,0.786,30,1.043,31,1.2,32,1.043,33,0.973,34,0.845,35,0.018,36,0.018,37,2.541,38,2.277,39,4.733,40,3.736,44,2.852,45,2.852,47,3.736,48,4.171,50,2.12,51,2.281,53,2.894,54,2.555,55,1.889,589,3.436,590,3.436,591,3.436,592,3.436]],["title/classes/NewQuestion.html",[0,0.12,593,1.838]],["body/classes/NewQuestion.html",[0,0.194,2,1.038,3,0.314,4,0.314,5,0.276,7,0.435,10,2.037,11,0.353,12,0.575,13,3.791,15,0.702,16,0.028,17,1.302,18,0.709,19,0.754,20,0.645,27,0.466,28,0.901,29,0.839,30,1.113,31,1.28,32,1.113,33,1.038,34,0.901,35,0.019,36,0.019,37,2.037,50,2.383,51,2.356,55,2.015,125,1.373,374,1.713,593,2.667,594,2.428,595,3.664,596,4.022,597,3.664,598,3.602,599,3.664,600,4.022,601,4.022,602,2.015]],["title/classes/Question.html",[0,0.12,50,1.167]],["body/classes/Question.html",[0,0.19,2,0.992,3,0.3,4,0.3,5,0.264,7,0.416,10,1.992,11,0.337,12,0.558,13,3.749,15,0.707,16,0.028,17,1.302,18,0.773,19,0.796,20,0.703,27,0.455,28,1.158,29,1.078,30,1.614,31,1.644,32,1.614,33,1.333,34,1.158,35,0.019,36,0.019,37,1.992,50,2.379,51,2.304,55,1.927,374,1.639,593,1.927,594,2.323,596,3.933,598,3.523,600,3.933,601,3.933,602,1.927,603,3.504,604,3.504,605,3.504,606,3.504,607,3.504]],["title/injectables/QuestionService.html",[56,1.167,608,2.473]],["body/injectables/QuestionService.html",[0,0.097,3,0.233,4,0.233,5,0.205,7,0.322,11,0.262,12,0.467,15,0.638,16,0.028,17,1.111,18,0.605,19,0.354,20,0.689,22,1.164,27,0.233,28,1.251,29,0.902,35,0.016,36,0.016,50,2.36,56,1.376,58,1.494,60,1.376,61,1.283,62,2.787,63,1.477,69,2.346,70,1.633,71,3.057,73,1.994,74,2.969,75,2.167,76,2.34,77,1.066,78,2.34,83,2.308,84,3.431,90,2.915,93,2.369,96,3.322,97,2.369,98,2.369,101,2.369,102,2.369,103,2.369,104,1.594,105,1.633,106,2.787,107,1.494,108,0.717,109,1.633,110,1.8,111,1.375,113,1.375,114,1.633,115,1.494,116,1.375,117,2.849,118,1.633,121,2.023,122,2.01,124,2.369,125,1.477,126,1.708,127,2.369,128,1.633,129,3.057,281,2.915,289,3.322,298,1.27,593,2.796,598,2.611,602,2.549,608,2.915,609,2.29,610,3.94,611,3.94,612,3.94,613,5.085,614,3.94,615,2.716,616,3.94,617,2.716,618,3.94,619,2.716,620,3.94,621,3.94,622,2.716,623,4.287,624,3.94,625,2.716,626,3.94,627,2.716,628,2.716,629,3.322,630,3.94,631,2.716,632,2.716,633,2.29,634,5.085,635,3.94,636,2.716,637,2.716,638,2.716,639,2.716,640,2.716,641,2.716,642,2.716]],["title/classes/Quiz.html",[0,0.12,22,0.765]],["body/classes/Quiz.html",[0,0.139,2,0.757,3,0.229,4,0.229,5,0.202,7,0.702,10,1.459,11,0.257,12,0.462,15,0.703,16,0.028,17,1.287,18,0.811,19,0.811,20,0.737,22,1.548,27,0.333,28,0.957,29,0.891,30,1.394,31,1.359,32,1.394,33,1.761,34,1.457,35,0.015,36,0.015,44,2.323,45,2.323,51,1.99,77,1.141,298,2.702,303,1.606,304,1.977,305,4.872,306,4.254,307,4.872,308,2.774,309,3.733,311,3.397,314,3.872,319,3.872,320,3.397,321,3.397,322,3.397,324,3.397,325,3.872,327,3.872,328,3.872,329,3.872,643,2.671,644,2.671,645,2.671,646,2.671,647,2.671,648,2.671,649,2.671,650,2.671,651,2.671,652,2.671,653,2.671]],["title/components/QuizAnswerComponent.html",[136,0.882,204,1.167]],["body/components/QuizAnswerComponent.html",[0,0.076,3,0.181,4,0.181,5,0.159,7,0.25,11,0.203,12,0.387,15,0.481,16,0.028,18,0.425,19,0.425,20,0.698,22,1.401,27,0.181,33,0.598,34,1.103,35,0.013,36,0.013,37,1.223,50,1.789,51,1.414,60,1.139,61,1.298,63,1.223,77,0.644,83,2.002,90,2.413,104,0.924,108,0.557,121,1.494,125,2.068,136,1.279,137,0.791,138,1.525,139,1.068,140,1.068,141,1.068,142,1.068,146,1.068,147,2.865,148,2.647,149,1.65,151,1.65,158,1.943,162,2.396,189,1.78,191,1.068,192,1.65,193,1.65,194,2.791,195,1.068,196,1.068,197,0.737,198,0.85,199,1.068,200,0.737,201,1.068,202,0.737,203,1.068,204,1.566,205,1.068,206,0.737,207,1.068,208,0.737,209,1.068,210,1.068,211,1.068,233,1.161,241,3.96,258,2.642,309,3.791,311,2.413,322,2.413,324,3.791,334,2.269,340,1.794,341,1.794,365,2.162,374,0.987,375,2.642,376,3.54,377,3.395,380,1.399,395,2.695,444,1.961,446,2.396,453,2.396,454,2.695,458,1.269,459,2.695,461,1.961,464,1.65,465,1.161,466,1.399,467,1.562,468,1.562,469,1.562,474,1.961,479,1.269,480,1.269,481,1.269,483,1.961,486,2.914,487,2.162,497,1.961,498,1.269,509,1.269,532,2.75,548,2.413,654,4.421,655,1.78,656,3.986,657,3.986,658,3.262,659,3.986,660,3.986,661,4.846,662,4.846,663,4.846,664,4.483,665,4.483,666,4.483,667,5.34,668,5.34,669,5.34,670,2.111,671,3.262,672,2.111,673,2.75,674,2.413,675,3.262,676,2.111,677,3.986,678,2.111,679,2.111,680,2.111,681,2.111,682,4.483,683,2.111,684,2.111,685,2.111,686,2.111,687,2.111,688,2.111,689,2.111,690,2.111,691,2.111,692,2.111,693,2.111,694,2.111,695,3.262,696,3.262,697,2.111,698,2.111,699,2.111,700,2.111,701,2.111,702,2.111,703,2.111,704,2.111,705,2.111,706,2.111,707,2.111,708,2.111,709,2.111,710,2.111,711,2.111,712,2.111,713,3.262,714,4.483,715,3.262,716,3.262,717,3.262,718,3.262,719,3.262,720,3.262,721,3.262,722,3.262,723,3.986,724,2.111,725,2.111,726,2.111,727,3.361,728,3.262,729,3.78,730,2.111,731,2.111,732,2.111,733,2.111,734,2.111,735,1.78,736,2.111,737,2.111,738,1.78,739,1.78,740,1.78,741,1.78]],["title/components/QuizInfoComponent.html",[136,0.882,206,1.167]],["body/components/QuizInfoComponent.html",[0,0.107,3,0.419,4,0.256,5,0.225,7,0.63,16,0.027,22,1.455,27,0.256,35,0.017,36,0.017,61,0.972,77,1.147,104,0.845,108,0.788,126,1.294,136,1.29,137,1.119,138,1.971,139,1.51,140,1.51,141,1.51,142,1.51,146,1.51,147,3.138,148,2.9,149,2.133,151,2.133,154,2.517,191,1.51,192,2.133,193,2.133,194,2.686,195,1.51,196,1.51,197,1.042,198,1.202,199,1.51,200,1.042,201,1.51,202,1.042,203,1.51,204,1.042,205,1.51,206,1.854,207,1.51,208,1.042,209,1.51,210,1.51,211,1.51,244,1.978,298,2.482,320,3.119,321,3.119,444,1.795,445,1.978,446,3.822,447,3.711,448,3.711,449,3.711,450,1.978,451,3.711,452,1.978,453,3.667,454,3.191,455,3.191,456,3.191,457,3.518,458,2.534,459,3.191,460,2.793,461,3.366,462,1.978,463,1.978,464,1.51,465,2.318,470,1.978,471,1.978,472,1.978,473,1.978,474,3.493,475,1.978,476,1.978,477,1.978,478,2.793,479,1.795,480,1.795,481,1.795,482,1.978,483,2.937,484,3.238,497,2.534,498,1.795,509,1.795,654,2.209,727,3.554,729,2.517,735,2.517,738,2.517,739,2.517,740,2.517,741,2.517,742,2.517,743,4.886,744,4.215,745,5.811,746,5.811,747,5.811,748,4.215,749,4.215,750,4.215,751,4.215,752,2.985,753,2.985,754,2.985,755,2.985,756,2.985,757,2.985,758,2.985,759,4.215,760,2.985,761,2.985,762,2.985,763,2.985,764,2.985]],["title/injectables/QuizService.html",[56,1.167,765,2.473]],["body/injectables/QuizService.html",[0,0.098,3,0.235,4,0.235,5,0.207,7,0.325,11,0.264,12,0.47,15,0.624,16,0.028,17,1.149,18,0.357,19,0.357,20,0.691,22,1.528,27,0.235,28,1.389,29,1.169,35,0.016,36,0.016,56,1.384,58,1.507,60,1.384,61,1.291,62,2.8,63,1.486,69,2.357,70,1.647,71,3.069,73,2.006,74,2.979,75,2.18,76,2.213,77,1.008,78,2.213,83,2.368,84,3.437,93,2.383,97,2.383,98,2.8,101,2.383,102,2.383,103,2.383,104,1.599,105,1.647,106,2.8,107,1.507,108,0.723,109,1.647,110,1.816,111,1.386,113,1.386,114,1.647,115,1.507,116,1.386,117,2.741,118,1.647,121,2.03,122,2.027,124,2.383,125,1.913,126,1.718,127,2.383,128,2.383,129,3.257,281,2.933,285,3.342,298,2.178,303,3.257,374,2.387,629,3.342,633,2.31,765,2.933,766,2.31,767,3.964,768,3.964,769,5.105,770,5.105,771,3.964,772,2.739,773,3.964,774,2.739,775,3.964,776,3.964,777,2.739,778,2.739,779,3.964,780,2.933,781,2.739,782,3.964,783,2.739,784,3.964,785,3.964,786,2.739,787,2.739,788,3.964,789,2.739,790,2.739,791,2.739,792,2.739,793,2.739,794,2.739,795,2.739,796,2.739,797,2.739,798,2.739,799,2.739]],["title/components/RegistrationComponent.html",[136,0.882,208,1.167]],["body/components/RegistrationComponent.html",[0,0.061,3,0.145,4,0.145,5,0.128,7,0.201,11,0.163,12,0.325,15,0.37,16,0.028,18,0.45,19,0.221,20,0.657,22,0.907,27,0.145,34,0.674,35,0.011,36,0.011,61,0.551,63,1.027,69,0.857,73,1.386,74,0.931,76,0.734,77,0.859,78,0.734,81,1.386,82,1.428,83,2.152,103,1.018,104,1.319,108,0.447,117,1.386,121,1.746,125,2.235,126,1.187,136,1.294,137,0.635,138,1.281,139,0.857,140,0.857,141,0.857,142,0.857,146,0.857,147,2.668,148,2.466,149,1.386,151,1.386,158,1.187,162,1.018,169,2.31,191,0.857,192,1.386,193,1.386,194,2.006,195,0.857,196,0.857,197,0.591,198,0.682,199,0.857,200,0.591,201,0.857,202,0.591,203,0.857,204,0.591,205,0.857,206,0.591,207,0.857,208,1.384,209,2.203,210,0.857,211,0.857,233,0.931,251,1.122,257,4.84,259,3.221,262,2.027,282,1.838,308,0.931,330,1.386,332,1.122,334,2.947,337,3.105,338,1.018,339,2.947,340,2.979,341,2.979,346,1.647,362,3.777,363,3.33,365,1.816,366,4.134,367,4.134,368,1.428,375,2.885,376,3.805,377,3.742,378,2.027,379,2.027,380,2.885,381,2.286,383,2.027,384,2.027,385,2.027,386,2.027,387,2.027,393,1.428,395,3.395,396,1.428,398,1.428,400,1.253,402,1.253,404,1.428,406,1.253,407,1.428,408,1.428,409,1.428,420,1.428,421,1.428,422,1.428,423,1.428,424,1.428,428,1.253,429,1.428,430,1.428,431,1.428,438,4.178,439,2.027,440,2.027,441,2.31,442,1.253,443,2.31,444,2.074,445,1.816,446,3.653,447,2.885,448,2.885,449,2.885,450,2.286,451,2.885,452,1.122,453,2.383,454,2.617,455,2.383,456,2.383,457,2.286,458,1.647,459,2.074,460,1.816,461,2.8,462,1.122,463,1.122,464,0.857,465,2.561,466,1.816,467,1.253,468,1.253,469,1.253,470,1.816,471,1.816,472,1.816,473,1.816,474,3.069,475,1.816,476,1.816,477,1.816,478,2.627,479,1.647,480,1.647,481,1.647,482,1.816,483,1.647,484,1.816,485,1.253,486,2.383,488,1.253,489,2.027,490,1.253,491,1.253,492,1.253,493,1.253,494,2.286,495,1.253,496,1.253,497,1.647,498,1.647,499,2.027,500,1.253,501,1.253,502,1.253,503,1.253,504,1.253,505,1.253,506,1.253,507,1.253,508,1.253,509,2.074,510,2.027,511,1.253,512,1.253,513,2.027,514,1.253,515,1.253,516,1.122,517,1.253,585,2.31,800,1.428,801,3.45,802,2.739,803,3.45,804,3.964,805,1.693,806,2.739,807,2.31,808,1.693,809,1.693,810,2.739,811,1.693,812,1.693,813,1.693,814,1.693,815,1.693,816,1.693,817,1.693,818,1.693,819,1.693,820,1.693,821,1.693,822,1.693,823,1.693,824,1.693,825,1.693,826,1.693,827,2.31,828,2.739,829,2.739,830,2.739,831,1.693,832,1.693,833,1.693,834,1.693,835,1.693,836,1.693,837,1.693,838,1.693,839,1.693]],["title/classes/UpdateAnswer.html",[0,0.12,54,1.838]],["body/classes/UpdateAnswer.html",[0,0.193,2,1.02,3,0.309,4,0.309,5,0.272,7,0.427,10,2.02,11,0.347,12,0.569,15,0.66,16,0.028,17,1.275,18,0.625,19,0.802,20,0.569,26,2.883,27,0.462,28,0.886,29,0.825,30,1.094,31,1.258,32,1.094,33,1.02,34,0.886,35,0.019,36,0.019,37,2.547,38,2.388,39,4.778,40,3.178,44,2.908,45,2.908,47,3.808,48,4.252,50,2.007,51,2.078,53,1.981,54,3.16,55,2.637,840,3.602,841,3.602]],["title/classes/UpdateQuestion.html",[0,0.12,602,1.838]],["body/classes/UpdateQuestion.html",[0,0.2,2,1.1,3,0.333,4,0.333,5,0.293,7,0.461,10,2.096,11,0.374,12,0.598,13,3.558,15,0.657,16,0.028,17,1.293,18,0.507,19,0.729,20,0.461,27,0.479,28,0.955,29,0.889,30,1.18,31,1.357,32,1.18,33,1.1,34,0.955,35,0.02,36,0.02,37,1.889,50,2.385,51,2.184,55,2.771,374,2.356,593,2.136,594,2.575,596,3.728,598,3.34,600,3.728,601,3.728,602,2.771,842,3.885]],["title/classes/User.html",[0,0.12,282,1.253]],["body/classes/User.html",[0,0.203,2,0.787,3,0.238,4,0.238,5,0.21,7,0.33,11,0.268,12,0.475,15,0.642,16,0.028,17,1.32,18,0.781,19,0.781,20,0.71,27,0.402,28,0.985,29,1.075,30,1.426,32,1.426,33,1.695,34,1.34,35,0.016,36,0.016,77,1.014,282,2.374,308,3.216,330,2.027,331,1.842,332,2.655,333,2.963,334,2.027,335,2.963,336,1.842,337,3.353,338,3.275,339,3.086,340,3.353,341,3.353,343,3.922,344,3.802,346,3.089,349,3.475,352,2.655,353,2.963,354,2.027,355,1.842,428,2.056,843,2.779,844,2.779,845,2.779,846,2.779,847,2.779,848,2.779,849,2.779,850,2.779,851,2.779]],["title/injectables/UserService.html",[56,1.167,363,2.01]],["body/injectables/UserService.html",[0,0.116,3,0.437,4,0.277,5,0.244,7,0.384,11,0.311,12,0.529,14,3.305,15,0.639,16,0.028,17,1.085,18,0.422,19,0.422,20,0.652,27,0.277,35,0.018,36,0.018,56,1.557,58,1.779,60,1.557,61,1.451,62,3.066,63,1.671,69,2.581,70,1.945,71,3.305,73,2.256,74,3.171,75,2.451,76,2.211,77,1.007,78,2.211,81,2.256,83,2.06,84,3.171,97,2.68,98,2.68,101,2.68,102,2.68,104,1.633,105,1.945,106,3.066,107,1.779,108,0.854,109,1.945,111,1.637,113,1.637,114,1.945,115,1.779,116,1.637,117,2.781,118,1.945,121,1.671,124,2.68,125,2.234,126,1.932,127,2.68,128,2.68,129,2.68,282,2.457,330,2.781,354,2.781,363,2.68,371,3.298,374,2.084,406,2.393,852,2.727,853,4.458,854,4.458,855,3.235,856,4.458,857,3.235,858,4.635,859,4.458,860,4.458,861,3.235,862,4.458,863,3.235,864,4.458,865,4.458,866,4.458,867,3.235,868,4.458,869,3.235,870,3.235,871,3.235]],["title/coverage.html",[872,3.373]],["body/coverage.html",[0,0.239,1,2.126,5,0.267,6,3.504,9,1.945,15,0.379,16,0.027,22,0.809,34,1.165,35,0.019,36,0.019,37,1.326,38,3.539,50,1.235,53,1.945,54,1.945,56,2.077,57,2.617,59,2.982,113,1.789,125,1.326,136,1.65,137,1.326,143,2.982,158,1.533,182,2.617,197,1.235,200,1.235,202,1.235,204,1.235,206,1.235,208,1.235,238,2.344,241,2.344,244,2.344,252,2.344,273,2.617,274,2.982,282,1.326,298,1.654,299,2.982,303,2.126,304,3.504,330,1.789,331,3.539,354,1.789,356,2.982,357,2.982,363,2.126,381,2.344,390,2.982,516,4.556,518,2.617,520,2.982,521,2.982,544,2.982,573,2.982,593,1.945,594,3.539,602,1.945,608,2.617,609,2.982,654,3.504,655,2.982,742,2.982,765,2.617,766,2.982,800,2.982,852,2.982,872,2.617,873,3.536,874,3.536,875,5.704,876,3.536,877,3.536,878,4.736,879,4.736,880,5.34,881,4.736,882,4.736,883,5.34,884,3.536,885,3.536,886,3.536,887,3.536,888,3.536,889,3.536,890,3.536,891,5.34,892,2.982,893,4.736,894,2.982,895,3.536,896,3.536]],["title/dependencies.html",[215,2.664,897,2.355]],["body/dependencies.html",[16,0.028,35,0.023,36,0.023,108,1.277,111,2.448,215,3.206,230,4.871,231,4.274,233,2.66,251,3.206,898,4.838,899,6.761,900,4.838,901,4.838,902,4.838,903,4.838,904,4.838,905,4.838,906,4.838,907,4.838,908,4.838,909,4.838,910,4.838,911,4.838]],["title/miscellaneous/functions.html",[674,2.974,912,1.851]],["body/miscellaneous/functions.html",[11,0.49,15,0.546,16,0.025,35,0.024,36,0.024,76,2.207,77,1.005,78,2.207,105,3.58,113,3.193,158,2.207,425,4.294,426,4.294,674,3.768,892,4.294,912,3.375,913,5.092,914,5.092,915,5.092,916,5.092,917,5.092,918,5.092]],["title/index.html",[11,0.269,919,2.793,920,2.793]],["body/index.html",[16,0.022,22,1.363,35,0.022,36,0.022,37,1.48,50,1.379,60,1.379,75,2.171,81,2.577,93,3.061,170,3.329,182,4.406,265,3.329,336,2.617,343,3.388,352,2.617,355,2.617,465,2.171,494,2.617,548,2.921,566,3.329,623,4.293,673,5.413,780,2.921,807,3.329,827,5.02,858,3.329,872,2.921,921,3.948,922,5.092,923,5.092,924,3.948,925,3.948,926,5.636,927,3.948,928,3.948,929,3.948,930,3.948,931,3.948,932,3.948,933,3.948,934,3.948,935,3.948,936,3.948,937,3.948,938,3.948,939,3.948,940,3.948,941,3.948,942,3.948,943,3.948,944,3.948,945,3.948,946,3.948,947,3.948,948,3.948,949,6.163,950,5.092,951,3.948,952,3.948,953,3.948,954,3.948,955,3.948,956,5.092,957,5.092,958,3.948,959,5.636,960,5.092,961,5.636,962,3.948,963,3.948,964,3.948,965,3.948,966,3.948,967,3.948,968,5.092,969,3.948,970,3.948,971,3.948,972,3.948,973,3.948,974,3.948,975,3.948,976,3.948,977,3.948,978,3.948,979,3.948,980,3.948,981,3.948,982,3.948,983,3.948,984,3.948,985,3.948,986,3.948,987,3.948,988,3.948]],["title/modules.html",[214,2.741]],["body/modules.html",[16,0.024,35,0.024,36,0.024,213,3.495,214,3.17,220,3.17,231,3.902,780,3.902,989,5.273,990,5.273,991,6.076,992,5.273]],["title/overview.html",[993,3.844]],["body/overview.html",[2,1.257,16,0.027,35,0.022,36,0.022,58,2.44,137,2.47,138,2.075,197,2.077,200,2.077,202,2.077,204,2.077,206,2.077,208,2.077,213,4.602,214,2.668,215,3.633,216,3.742,217,3.742,218,3.742,219,3.742,220,3.576,221,4.622,222,3.742,223,3.742,250,2.941,455,2.668,456,2.668,464,2.246,487,2.941,518,3.284,993,3.742,994,4.438,995,4.438]],["title/properties.html",[12,0.477,897,2.355]],["body/properties.html",[12,0.636,16,0.026,31,1.872,35,0.024,36,0.024,996,5.361]],["title/routes.html",[250,3.022]],["body/routes.html",[16,0.024,35,0.024,36,0.024,250,3.583]],["title/miscellaneous/variables.html",[912,1.851,997,3.389]],["body/miscellaneous/variables.html",[11,0.457,15,0.509,16,0.028,18,0.618,19,0.618,35,0.023,36,0.023,121,1.778,158,2.056,173,3.509,258,3.783,339,2.888,381,4.059,395,2.851,534,4.813,894,3.999,912,3.143,997,3.999,998,4.743,999,4.743,1000,4.743,1001,4.743,1002,5.708,1003,4.743,1004,5.708,1005,4.743,1006,4.743,1007,4.743,1008,4.743,1009,4.743,1010,4.743,1011,4.743]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":34,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.0.0",{"_index":996,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["0.9.4",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":464,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":450,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["10/10",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":516,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":698,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["1001682.jpg",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["100vh",{"_index":481,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["10px",{"_index":729,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["11",{"_index":452,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["11:09",{"_index":569,"title":{},"body":{"components/HomeComponent.html":{}}}],["12/12",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":995,"title":{},"body":{"overview.html":{}}}],["15",{"_index":490,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["15.2.0",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":731,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["1rem",{"_index":510,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["2",{"_index":487,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["2016",{"_index":572,"title":{},"body":{"components/HomeComponent.html":{}}}],["20px",{"_index":735,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["242325",{"_index":462,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["24px",{"_index":728,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["255",{"_index":489,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["28fcb.web.app",{"_index":983,"title":{},"body":{"index.html":{}}}],["3",{"_index":721,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["3/3",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{}}}],["3c887e",{"_index":449,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["4/4",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["42a948",{"_index":500,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4caf50",{"_index":736,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["5",{"_index":455,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["5/5",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":759,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["5129486.jpg",{"_index":838,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["5220092.jpg",{"_index":835,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["555",{"_index":764,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["5px",{"_index":498,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":513,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6",{"_index":456,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["6/6",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":322,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["66",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["6em",{"_index":460,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["7",{"_index":994,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["820000",{"_index":508,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["83",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["__v",{"_index":32,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["_id",{"_index":30,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["a94442",{"_index":503,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["abstractcontrol",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":365,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["account",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["activate",{"_index":527,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["activatedroutesnapshot",{"_index":523,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["active",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["add",{"_index":8,"title":{},"body":{"classes/AddBookmark.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{}}}],["add_bookmark",{"_index":275,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["add_bookmark(bookmark",{"_index":279,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["addbookmark",{"_index":1,"title":{"classes/AddBookmark.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"coverage.html":{}}}],["additionally",{"_index":933,"title":{},"body":{"index.html":{}}}],["address",{"_index":344,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["adipiscing",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert",{"_index":505,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["alert(\"you",{"_index":535,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["align",{"_index":483,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["allowance",{"_index":325,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["along",{"_index":387,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["already",{"_index":830,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["amet",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":60,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":107,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":108,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":37,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["answer'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["answer.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["answer.component.html",{"_index":658,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.scss",{"_index":657,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts",{"_index":655,"title":{},"body":{"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer.component.ts:17",{"_index":679,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:21",{"_index":683,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:25",{"_index":680,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:29",{"_index":681,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:34",{"_index":672,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:49",{"_index":676,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:53",{"_index":678,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:65",{"_index":685,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:71",{"_index":687,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:77",{"_index":689,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:84",{"_index":670,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer/quiz",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer:updateanswer",{"_index":133,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer_form",{"_index":659,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answerquiz",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answers",{"_index":90,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{}}}],["answerservice",{"_index":57,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["api",{"_index":425,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["app",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["app.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":137,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":127,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":213,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":220,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apron",{"_index":98,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["area",{"_index":720,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["associated",{"_index":598,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{}}}],["auto",{"_index":725,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["available",{"_index":780,"title":{},"body":{"injectables/QuizService.html":{},"index.html":{},"modules.html":{}}}],["average",{"_index":305,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["back",{"_index":831,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["backdrop",{"_index":491,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["background",{"_index":446,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["base",{"_index":101,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["base_url",{"_index":62,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":943,"title":{},"body":{"index.html":{}}}],["being",{"_index":23,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["belonging",{"_index":289,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{}}}],["belongs",{"_index":26,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["best",{"_index":829,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["blend",{"_index":471,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["block",{"_index":512,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["blur(5px",{"_index":493,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["bookmark",{"_index":9,"title":{"classes/Bookmark.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"coverage.html":{}}}],["bookmarked",{"_index":24,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["bookmarks",{"_index":288,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["bookmarkservice",{"_index":273,"title":{"injectables/BookmarkService.html":{}},"body":{"injectables/BookmarkService.html":{},"coverage.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{}}}],["bootstrap",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":497,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["both",{"_index":932,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":453,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["box",{"_index":485,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["brett",{"_index":836,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["browse",{"_index":991,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":734,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["building",{"_index":973,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["bulmaio",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["button",{"_index":760,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["button:hover",{"_index":763,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["cadetblue",{"_index":761,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["call",{"_index":426,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["calls",{"_index":103,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{}}}],["can't",{"_index":536,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["canactivate",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{}}}],["canactivate(route",{"_index":522,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["capital",{"_index":714,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["catcherror",{"_index":109,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["catcherror(handleerror",{"_index":129,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":779,"title":{},"body":{"injectables/QuizService.html":{}}}],["categorized",{"_index":944,"title":{},"body":{"index.html":{}}}],["category",{"_index":298,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"classes/CreateQuiz.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["catergories",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{}}}],["cd",{"_index":950,"title":{},"body":{"index.html":{}}}],["center",{"_index":474,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["check",{"_index":671,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["checkanswers",{"_index":664,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["choice",{"_index":329,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["churchman",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["ci",{"_index":971,"title":{},"body":{"index.html":{}}}],["circle",{"_index":970,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"overview.html":{}}}],["clearinterval(this.countdowntimer",{"_index":696,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cli",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":75,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["clouds",{"_index":754,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["cluster_appmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["codecov",{"_index":978,"title":{},"body":{"index.html":{}}}],["color",{"_index":461,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["colors.jpg",{"_index":469,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["column",{"_index":839,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["comes",{"_index":745,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["command",{"_index":961,"title":{},"body":{"index.html":{}}}],["commit",{"_index":979,"title":{},"body":{"index.html":{}}}],["competitions",{"_index":938,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":966,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["compodocto",{"_index":965,"title":{},"body":{"index.html":{}}}],["component",{"_index":136,"title":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["component:quizinfocomponent",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["confirm",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_password",{"_index":367,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirmpassword",{"_index":381,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consectetur",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"toggled",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(response",{"_index":429,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["console.log(this.answer_form.value",{"_index":702,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["console.warn(this.login_form.value",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":70,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":118,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":409,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(userservice",{"_index":368,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["contact",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["container",{"_index":724,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["content",{"_index":126,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["continuous",{"_index":922,"title":{},"body":{"index.html":{}}}],["control",{"_index":395,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get(\"confirm_password",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get(\"password",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":384,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contructor",{"_index":806,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["correct",{"_index":39,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["correctanswers",{"_index":707,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["countdown",{"_index":733,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["countdowntimer",{"_index":660,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["country",{"_index":717,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cover",{"_index":479,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["coverage",{"_index":872,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":81,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create_answer",{"_index":64,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_answer(answer",{"_index":79,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_question",{"_index":610,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question(question",{"_index":616,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_quiz",{"_index":767,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_quiz(newquiz",{"_index":773,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_user",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user(user",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["createanswer",{"_index":123,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createquestion",{"_index":636,"title":{},"body":{"injectables/QuestionService.html":{}}}],["createquiz",{"_index":303,"title":{"classes/CreateQuiz.html":{}},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["creates",{"_index":281,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["createuser",{"_index":330,"title":{"classes/CreateUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":336,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["creator",{"_index":314,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["creatorid",{"_index":306,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["css",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["ctrl",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl.value",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":371,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":740,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["data",{"_index":335,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["database",{"_index":29,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["declarations",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["decorator",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{}}}],["decorators",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":87,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer",{"_index":65,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer(id",{"_index":85,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_bookmark",{"_index":276,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_bookmark(bookmark",{"_index":283,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_question",{"_index":611,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_question(question",{"_index":618,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_quiz",{"_index":768,"title":{},"body":{"injectables/QuizService.html":{}}}],["delete_quiz(id",{"_index":776,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletequiz/\"+id).pipe",{"_index":797,"title":{},"body":{"injectables/QuizService.html":{}}}],["dependencies",{"_index":215,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":968,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["directive",{"_index":61,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["directives",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["directory",{"_index":954,"title":{},"body":{"index.html":{}}}],["display",{"_index":444,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["div",{"_index":506,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["docs",{"_index":925,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["dolor",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["dom",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["don't",{"_index":442,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["don\\'t",{"_index":517,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["dynamic",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":327,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["each",{"_index":385,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit_user",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["edit_user(user",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["editprofilecomponent",{"_index":197,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editprofileguard",{"_index":252,"title":{"guards/EditProfileGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["edituser",{"_index":354,"title":{"classes/EditUser.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["element",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["elementref",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["elit",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["email",{"_index":337,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["error",{"_index":918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":601,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["even",{"_index":936,"title":{},"body":{"index.html":{}}}],["executing",{"_index":928,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["express",{"_index":987,"title":{},"body":{"index.html":{}}}],["false",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{},"miscellaneous/variables.html":{}}}],["fed3d3",{"_index":507,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fff",{"_index":762,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["field",{"_index":386,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fields",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":492,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["firebase",{"_index":975,"title":{},"body":{"index.html":{}}}],["first",{"_index":346,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["first_name",{"_index":366,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["firstname",{"_index":338,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["following",{"_index":960,"title":{},"body":{"index.html":{}}}],["font",{"_index":727,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["form",{"_index":334,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["format",{"_index":843,"title":{},"body":{"classes/User.html":{}}}],["formcontrol",{"_index":376,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup",{"_index":375,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["france",{"_index":715,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["friends",{"_index":935,"title":{},"body":{"index.html":{}}}],["full",{"_index":752,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["function",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":674,"title":{"miscellaneous/functions.html":{}},"body":{"components/QuizAnswerComponent.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":963,"title":{},"body":{"index.html":{}}}],["generated",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["genereated",{"_index":352,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["get_bookmarks",{"_index":277,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_bookmarks(userid",{"_index":286,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_question_answer",{"_index":66,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_question_answer(questionid",{"_index":88,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_quiz_categories",{"_index":769,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_questions",{"_index":612,"title":{},"body":{"injectables/QuestionService.html":{}}}],["get_quiz_questions(id",{"_index":621,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallanswers",{"_index":67,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getallquestions",{"_index":613,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallquiz",{"_index":770,"title":{},"body":{"injectables/QuizService.html":{}}}],["getallquizzes\").pipe",{"_index":791,"title":{},"body":{"injectables/QuizService.html":{}}}],["getconfirm_password",{"_index":404,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getemail",{"_index":400,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfirst_name",{"_index":393,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getpassword",{"_index":402,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getq1",{"_index":684,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["getq2",{"_index":686,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["getq3",{"_index":688,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["gets",{"_index":626,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getsurname",{"_index":396,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":919,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":398,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["global",{"_index":389,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["go",{"_index":953,"title":{},"body":{"index.html":{}}}],["gradient(circle",{"_index":448,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":992,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":470,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["green",{"_index":501,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["grid",{"_index":445,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["groups",{"_index":937,"title":{},"body":{"index.html":{}}}],["guard",{"_index":518,"title":{"guards/EditProfileGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":519,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["guards/edit",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h2",{"_index":726,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["handleerror",{"_index":113,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headers",{"_index":124,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":480,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["here",{"_index":746,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["home",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["home.component.html",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":200,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hosting",{"_index":976,"title":{},"body":{"index.html":{}}}],["html",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["http",{"_index":74,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":71,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httperrorresponse",{"_index":105,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":106,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://aksharnana.github.io/quizplatform",{"_index":924,"title":{},"body":{"index.html":{}}}],["https://clumsy",{"_index":97,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://quiz",{"_index":982,"title":{},"body":{"index.html":{}}}],["iaculis",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["id,nupdate",{"_index":795,"title":{},"body":{"injectables/QuizService.html":{}}}],["identifier",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["if(this.toggled",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["if(user",{"_index":533,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["image",{"_index":465,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["implements",{"_index":532,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/QuizAnswerComponent.html":{}}}],["import",{"_index":104,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":48,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["info'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["info.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.html",{"_index":744,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.scss",{"_index":743,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts",{"_index":742,"title":{},"body":{"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["info/quiz",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":372,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["initialised",{"_index":675,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["inject",{"_index":73,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["input[type=\"text",{"_index":732,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["install",{"_index":947,"title":{},"body":{"index.html":{}}}],["installation",{"_index":946,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":951,"title":{},"body":{"index.html":{}}}],["integration",{"_index":923,"title":{},"body":{"index.html":{}}}],["interface",{"_index":10,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["invalid",{"_index":439,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invalid:not(form",{"_index":502,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["involves",{"_index":927,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["issue",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":484,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["itself",{"_index":596,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["jan",{"_index":571,"title":{},"body":{"components/HomeComponent.html":{}}}],["japan",{"_index":722,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["jetpunk",{"_index":931,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["john",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["johnsmith",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["json.parse(user",{"_index":412,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.stringify(answer",{"_index":120,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(bookmark",{"_index":295,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["json.stringify(newquiz",{"_index":789,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(question",{"_index":635,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(response",{"_index":431,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["json.stringify(update",{"_index":793,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(user",{"_index":868,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":482,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["kellie",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["kondratiev",{"_index":468,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["label",{"_index":511,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["land",{"_index":719,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["largest",{"_index":716,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["left",{"_index":454,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["link",{"_index":981,"title":{},"body":{"index.html":{}}}],["live",{"_index":980,"title":{},"body":{"index.html":{}}}],["load",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":964,"title":{},"body":{"index.html":{}}}],["locally",{"_index":952,"title":{},"body":{"index.html":{}}}],["log",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":391,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["logging",{"_index":538,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["login",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["login'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["login.component.html",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_form",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":202,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lorem",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{}}}],["made",{"_index":349,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["many",{"_index":319,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["margin",{"_index":486,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["match",{"_index":443,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["match_ctrl",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_ctrl.value",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mauris",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["menu",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["methods",{"_index":63,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":749,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["miscellaneous",{"_index":912,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":472,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["models/answer",{"_index":112,"title":{},"body":{"injectables/AnswerService.html":{}}}],["models/bookmarks",{"_index":292,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["models/categories",{"_index":633,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["models/question",{"_index":632,"title":{},"body":{"injectables/QuestionService.html":{}}}],["models/quiz",{"_index":787,"title":{},"body":{"injectables/QuizService.html":{}}}],["models/user",{"_index":406,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":212,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":214,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":988,"title":{},"body":{"index.html":{}}}],["more",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["much",{"_index":682,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["multiple",{"_index":328,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["multiplechoice",{"_index":600,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["multiply",{"_index":473,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["name",{"_index":77,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nans",{"_index":119,"title":{},"body":{"injectables/AnswerService.html":{}}}],["navbar",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar_menu",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["nbookmark",{"_index":294,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["nec",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":125,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"classes/NewQuestion.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newanswer",{"_index":53,"title":{"classes/NewAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["newquestion",{"_index":593,"title":{"classes/NewQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["newquiz",{"_index":775,"title":{},"body":{"injectables/QuizService.html":{}}}],["ng",{"_index":494,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":665,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["nicely",{"_index":476,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["node",{"_index":986,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":948,"title":{},"body":{"index.html":{}}}],["none",{"_index":738,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["npm",{"_index":949,"title":{},"body":{"index.html":{}}}],["nquestion",{"_index":634,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquiz",{"_index":788,"title":{},"body":{"injectables/QuizService.html":{}}}],["null",{"_index":534,"title":{},"body":{"guards/EditProfileGuard.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":33,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["numcorrect",{"_index":712,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["nupdate",{"_index":792,"title":{},"body":{"injectables/QuizService.html":{}}}],["observable",{"_index":84,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["occurs",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["oninit",{"_index":656,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["opacity",{"_index":463,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["openrunning",{"_index":958,"title":{},"body":{"index.html":{}}}],["optional",{"_index":78,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["ordered",{"_index":307,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["out",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":993,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":730,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["package",{"_index":897,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":509,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["page",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"index.html":{}}}],["param",{"_index":117,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["paris",{"_index":708,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["parse",{"_index":333,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["particular",{"_index":784,"title":{},"body":{"injectables/QuizService.html":{}}}],["password",{"_index":339,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":441,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":817,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["phasellus",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":128,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["platform",{"_index":827,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["played",{"_index":321,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["plays",{"_index":308,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/Quiz.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["pm",{"_index":570,"title":{},"body":{"components/HomeComponent.html":{}}}],["pointer",{"_index":741,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["populate",{"_index":370,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["position",{"_index":477,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["profile'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":359,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":358,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":357,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":401,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:110",{"_index":403,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:116",{"_index":405,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":388,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":382,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":369,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":392,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":373,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:86",{"_index":394,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:92",{"_index":397,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":399,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.guard",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.guard.ts",{"_index":521,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["profile.guard.ts:18",{"_index":526,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["profile/edit",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":713,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["project",{"_index":926,"title":{},"body":{"index.html":{}}}],["promise",{"_index":530,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":115,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":362,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["pushing",{"_index":974,"title":{},"body":{"index.html":{}}}],["q1",{"_index":667,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["q2",{"_index":668,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["q3",{"_index":669,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["question",{"_index":50,"title":{"classes/Question.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["question:updatequestion",{"_index":640,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionid",{"_index":40,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["questions",{"_index":623,"title":{},"body":{"injectables/QuestionService.html":{},"index.html":{}}}],["questionservice",{"_index":608,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["quiz",{"_index":22,"title":{"classes/Quiz.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["quiz_platform",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["quiz_platformstart",{"_index":955,"title":{},"body":{"index.html":{}}}],["quizanswercomponent",{"_index":204,"title":{"components/QuizAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizid",{"_index":13,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["quizinfocomponent",{"_index":206,"title":{"components/QuizInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizservice",{"_index":765,"title":{"injectables/QuizService.html":{}},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["quizzes",{"_index":93,"title":{},"body":{"injectables/AnswerService.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"index.html":{}}}],["radial",{"_index":447,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["radius",{"_index":739,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["rated",{"_index":945,"title":{},"body":{"index.html":{}}}],["rating",{"_index":748,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["ray.cyclic.app/api/answer",{"_index":99,"title":{},"body":{"injectables/AnswerService.html":{}}}],["ray.cyclic.app/api/bookmark",{"_index":290,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["ray.cyclic.app/api/category/getallcategories\").pipe",{"_index":799,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/question",{"_index":630,"title":{},"body":{"injectables/QuestionService.html":{}}}],["ray.cyclic.app/api/quiz",{"_index":785,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/user",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":504,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["register",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registeruser",{"_index":804,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":802,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":801,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration_form",{"_index":803,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":208,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["related",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["remove",{"_index":285,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuizService.html":{}}}],["removes",{"_index":620,"title":{},"body":{"injectables/QuestionService.html":{}}}],["repeat",{"_index":478,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["report",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["request",{"_index":82,"title":{},"body":{"injectables/AnswerService.html":{},"components/RegistrationComponent.html":{}}}],["requests",{"_index":865,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":438,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["reset",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":428,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["responsive",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":121,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":83,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["rgba(255",{"_index":488,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["right",{"_index":457,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":116,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["route",{"_index":529,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["router",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistrationComponent.html":{}}}],["routermodule",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":525,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["routes",{"_index":250,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":673,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["running",{"_index":972,"title":{},"body":{"index.html":{}}}],["russia",{"_index":709,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["rxjs",{"_index":111,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ryutaro",{"_index":833,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["sayles",{"_index":837,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["scale",{"_index":475,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["score",{"_index":311,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["scoredisplay",{"_index":661,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["second",{"_index":692,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["seconds",{"_index":691,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["select",{"_index":514,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["selector",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["serve",{"_index":957,"title":{},"body":{"index.html":{}}}],["servecontinuous",{"_index":967,"title":{},"body":{"index.html":{}}}],["server",{"_index":956,"title":{},"body":{"index.html":{}}}],["service",{"_index":807,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["services/user.service",{"_index":407,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":410,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["sessionstorage.setitem(\"user",{"_index":430,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["setinterval",{"_index":694,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["setup",{"_index":383,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["share",{"_index":934,"title":{},"body":{"index.html":{}}}],["short",{"_index":440,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["sign",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":929,"title":{},"body":{"index.html":{}}}],["simple",{"_index":942,"title":{},"body":{"index.html":{}}}],["sit",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["site",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":459,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["smith",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":499,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["specifc",{"_index":624,"title":{},"body":{"injectables/QuestionService.html":{}}}],["specific",{"_index":91,"title":{},"body":{"injectables/AnswerService.html":{}}}],["sporcle",{"_index":930,"title":{},"body":{"index.html":{}}}],["src/.../errorhandler.ts",{"_index":913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/edit",{"_index":356,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/guards/edit",{"_index":520,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:16",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/answer.ts",{"_index":38,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["src/app/models/answer.ts:12",{"_index":592,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:16",{"_index":589,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:20",{"_index":590,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:31",{"_index":49,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:35",{"_index":52,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:39",{"_index":43,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:43",{"_index":46,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:47",{"_index":42,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:51",{"_index":41,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:61",{"_index":840,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:65",{"_index":841,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:8",{"_index":591,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/bookmarks.ts",{"_index":6,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"coverage.html":{}}}],["src/app/models/bookmarks.ts:12",{"_index":272,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:16",{"_index":271,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:21",{"_index":269,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:30",{"_index":25,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:34",{"_index":21,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:8",{"_index":270,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/categories.ts",{"_index":299,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/models/categories.ts:12",{"_index":302,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:16",{"_index":300,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:8",{"_index":301,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/question.ts",{"_index":594,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["src/app/models/question.ts:13",{"_index":599,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:18",{"_index":595,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:28",{"_index":606,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:33",{"_index":607,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:38",{"_index":605,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:43",{"_index":604,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:48",{"_index":603,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:58",{"_index":842,"title":{},"body":{"classes/UpdateQuestion.html":{}}}],["src/app/models/question.ts:8",{"_index":597,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/quiz.ts",{"_index":304,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts:12",{"_index":315,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:16",{"_index":313,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:20",{"_index":312,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:24",{"_index":326,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:28",{"_index":318,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:32",{"_index":310,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:36",{"_index":317,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:40",{"_index":323,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:49",{"_index":649,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:53",{"_index":648,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:57",{"_index":647,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:61",{"_index":646,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:65",{"_index":653,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:69",{"_index":651,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:73",{"_index":645,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:77",{"_index":650,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:8",{"_index":316,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:81",{"_index":652,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:86",{"_index":644,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:90",{"_index":643,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/user.ts",{"_index":331,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:13",{"_index":851,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":847,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":850,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":846,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":848,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":849,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":844,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:48",{"_index":351,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:53",{"_index":345,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:57",{"_index":350,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:61",{"_index":342,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:65",{"_index":347,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:69",{"_index":348,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:79",{"_index":543,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:8",{"_index":845,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:84",{"_index":540,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:88",{"_index":542,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:92",{"_index":539,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:96",{"_index":541,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/quiz",{"_index":654,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts",{"_index":800,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:101",{"_index":815,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:107",{"_index":816,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":805,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:22",{"_index":810,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:27",{"_index":809,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:53",{"_index":808,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:77",{"_index":811,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:83",{"_index":812,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:89",{"_index":813,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:95",{"_index":814,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/services/answer.service.ts",{"_index":59,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/services/answer.service.ts:13",{"_index":72,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:24",{"_index":100,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:29",{"_index":80,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:44",{"_index":92,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:55",{"_index":89,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:67",{"_index":95,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:81",{"_index":86,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/bookmark.service.ts",{"_index":274,"title":{},"body":{"injectables/BookmarkService.html":{},"coverage.html":{}}}],["src/app/services/bookmark.service.ts:13",{"_index":278,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:24",{"_index":291,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:31",{"_index":287,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:42",{"_index":280,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:58",{"_index":284,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/question.service.ts",{"_index":609,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:14",{"_index":615,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:25",{"_index":631,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:32",{"_index":617,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:47",{"_index":625,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:58",{"_index":622,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:70",{"_index":628,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:84",{"_index":619,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":766,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:14",{"_index":772,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:25",{"_index":786,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:32",{"_index":774,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:48",{"_index":781,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:60",{"_index":783,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:76",{"_index":777,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:86",{"_index":778,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/user.service.ts",{"_index":852,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:25",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:48",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/utilities/errorhandler.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utilities/password.validator.ts",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":985,"title":{},"body":{"index.html":{}}}],["stanislav",{"_index":467,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["start",{"_index":751,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["started",{"_index":920,"title":{"index.html":{}},"body":{}}],["state",{"_index":524,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["statements",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":921,"title":{},"body":{"index.html":{}}}],["stop",{"_index":677,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["stoptimer",{"_index":666,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["submit",{"_index":723,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["subtiles",{"_index":758,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["such",{"_index":941,"title":{},"body":{"index.html":{}}}],["sun.jpg",{"_index":756,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["sunset",{"_index":755,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["support",{"_index":989,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":340,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["svg",{"_index":990,"title":{},"body":{"modules.html":{}}}],["table",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":858,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["tech",{"_index":984,"title":{},"body":{"index.html":{}}}],["template",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["test",{"_index":528,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["testauto",{"_index":962,"title":{},"body":{"index.html":{}}}],["tests",{"_index":959,"title":{},"body":{"index.html":{}}}],["text",{"_index":51,"title":{},"body":{"classes/Answer.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["this.answer_form.get(\"q1",{"_index":699,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q1\")?.value",{"_index":704,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q2",{"_index":700,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q2\")?.value",{"_index":705,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q3",{"_index":701,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q3\")?.value",{"_index":706,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.checkanswers",{"_index":697,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.confirm_password?.setvalue(this.userobj.password",{"_index":418,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.countdowntimer",{"_index":693,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.email?.setvalue(this.userobj.email",{"_index":416,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.email?.value",{"_index":423,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.first_name?.setvalue(this.userobj.firstname",{"_index":413,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.first_name?.value",{"_index":420,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.http.delete(this.base_url",{"_index":796,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.delete(this.base_url+\"/deleteanswer/\"+id).pipe",{"_index":135,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.delete(this.base_url+\"/deletebookmark/\"+bookmark._id).pipe",{"_index":297,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.delete(this.base_url+\"/deletequestion/\"+question._id).pipe",{"_index":642,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(\"https://clumsy",{"_index":798,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url",{"_index":790,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/getallanswers\").pipe",{"_index":130,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getallquestions\").pipe",{"_index":637,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getanswers/\"+questionid).pipe",{"_index":131,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getbookmarks/\"+userid).pipe",{"_index":293,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.get(this.base_url+\"/getquestions/\"+id).pipe",{"_index":638,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.patch(this.base_url+\"/updateanswer/\"+id",{"_index":134,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.patch(this.base_url+\"/updatequestion/\"+id",{"_index":641,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.patch(this.base_url+\"/updatequiz",{"_index":794,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(this.base_url+\"/updateuser/\"+userid,userupdated",{"_index":871,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url",{"_index":122,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["this.http.post(this.base_url+\"/createbookmark",{"_index":296,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.post(this.base_url+\"/createuser\",usernew",{"_index":869,"title":{},"body":{"injectables/UserService.html":{}}}],["this.login_form.get(\"email",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.reset",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.add(\"is",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.remove(\"is",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password?.setvalue(this.userobj.password",{"_index":417,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.password?.value",{"_index":424,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"confirm_password",{"_index":826,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"email",{"_index":824,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"first_name",{"_index":821,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"password",{"_index":825,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"surname",{"_index":822,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"username",{"_index":823,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.reset",{"_index":820,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":819,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.stoptimer",{"_index":703,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.surname?.setvalue(this.userobj.surname",{"_index":414,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.surname?.value",{"_index":421,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.timeleft",{"_index":695,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.toggled",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.update_form.get(\"confirm_password",{"_index":437,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"email",{"_index":435,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"first_name",{"_index":432,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"password",{"_index":436,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"surname",{"_index":433,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"username",{"_index":434,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.setvalue(this.userobj.username",{"_index":415,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.value",{"_index":422,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.userobj",{"_index":411,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userobj._id",{"_index":419,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.create_user(user).subscribe",{"_index":818,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.edit_user(user,userid).subscribe",{"_index":427,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["throwerror",{"_index":110,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["tile",{"_index":747,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["tilemain",{"_index":757,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["tiles",{"_index":750,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["time",{"_index":324,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["timeleft",{"_index":662,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timeleftdisplay",{"_index":663,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timer",{"_index":309,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["times",{"_index":320,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["title",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/QuizInfoComponent.html":{}}}],["toggle",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["toggled",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["tokyo",{"_index":710,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["top",{"_index":458,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["total",{"_index":690,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["transparent",{"_index":451,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{}}}],["tslib",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["tsukata",{"_index":834,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":940,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":353,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["up",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["update",{"_index":374,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateQuestion.html":{},"injectables/UserService.html":{}}}],["update_answer",{"_index":68,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id",{"_index":94,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id:string",{"_index":132,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_form",{"_index":360,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["update_question",{"_index":614,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id",{"_index":627,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id:string",{"_index":639,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_quiz",{"_index":771,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_quiz(update",{"_index":782,"title":{},"body":{"injectables/QuizService.html":{}}}],["updateanswer",{"_index":54,"title":{"classes/UpdateAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["updated",{"_index":55,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["updatequestion",{"_index":602,"title":{"classes/UpdateQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["updates",{"_index":96,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["updateuser",{"_index":364,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updating",{"_index":355,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["url",{"_index":102,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["url(\"../../assets/images/dark",{"_index":753,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["url(\"../../assets/images/pexels",{"_index":466,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["url(\"../../assets/pexels",{"_index":832,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["urltree",{"_index":531,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["use",{"_index":866,"title":{},"body":{"injectables/UserService.html":{}}}],["used",{"_index":332,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["user",{"_index":282,"title":{"classes/User.html":{}},"body":{"injectables/BookmarkService.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useranswers",{"_index":711,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["userid",{"_index":14,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":341,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["usernew",{"_index":867,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj",{"_index":361,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["users",{"_index":343,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["userservice",{"_index":363,"title":{"injectables/UserService.html":{}},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userupdated",{"_index":870,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":969,"title":{},"body":{"index.html":{}}}],["utilities/errorhandler",{"_index":114,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["utilities/password.validator",{"_index":408,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid.required",{"_index":496,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":495,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":380,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":378,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":379,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":377,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":629,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":390,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["variables",{"_index":997,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":939,"title":{},"body":{"index.html":{}}}],["version",{"_index":31,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"properties.html":{}}}],["viewchild",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('navbar_menu",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["well",{"_index":977,"title":{},"body":{"index.html":{}}}],["whether",{"_index":47,"title":{},"body":{"classes/Answer.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["white",{"_index":737,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["width",{"_index":515,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["within",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["without",{"_index":537,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["world",{"_index":718,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["worlds",{"_index":828,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["zone.js",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddBookmark.html":{"url":"classes/AddBookmark.html","title":"class - AddBookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddBookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Add Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:34\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:30\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: String = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: String = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: String = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: String = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: String = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                Answer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:51\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:47\n                        \n                    \n\n            \n                \n                    id of Answer from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:39\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:43\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:31\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:35\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/answer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_answer\n                            \n                            \n                                delete_answer\n                            \n                            \n                                get_question_answer\n                            \n                            \n                                getAllAnswers\n                            \n                            \n                                update_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/answer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Angular Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_answer\n                        \n                    \n                \n            \n            \n                \ncreate_answer(answer: NewAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Answer request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                NewAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_answer\n                        \n                    \n                \n            \n            \n                \ndelete_answer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete the answer from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_question_answer\n                        \n                    \n                \n            \n            \n                \nget_question_answer(QuestionID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:55\n                \n            \n\n\n            \n                \n                    Get answers to a specific question\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    QuestionID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAnswers\n                        \n                    \n                \n            \n            \n                \ngetAllAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:44\n                \n            \n\n\n            \n                \n                    Get all answers for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_answer\n                        \n                    \n                \n            \n            \n                \nupdate_answer(id: String, answer: UpdateAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:67\n                \n            \n\n\n            \n                \n                    Updates an answer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                UpdateAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/answer\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/answer.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for answer calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Answer, NewAnswer, UpdateAnswer } from '../models/answer';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  /**\n   * Angular Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for answer calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/answer\";\n\n    /**\n   * Create Answer request\n   */\n  create_answer(answer: NewAnswer): Observable {\n    let nans = JSON.stringify(answer);\n    return this.http.post(this.base_url + \"/createAnswer\", nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get all answers for all quizzes\n   * @returns Answer[]\n   */\n  getAllAnswers() : Observable{\n    return this.http.get(this.base_url+\"/getAllAnswers\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get answers to a specific question\n   * @param QuestionID \n   * @returns Answer[]\n   */\n  get_question_answer(QuestionID: String) : Observable{\n    return this.http.get(this.base_url+\"/getAnswers/\"+QuestionID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Updates an answer\n   * @param id \n   * @param answer \n   * @returns Answer\n   */\n  update_answer(id:String, answer:UpdateAnswer) : Observable{\n    let nans = JSON.stringify(answer);\n    return this.http.patch(this.base_url+\"/updateAnswer/\"+id, nans,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n  \n  /**\n   * Delete the answer from database\n   * @param id \n   * @returns any\n   */\n  delete_answer(id: string) : Observable{\n    return this.http.delete(this.base_url+\"/deleteAnswer/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular @Component generated by cli\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navbar_menu\n                            \n                            \n                                title\n                            \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n                    Function to toggle menu on mobile navbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navbar_menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbar_menu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n            \n                \n                    Angular @ViewChild Decorator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz_Platform'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of site\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Boolean value toggled: Is navbar-mobile toggled?\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\n\n/**\n * Angular @Component generated by cli\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of site\n   */\n  title = 'Quiz_Platform';\n  \n  /**\n   * Angular @ViewChild Decorator\n   */\n  @ViewChild('navbar_menu') navbar_menu: ElementRef | undefined;\n\n  /**\n   * Boolean value toggled: Is navbar-mobile toggled?\n   */\n  toggled = false;\n\n  /**\n   * Function to toggle menu on mobile navbar\n   */\n  toggle(){\n    if(this.toggled == false){\n      this.navbar_menu?.nativeElement.classList.add(\"is-active\");\n      this.toggled = true;\n    }else{\n      this.navbar_menu?.nativeElement.classList.remove(\"is-active\");\n      this.toggled = false;\n    }\n    console.log(\"toggled navbar!\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n      \n        Home\n      \n\n      \n        Documentation\n      \n\n      \n        \n          More\n        \n\n        \n          \n            About\n          \n          \n            Jobs\n          \n          \n            Contact\n          \n          \n          \n            Report an issue\n          \n        \n      \n    \n    \n      \n        \n          \n            \n               \n            \n            Bookmark\n          \n          \n            Sign up\n          \n          \n            Log in\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Home                    Documentation                              More                                      About                                Jobs                                Contact                                          Report an issue                                                                                                           Bookmark                                Sign up                                Log in                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            QuizAnswerComponent\n                        \n                        \n                            QuizInfoComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    EditProfileComponent,\n    LoginComponent,\n    QuizAnswerComponent,\n    HomeComponent,\n    QuizInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { EditProfileGuard } from './guards/edit-profile.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\n\n/**\n * Add component and the path at which they will load in the router\n */\nconst routes: Routes = [\n  {path: \"register\", component: RegistrationComponent},\n  {path: \"edit-profile\", component: EditProfileComponent, canActivate: [EditProfileGuard]},\n  {path: \"login\", component: LoginComponent},\n  {path: \"answerQuiz\", component: QuizAnswerComponent},\n  {path: \"home\", component: HomeComponent},\n  {path: \"quiz-info\", component:QuizInfoComponent}\n];\n\n\n/**\n * Angular generated code to export the Routes defined within this module.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmark.html":{"url":"classes/Bookmark.html","title":"class - Bookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:21\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:8\n                        \n                    \n\n            \n                \n                    ID from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:16\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:12\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: String = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: String = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: String = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: String = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: String = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookmarkService.html":{"url":"injectables/BookmarkService.html","title":"injectable - BookmarkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookmarkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bookmark.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_bookmark\n                            \n                            \n                                delete_bookmark\n                            \n                            \n                                get_bookmarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bookmark.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add_bookmark\n                        \n                    \n                \n            \n            \n                \nadd_bookmark(bookMark: AddBookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:42\n                \n            \n\n\n            \n                \n                    Creates a bookmark for user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                AddBookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_bookmark\n                        \n                    \n                \n            \n            \n                \ndelete_bookmark(bookMark: Bookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:58\n                \n            \n\n\n            \n                \n                    Remove bookmark from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                Bookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_bookmarks\n                        \n                    \n                \n            \n            \n                \nget_bookmarks(UserID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:31\n                \n            \n\n\n            \n                \n                    Return all bookmarks belonging to user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    UserID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/bookmark\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bookmark.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for bookmark calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { AddBookmark, Bookmark } from '../models/bookmarks';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for bookmark calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/bookmark\";\n\n  /**\n   * Return all bookmarks belonging to user\n   * @param UserID \n   * @returns Bookmark[]\n   */\n  get_bookmarks(UserID: String) : Observable{\n    return this.http.get(this.base_url+\"/getBookmarks/\"+UserID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates a bookmark for user\n   * @param bookMark \n   * @returns Bookmark\n   */\n  add_bookmark(bookMark : AddBookmark) : Observable{\n    let nbookmark = JSON.stringify(bookMark);\n    return this.http.post(this.base_url+\"/createBookmark\", nbookmark, {\n      headers: new HttpHeaders({\n        'content-type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove bookmark from database\n   * @param bookMark \n   * @returns any\n   */\n  delete_bookmark(bookMark: Bookmark) : Observable{\n    return this.http.delete(this.base_url+\"/deleteBookmark/\"+bookMark._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/categories.ts\n        \n\n\n            \n                Description\n            \n            \n                Category Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:16\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:8\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:12\n                        \n                    \n\n            \n                \n                    The category value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category{\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n    /**\n     * The category value\n     */\n    Name: String = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuiz.html":{"url":"classes/CreateQuiz.html","title":"class - CreateQuiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Create Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:32\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:20\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:16\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:12\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:8\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:36\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:28\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:40\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:24\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: String = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: String = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: String = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: String = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: String = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: Number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: Number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: Number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: String = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: String = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: String = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: String = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: String = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: Number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: Number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: Number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateUser class, used to parse form data when creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:61\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:53\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:65\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:69\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:57\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:48\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                update_form\n                            \n                            \n                                userObj\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject userService and to populate form with current users information\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:64\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        update_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n            \n                \n                    Global variable for logged in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:86\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:92\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:98\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:104\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:110\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:116\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent{\n  /**\n   * Global variable for logged in user\n   */\n  userObj : User;\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  update_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Constructor to inject userService and to populate form with current users information\n   */\n  constructor(public userService: UserService){\n    let user = sessionStorage.getItem(\"User\");\n    this.userObj = JSON.parse(user!);\n    this.first_name?.setValue(this.userObj.FirstName);\n    this.surname?.setValue(this.userObj.Surname);\n    this.username?.setValue(this.userObj.Username);\n    this.email?.setValue(this.userObj.Email);\n    this.password?.setValue(this.userObj.Password);\n    this.confirm_password?.setValue(this.userObj.Password);\n  }\n\n  /**\n   * Function that will update current user\n  */\n  public updateUser() {\n    const userId = this.userObj._id;\n    let user: EditUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n    }\n    /**\n     * Edit user api call\n     */\n    this.userService.edit_user(user,userId).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n      });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.update_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.update_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.update_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.update_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.update_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.update_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            First Name is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Surname is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Username is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Passwords don't match.\n                        \n                    \n                \n                \n                    \n                        \n                            Update\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                            First Name is required.                                                                                                                                                                                                                                                                                                Surname is required.                                                                                                                                                                                                                                                                                                Username is required.                                                                                                                                                                                                                                                                                                                                                                            Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                                                                                                                                                                Password is required.                                                                            Passwords don\\'t match.                                                                                                                                                    Update                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditProfileGuard.html":{"url":"guards/EditProfileGuard.html","title":"guard - EditProfileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditProfileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/edit-profile.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Angular Directive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/edit-profile.guard.ts:18\n                \n            \n\n\n            \n                \n                    Can Activate function to test whether or not a user is logged in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileGuard implements CanActivate {\n  /**\n   * Can Activate function to test whether or not a user is logged in\n   * @param route \n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        alert(\"You can't edit your profile without logging in!\");\n        return false;\n      }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                EditUser class, used to parse form data when updating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:92\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:84\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:96\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:88\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:79\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    \n        .with-margin{\n            margin: 30px;\n        }\n    \n    \n        \n          \n            Home Page\n          \n          \n            Quizzes\n          \n        \n      \n      \n        \n            \n              Catergories\n              With options\n            \n          \n      \n\n      \n        \n            \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                    \n                      John Smith\n                      @johnsmith\n                    \n                  \n              \n                  \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Phasellus nec iaculis mauris. @bulmaio.\n                    #css #responsive\n                    \n                    11:09 PM - 1 Jan 2016\n                  \n                \n              \n        \n        \n            \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                    \n                      John Smith\n                      @johnsmith\n                    \n                  \n              \n                  \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Phasellus nec iaculis mauris. @bulmaio.\n                    #css #responsive\n                    \n                    11:09 PM - 1 Jan 2016\n                  \n                \n              \n        \n        \n            \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                    \n                      John Smith\n                      @johnsmith\n                    \n                  \n              \n                  \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Phasellus nec iaculis mauris. @bulmaio.\n                    #css #responsive\n                    \n                    11:09 PM - 1 Jan 2016\n                  \n                \n              \n        \n        \n            \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                    \n                      John Smith\n                      @johnsmith\n                    \n                  \n              \n                  \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Phasellus nec iaculis mauris. @bulmaio.\n                    #css #responsive\n                    \n                    11:09 PM - 1 Jan 2016\n                  \n                \n              \n        \n      \n\n\n \n        \n  \n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              .with-margin{            margin: 30px;        }                                      Home Page                                Quizzes                                                                Catergories              With options                                                                                                                                                                                                                                                                                                                                      John Smith                      @johnsmith                                                                                          Lorem ipsum dolor sit amet, consectetur adipiscing elit.                    Phasellus nec iaculis mauris. @bulmaio.                    #css #responsive                                        11:09 PM - 1 Jan 2016                                                                                                                                                                                                                                                                                                                                                            John Smith                      @johnsmith                                                                                          Lorem ipsum dolor sit amet, consectetur adipiscing elit.                    Phasellus nec iaculis mauris. @bulmaio.                    #css #responsive                                        11:09 PM - 1 Jan 2016                                                                                                                                                                                                                                                                                                                                                            John Smith                      @johnsmith                                                                                          Lorem ipsum dolor sit amet, consectetur adipiscing elit.                    Phasellus nec iaculis mauris. @bulmaio.                    #css #responsive                                        11:09 PM - 1 Jan 2016                                                                                                                                                                                                                                                                                                                                                            John Smith                      @johnsmith                                                                                          Lorem ipsum dolor sit amet, consectetur adipiscing elit.                    Phasellus nec iaculis mauris. @bulmaio.                    #css #responsive                                        11:09 PM - 1 Jan 2016                                                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login_form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:30\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  login_form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  });\n\n  /**\n   * Function that will update current user\n  */\n  public login() {\n    console.warn(this.login_form.value);\n    this.login_form.reset();\n  }\n\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.login_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.login_form.get(\"password\");\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                            Login\n                        \n                    \n                \n                \n                    \n                      Don't have an account? \n                      Register\n                    \n                  \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                    Login                                                                                                                      Don\\'t have an account?                       Register                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewAnswer.html":{"url":"classes/NewAnswer.html","title":"class - NewAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                NewAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:16\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:20\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:8\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:12\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestion.html":{"url":"classes/NewQuestion.html","title":"class - NewQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                New Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:18\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:13\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: String = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:48\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:43\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:38\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:28\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:33\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: String = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Default angular directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_question\n                            \n                            \n                                delete_question\n                            \n                            \n                                get_quiz_questions\n                            \n                            \n                                getAllQuestions\n                            \n                            \n                                update_question\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_question\n                        \n                    \n                \n            \n            \n                \ncreate_question(question: NewQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a question for quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_question\n                        \n                    \n                \n            \n            \n                \ndelete_question(question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:84\n                \n            \n\n\n            \n                \n                    Removes question from database and associated answers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_questions\n                        \n                    \n                \n            \n            \n                \nget_quiz_questions(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:58\n                \n            \n\n\n            \n                \n                    Get all questions belonging to a specifc quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuestions\n                        \n                    \n                \n            \n            \n                \ngetAllQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets all questions for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_question\n                        \n                    \n                \n            \n            \n                \nupdate_question(id: String, question: UpdateQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:70\n                \n            \n\n\n            \n                \n                    Updates question values\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    question\n                                    \n                                                UpdateQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/question\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/question.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for question calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { NewQuestion, Question, UpdateQuestion } from '../models/question';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Default angular directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  /**\n   * Constructor to inject http client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for question calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/question\";\n\n  /**\n   * Creates a question for quiz\n   * @param question \n   * @returns Question\n   */\n  create_question(question: NewQuestion): Observable {\n    let nquestion = JSON.stringify(question);\n    return this.http.post(this.base_url + \"/createQuestion\", nquestion, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Gets all questions for all quizzes\n   * @returns Question[]\n   */\n  getAllQuestions() : Observable{\n    return this.http.get(this.base_url+\"/getAllQuestions\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get all questions belonging to a specifc quiz\n   * @param id \n   * @returns Question[]\n   */\n  get_quiz_questions(id: String) : Observable{\n    return this.http.get(this.base_url+\"/getQuestions/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Updates question values\n   * @param id \n   * @param question \n   * @returns Question\n   */\n  update_question(id:String, question:UpdateQuestion) : Observable{\n    let nquestion = JSON.stringify(question);\n    return this.http.patch(this.base_url+\"/updateQuestion/\"+id, nquestion,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  /**\n   * Removes question from database and associated answers.\n   * @param question \n   * @returns \n   */\n  delete_question(question: Question) : Observable{\n    return this.http.delete(this.base_url+\"/deleteQuestion/\"+question._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:90\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:86\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:73\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:61\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:57\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:53\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:49\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:77\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:69\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:81\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:65\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: String = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: String = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: String = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: String = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: String = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: Number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: Number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: Number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: String = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: String = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: String = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: String = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: String = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: Number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: Number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: Number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizAnswerComponent.html":{"url":"components/QuizAnswerComponent.html","title":"component - QuizAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-answer/quiz-answer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-answer\n            \n\n            \n                styleUrls\n                ./quiz-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                timeLeft\n                            \n                            \n                                timeLeftDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    q1\n                                \n                                \n                                    q2\n                                \n                                \n                                    q3\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:84\n                \n            \n\n\n            \n                \n                    Function to check answers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:34\n                \n            \n\n\n            \n                \n                    Run these functions when the component is initialised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:49\n                \n            \n\n\n            \n                \n                    Function to stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    q1: new FormControl('',[\n      Validators.required\n    ]),\n    q2: new FormControl('',[\n      Validators.required\n    ]),\n    q3: new FormControl('',[\n      Validators.required\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:17\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:25\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:29\n                        \n                    \n\n            \n                \n                    How much time if left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:21\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        q1\n                    \n                \n\n                \n                    \n                        getq1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        q2\n                    \n                \n\n                \n                    \n                        getq2()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:71\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        q3\n                    \n                \n\n                \n                    \n                        getq3()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:77\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-quiz-answer',\n  templateUrl: './quiz-answer.component.html',\n  styleUrls: ['./quiz-answer.component.scss']\n})\n\nexport class QuizAnswerComponent implements OnInit {\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n  /**\n   * How much time if left\n   */\n  timeLeft = 60; // Total time in seconds\n\n  /**\n   * Run these functions when the component is initialised\n   */\n  ngOnInit() {\n    // Update the timer every second\n    this.countdownTimer = setInterval(() => {\n      this.timeLeft--;\n      // Stop the timer when time is up\n      if (this.timeLeft === 0) {\n        clearInterval(this.countdownTimer);\n        //\t\t\t\t\tthis.checkAnswers();\n      }\n    }, 1000);\n  }\n\n  /**\n   * Function to stop timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n  answer_form = new FormGroup({\n    q1: new FormControl('',[\n      Validators.required\n    ]),\n    q2: new FormControl('',[\n      Validators.required\n    ]),\n    q3: new FormControl('',[\n      Validators.required\n    ]),\n  });\n\n  get q1() {\n    return this.answer_form.get(\"q1\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get q2() {\n    return this.answer_form.get(\"q2\");\n  }\n  /**\n   * Returns username form control\n   */\n  get q3() {\n    return this.answer_form.get(\"q3\");\n  }\n\n  /**\n   * Function to check answers\n   */\n  checkAnswers() {\n    console.log(this.answer_form.value);\n    this.stopTimer();\n\n    const q1 = this.answer_form.get(\"q1\")?.value;\n    const q2 = this.answer_form.get(\"q2\")?.value;\n    const q3 = this.answer_form.get(\"q3\")?.value;\n\n    var correctAnswers = [\"paris\", \"russia\", \"tokyo\"];\n    var userAnswers = [q1, q2, q3];\n    var numCorrect = 0;\n\n    for (var i = 0; i \n    \n\n    \n        \n    Quiz Page\n    \n        Quiz Program\n         {{timeLeft}} \n        \n            Question 1:\n            What is the capital of France?\n            \n                \n                    \n                \n            \n\n            Question 2:\n            What is the largest country in the world by land area?\n            \n                \n                    \n                \n            \n\n            Question 3:\n            What is the capital of Japan?\n            \n\n                \n                    \n                \n            \n            Submit\n        \n        {{timeLeftDisplay}}\n        {{scoreDisplay}}\n    \n\n    \n\n    \n                \n                    ./quiz-answer.component.scss\n                \n                .quiz-container {\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-size: cover;\n    margin: 0 auto;\n    text-align: center;\n    height: 100vh;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\ninput[type=\"text\"] {\n    margin-bottom: 10px;\n}\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            Quiz Program         {{timeLeft}}                     Question 1:            What is the capital of France?                                                                                        Question 2:            What is the largest country in the world by land area?                                                                                        Question 3:            What is the capital of Japan?                                                                                        Submit                {{timeLeftDisplay}}        {{scoreDisplay}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizInfoComponent.html":{"url":"components/QuizInfoComponent.html","title":"component - QuizInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-info/quiz-info.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-info\n            \n\n            \n                styleUrls\n                ./quiz-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz-info',\n  templateUrl: './quiz-info.component.html',\n  styleUrls: ['./quiz-info.component.scss']\n})\nexport class QuizInfoComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n          \n            \n              \n                Description\n                Description Comes here\n              \n              \n                Times Played\n                Bottom left tile\n              \n            \n            \n                \n                  Name\n                  Name Comes here\n                \n                \n                  Rating\n                  Bottom Middle tile\n                \n              \n              \n                \n                  Category\n                  Category Comes Here\n                \n                \n                  ...tiles\n                  Bottom Right tile\n                \n              \n          \n        \n      \n    Start Quiz\n\n    \n\n    \n                \n                    ./quiz-info.component.scss\n                \n                .Full {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/dark-clouds-sunset-sun.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.tileMain{\n    align-items: center;\n}\n\n.subTiles{\n    align-items: center;\n}\n\n.title{\n    font-size: 50px;\n}\n\n\n\n.button {\n    background-color: cadetblue;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 50px;\n}\n\n.button:hover {\n    background-color: #555;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Description                Description Comes here                                            Times Played                Bottom left tile                                                                        Name                  Name Comes here                                                  Rating                  Bottom Middle tile                                                                              Category                  Category Comes Here                                                  ...tiles                  Bottom Right tile                                                          Start Quiz'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_quiz\n                            \n                            \n                                delete_quiz\n                            \n                            \n                                get_quiz_categories\n                            \n                            \n                                getAllQuiz\n                            \n                            \n                                update_quiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_quiz\n                        \n                    \n                \n            \n            \n                \ncreate_quiz(newQuiz: CreateQuiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a new quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newQuiz\n                                    \n                                                CreateQuiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_quiz\n                        \n                    \n                \n            \n            \n                \ndelete_quiz(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:76\n                \n            \n\n\n            \n                \n                    Remove a quiz from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_categories\n                        \n                    \n                \n            \n            \n                \nget_quiz_categories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:86\n                \n            \n\n\n            \n                \n                    Returns all Quiz Categories available\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuiz\n                        \n                    \n                \n            \n            \n                \ngetAllQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:48\n                \n            \n\n\n            \n                \n                    Get all Quizzes from Quiz database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_quiz\n                        \n                    \n                \n            \n            \n                \nupdate_quiz(update: Quiz, id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:60\n                \n            \n\n\n            \n                \n                    Update the values of a particular quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/quiz\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/quiz.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { CreateQuiz, Quiz } from '../models/quiz';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/quiz\";\n\n  /**\n   * Creates a new quiz\n   * @param newQuiz \n   * @returns Quiz\n   */\n  create_quiz(newQuiz: CreateQuiz): Observable {\n    let nQuiz = JSON.stringify(newQuiz);\n    return this.http.post(this.base_url + \"/createQuiz\", nQuiz,\n      {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      }).pipe(\n        catchError(handleError)\n      );\n  }\n\n  /**\n   * Get all Quizzes from Quiz database\n   * @returns Quiz[]\n   */\n  getAllQuiz(): Observable {\n    return this.http.get(this.base_url + \"/getAllQuizzes\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Update the values of a particular quiz\n   * @param update \n   * @param id \n   * @returns Quiz\n   */\n  update_quiz(update : Quiz, id: String) : Observable{\n    let nupdate = JSON.stringify(update);\n    return this.http.patch(this.base_url+\"/updateQuiz/\"+ id,nupdate, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }  \n\n  /**\n   * Remove a quiz from the database\n   * @param id \n   * @returns any\n   */\n  delete_quiz(id: String): Observable {\n    return this.http.delete(this.base_url + \"/deleteQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Returns all Quiz Categories available\n   * @returns Category[]\n   */\n  get_quiz_categories(): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getAllCategories\").pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default @Component decorator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registration_form\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n                \n                    \n                            Registration Component Contructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that will register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registration_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  },{validators: confirmPassword})\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:27\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:77\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:83\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:89\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:95\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:101\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:107\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\nimport { Router } from '@angular/router';\n/**\n * Default @Component decorator\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\n\nexport class RegistrationComponent {\n  /**\n   * Registration Component Contructor to inject user Service and router\n   * @param userService \n   * @param router \n   */\n  constructor(public userService : UserService, public router: Router) {}\n\n  /**\n   * Create a FormGroup and setup form controls for each field along with Validators\n  */\n  registration_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  },{validators: confirmPassword});\n\n  /**\n   * Function that will register a new user\n  */\n  public registerUser() {\n    let user: CreateUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n      Plays: 0\n    }\n    /**\n     * Calls userService to perform http request\n     */\n    this.userService.create_user(user).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n        this.router.navigate(['/login']);\n      });\n    this.registration_form.reset();\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.registration_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */  \n  get surname() {\n    return this.registration_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.registration_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.registration_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.registration_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.registration_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Quiz Platform\n            \n            \n              Worlds Best!\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  First Name is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Surname is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Username is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              \n                \n                  Email is required.\n                \n                \n                  Invalid Email\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Password too short.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Passwords don't match.\n                \n              \n            \n            \n              \n                \n                  Register\n                \n              \n            \n            \n              \n                Already have an account? Login\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .back {\n    display: grid;\n\n    /* The image used */\n    // background-image: url(\"../../assets/pexels-ryutaro-tsukata-5220092.jpg\");\n    background-image: url(\"../../assets/images/pexels-brett-sayles-5129486.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.column {\n    padding: 0;\n}\n\n.register {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Quiz Platform                                      Worlds Best!                                                                                                                                                                                                                              First Name is required.                                                                                                                                                                                                    Surname is required.                                                                                                                                                                                                    Username is required.                                                                                                                                                                                                                                                      Email is required.                                                  Invalid Email                                                                                                                                                                                                    Password is required.                                                  Password too short.                                                                                                                                                                                                    Password is required.                                                  Passwords don\\'t match.                                                                                                      Register                                                                                    Already have an account? Login                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnswer.html":{"url":"classes/UpdateAnswer.html","title":"class - UpdateAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                UpdateAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:61\n                        \n                    \n\n            \n                \n                    The value for the Updated answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:65\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestion.html":{"url":"classes/UpdateQuestion.html","title":"class - UpdateQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Update Question Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:58\n                        \n                    \n\n            \n                \n                    Updated question value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: String = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: String =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: String = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: String = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: String = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User class, response from database in this format\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    Unknown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n            \n                \n                    ID Genereated by Database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:13\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_user\n                            \n                            \n                                edit_user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_user\n                        \n                    \n                \n            \n            \n                \ncreate_user(user: CreateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:32\n                \n            \n\n\n            \n                \n                    Take user input and create new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit_user\n                        \n                    \n                \n            \n            \n                \nedit_user(user: EditUser, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:48\n                \n            \n\n\n            \n                \n                    Take new info and update current user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/user\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:25\n                        \n                    \n\n            \n                \n                    All user related requests use this base url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable } from 'rxjs';\n\nimport { CreateUser, EditUser, User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * All user related requests use this base url\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/user\";\n\n  /**\n   * Take user input and create new user\n   * @param user \n   * @returns \n   */\n  create_user(user: CreateUser) : Observable{\n    let userNew = JSON.stringify(user);\n    return this.http.post(this.base_url+\"/createUser\",userNew,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Take new info and update current user.\n   * @param user \n   * @param userID \n   * @returns \n   */\n  edit_user(user: EditUser, userID: string) : Observable{\n    let userUpdated = JSON.stringify(user);\n    return this.http.patch(this.base_url+\"/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/guards/edit-profile.guard.ts\n            \n            guard\n            EditProfileGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            Answer\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            NewAnswer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            UpdateAnswer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            AddBookmark\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            Bookmark\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/categories.ts\n            \n            class\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            NewQuestion\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            Question\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            UpdateQuestion\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            CreateQuiz\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            Quiz\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            CreateUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            EditUser\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/quiz-answer/quiz-answer.component.ts\n            \n            component\n            QuizAnswerComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/quiz-info/quiz-info.component.ts\n            \n            component\n            QuizInfoComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/bookmark.service.ts\n            \n            injectable\n            BookmarkService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/utilities/errorhandler.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utilities/password.validator.ts\n            \n            variable\n            confirmPassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bulma : ^0.9.4\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleError   (src/.../errorhandler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/errorhandler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                    handleError function called when an HttpError occurs in API call\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nService\nStatus\n\n\n\n\nContinuous Integration\n\n\n\nCode Coverage\n\n\n\nDocumentation\nhttps://aksharnana.github.io/QuizPlatform-Docs/\n\n\n\nQuiz Platform\nThis project involves creating and executing a quiz platform similar to Sporcle or Jetpunk, where users can both create and take quizzes. Additionally, users can share their quiz results with friends, and even create groups for competitions. Various types of questions should be available, such as simple question-answer, image-based, and matching questions. Quizzes should also be categorized and rated by users.\nInstallation\nInstall node_modules with npm:\n  cd Quiz_Platform\n  npm installRun Locally\nGo to the project directory\n  cd Quiz_PlatformStart the server\n  ng serve --openRunning Tests\nTo run tests, run the following command\n  npm run testAuto Documentation\nTo generate local documentation, run the following command\n  npm run compodocTo serve the genereated documentation, run the command\n  npm run compodoc-serveContinuous Integration / Continuous Deployment\nQuiz Platform is using Circle CI for running tests, building and pushing to firebase hosting as well as updating the codecov page on every commit.\nDeployment\nThe live project link is:\nhttps://quiz-platform-28fcb.web.app/\nTech Stack\nClient: Angular, BulmaIO\nServer: Node, Express, MongoDB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmPassword   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n    const ctrl = control.get(\"password\");\n    const match_ctrl = control.get(\"confirm_password\");\n    return ctrl && match_ctrl && ctrl.value !== match_ctrl.value ? { confirmPassword: false } : null;\n}\n                    \n                \n\n            \n                \n                    Validator Function to validate password and confirm password fields.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
