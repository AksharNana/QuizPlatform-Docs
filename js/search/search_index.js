var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddBookmark.html",[0,0.143,1,2.098]],["body/classes/AddBookmark.html",[0,0.234,1,3.434,2,1.415,3,0.235,4,0.235,5,0.208,6,3.782,7,0.928,8,3.225,9,3.629,10,2.121,11,0.29,12,0.47,13,2.693,14,2.828,15,0.259,16,0.018,17,0.86,18,0.546,19,0.546,20,0.326,21,4.916,22,1.195,23,5.727,24,5.727,25,4.916,26,4.299,27,0.292,28,1.177,29,1.482,30,1.553,31,2.078,32,1.627,33,1.072,34,1.072,35,0.014,36,0.043]],["title/classes/Answer.html",[0,0.143,37,1.36]],["body/classes/Answer.html",[0,0.234,2,1.178,3,0.196,4,0.196,5,0.173,7,0.772,10,2.116,11,0.242,12,0.417,15,0.318,16,0.018,17,0.869,18,0.621,19,0.658,20,0.371,26,3.94,27,0.292,28,1.3,29,1.637,30,1.926,31,2.295,32,2.018,33,1.184,34,1.184,35,0.013,36,0.038,37,2.816,38,2.867,39,4.71,40,4.552,41,4.09,42,4.09,43,4.09,44,2.745,45,2.482,46,4.09,47,4.197,48,4.997,49,4.09,50,2.53,51,2.449,52,4.09,53,2.298,54,3.262,55,2.457]],["title/injectables/AnswerService.html",[56,1.236,57,2.244]],["body/injectables/AnswerService.html",[0,0.128,3,0.16,4,0.16,5,0.142,7,0.632,11,0.198,12,0.364,15,0.3,16,0.018,17,0.812,18,0.299,19,0.299,20,0.366,27,0.16,28,1.429,29,1.428,35,0.011,36,0.033,37,2.755,40,3.319,50,1.724,53,3.776,54,3.3,56,1.567,57,2.845,58,1.767,59,2.884,60,2.523,61,1.243,62,3.086,63,0.938,64,4.736,65,4.736,66,4.736,67,4.736,68,5.971,69,4.736,70,1.377,71,1.882,72,3.354,73,3.35,74,2.499,75,3.324,76,2.845,77,1.234,78,0.855,79,1.234,80,4.736,81,3.35,82,2.109,83,4.077,84,1.419,85,3.624,86,4.736,87,3.35,88,2.845,89,3.319,90,4.226,91,4.736,92,4.736,93,3.35,94,4.736,95,4.736,96,3.35,97,4.077,98,3.35,99,2.226,100,3.35,101,3.35,102,3.643,103,2.66,104,2.66,105,4.736,106,3.35,107,2.66,108,2.355,109,2.66,110,1.132,111,2.164,112,3.587,113,1.767,114,0.572,115,1.882,116,2.347,117,1.575,118,2.347,119,1.666,120,1.882,121,1.666,122,1.575,123,3.673,124,0.921,125,6.3,126,4.736,127,2.269,128,2.577,129,3.35,130,3.3,131,1.818,132,1.656,133,3.3,134,1.902,135,3.539,136,3.35,137,3.35,138,3.35,139,3.35,140,3.35,141,3.35,142,3.35,143,3.35]],["title/components/AppComponent.html",[144,0.546,145,1.126]],["body/components/AppComponent.html",[0,0.13,3,0.162,4,0.162,5,0.144,7,0.641,9,2.377,11,0.2,12,0.367,15,0.254,16,0.018,17,0.394,18,0.494,19,0.566,20,0.368,22,1.238,27,0.162,28,1.324,35,0.011,36,0.034,44,2.02,45,1.297,60,2.538,61,0.891,63,0.947,70,0.851,77,0.641,78,0.724,79,0.641,82,2.128,84,0.947,110,0.859,114,0.58,122,2.247,124,0.933,132,1.441,144,0.925,145,1.811,146,1.582,147,1.178,148,1.178,149,1.178,150,1.178,151,2.921,152,4.115,153,4.779,154,1.023,155,2.604,156,2.483,157,1.658,158,5.533,159,1.658,160,4.779,161,5.533,162,5.533,163,4.87,164,6.748,165,1.324,166,4.091,167,6.567,168,3.394,169,3.945,170,4.779,171,3.394,172,1.658,173,3.394,174,2.128,175,4.779,176,6.006,177,6.331,178,5.45,179,6.006,180,4.779,181,4.779,182,3.394,183,4.763,184,4.115,185,4.779,186,3.394,187,4.115,188,4.779,189,2.823,190,3.394,191,2.247,192,3.394,193,1.235,194,3.394,195,3.394,196,4.115,197,4.779,198,3.394,199,3.394,200,3.394,201,3.394,202,2.61,203,3.677,204,3.677,205,3.349,206,4.779,207,4.779,208,4.779,209,4.779,210,3.677,211,2.128,212,4.779,213,3.349,214,4.115,215,2.193,216,1.434,217,1.906,218,1.92,219,1.827,220,3.394,221,1.178,222,1.658,223,1.658,224,2.084,225,1.178,226,1.235,227,0.977,228,1.235,229,0.977,230,1.072,231,1.235,232,0.977,233,0.891,234,1.74,235,0.977,236,1.235,237,0.977,238,1.235,239,0.977,240,1.235,241,0.977,242,1.235,243,0.977,244,1.123,245,1.74,246,0.977,247,0.933,248,1.235,249,0.977,250,0.977,251,1.235,252,0.977,253,1.235,254,0.977,255,1.235,256,0.977,257,1.235,258,1.235,259,1.235]],["title/modules/AppModule.html",[260,2.873,261,2.618]],["body/modules/AppModule.html",[0,0.134,3,0.167,4,0.167,5,0.148,16,0.018,22,1.192,27,0.167,35,0.011,36,0.034,110,1.376,113,1.845,114,0.598,145,2.196,156,1.158,227,1.909,229,1.909,230,1.105,232,1.909,233,0.918,235,1.909,237,1.909,239,1.909,241,1.909,243,1.909,244,1.158,246,1.909,247,1.823,249,1.909,250,1.909,252,1.909,254,1.909,256,1.909,261,5.501,262,2.26,263,3.421,264,3.011,265,3.011,266,3.011,267,3.011,268,4.285,269,4.285,270,4.397,271,4.285,272,4.203,273,3.011,274,2.451,275,3.498,276,4.882,277,4.203,278,4.882,279,4.203,280,4.882,281,3.011,282,2.691,283,4.882,284,1.74,285,4.882,286,3.498,287,3.498,288,3.011,289,2.451,290,3.011,291,3.011,292,2.451,293,4.203,294,3.011,295,2.451,296,4.203,297,3.011,298,3.498,299,2.451,300,2.451,301,3.011,302,2.451,303,3.011,304,3.498,305,3.498,306,2.451,307,3.011,308,3.011,309,2.451,310,2.451,311,3.011,312,3.498,313,3.498,314,3.011,315,3.498]],["title/modules/AppRoutingModule.html",[260,2.873,271,2.414]],["body/modules/AppRoutingModule.html",[0,0.154,3,0.192,4,0.192,5,0.17,8,2.119,16,0.018,20,0.214,22,1.339,27,0.256,35,0.012,36,0.038,60,1.697,82,1.788,110,1.378,114,0.686,144,1.106,152,3.457,169,2.412,193,1.462,203,4.127,210,3.089,211,1.788,227,1.544,229,1.544,230,1.694,232,1.544,233,1.408,235,1.544,237,1.544,239,1.544,241,1.544,243,1.544,244,1.329,246,1.544,247,1.475,249,1.156,250,1.544,252,1.544,254,1.544,256,1.544,260,3.089,262,2.595,271,3.466,277,3.457,279,4.618,288,3.457,289,2.814,290,3.457,291,3.457,292,2.814,293,4.618,294,3.457,295,2.814,296,4.618,297,3.457,299,2.814,300,2.814,301,3.457,302,2.814,303,3.457,306,2.814,307,3.457,308,3.457,309,2.814,310,2.814,311,3.457,314,3.457,316,4.015,317,4.015,318,5.364,319,4.519,320,4.845,321,4.015,322,4.015,323,4.234,324,4.015,325,7.625,326,4.015,327,3.089,328,3.089,329,5.43,330,2.814,331,2.814,332,4.015,333,5.364,334,4.015,335,3.089,336,4.015,337,4.015,338,4.015,339,4.015,340,4.015,341,4.015,342,3.089,343,3.457,344,4.015,345,4.015,346,4.015]],["title/pipes/BookFilterPipe.html",[134,1.5,268,2.414]],["body/pipes/BookFilterPipe.html",[0,0.206,3,0.257,4,0.257,5,0.228,15,0.228,16,0.018,17,0.804,20,0.287,22,1.289,27,0.257,35,0.015,36,0.045,63,1.064,77,1.014,78,0.904,79,1.014,84,1.064,99,3.033,110,1.159,114,0.918,127,2.239,134,2.591,154,1.619,268,4.169,347,3.764,348,5.554,349,4.624,350,6.452,351,3.226,352,5.554,353,5.954,354,5.371,355,4.963,356,2.525,357,1.955,358,4.624,359,4.624,360,5.371]],["title/classes/Bookmark.html",[0,0.143,9,1.858]],["body/classes/Bookmark.html",[0,0.228,1,2.652,2,1.359,3,0.226,4,0.226,5,0.2,6,3.632,7,0.891,8,2.491,9,3.647,10,2.068,11,0.279,12,0.458,13,2.669,14,2.803,15,0.291,16,0.018,17,0.862,18,0.613,19,0.613,20,0.366,22,1.173,23,5.622,24,5.622,26,4.22,27,0.285,28,1.426,29,1.797,30,2.063,31,2.518,32,2.161,33,1.299,34,1.299,35,0.014,36,0.042,361,4.721,362,4.721,363,4.721,364,4.721]],["title/injectables/BookmarkService.html",[56,1.236,365,2.098]],["body/injectables/BookmarkService.html",[0,0.152,1,3.601,3,0.189,4,0.189,5,0.168,7,0.747,9,3.798,11,0.234,12,0.408,14,2.031,15,0.292,16,0.018,17,0.745,18,0.354,19,0.354,20,0.357,27,0.189,29,1.602,35,0.012,36,0.037,56,1.759,58,2.089,60,2.246,61,1.395,62,3.369,63,1.053,70,1.504,71,2.224,72,3.601,74,2.804,75,3.528,76,3.192,77,1.21,78,0.838,79,1.21,84,1.364,85,3.498,88,3.192,103,2.985,104,2.985,107,2.985,108,2.643,109,2.985,110,1.202,112,3.192,113,2.089,114,0.677,115,2.224,116,2.775,117,1.861,119,1.969,120,2.224,121,1.969,122,1.861,123,3.601,124,1.089,127,2.32,130,2.378,131,1.311,132,1.194,133,2.378,134,1.59,135,3.369,165,1.534,335,4.088,365,2.985,366,3.409,367,5.314,368,5.314,369,5.314,370,3.96,371,5.314,372,3.96,373,5.314,374,3.96,375,3.724,376,5.314,377,3.96,378,4.575,379,5.314,380,3.96,381,2.775,382,3.96,383,5.314,384,3.96,385,3.96,386,3.96]],["title/components/BookmarksComponent.html",[144,0.546,227,1.075]],["body/components/BookmarksComponent.html",[0,0.118,3,0.148,4,0.148,5,0.131,9,2.863,11,0.264,12,0.343,15,0.278,16,0.018,17,0.669,18,0.514,19,0.546,20,0.359,22,1.302,27,0.148,33,1.145,34,1.145,35,0.01,36,0.031,61,0.812,63,0.886,70,0.775,77,0.992,78,0.799,79,0.992,84,1.041,99,2.871,110,1.144,114,0.528,124,0.85,132,1.348,144,0.768,145,0.932,146,1.48,147,1.073,148,1.073,149,1.073,150,1.073,154,0.932,155,2.573,156,2.454,157,1.552,159,1.552,165,1.524,166,2.89,172,1.823,178,2.661,183,2.661,216,1.89,218,1.796,219,2.2,221,1.073,222,1.552,223,1.552,224,1.998,225,1.073,226,1.125,227,1.657,228,1.125,229,0.89,230,0.976,231,1.125,232,0.89,233,0.812,234,1.628,235,0.89,236,1.125,237,0.89,238,1.125,239,0.89,240,1.125,241,0.89,242,1.125,243,0.89,244,1.023,245,1.628,246,0.89,247,0.85,248,1.125,249,0.89,250,0.89,251,1.125,252,0.89,253,1.125,254,0.89,255,1.125,256,0.89,257,1.125,258,1.125,259,1.125,335,5.27,356,1.453,357,1.628,365,3.576,381,2.167,387,2.661,388,2.339,389,5.254,390,4.472,391,4.523,392,2.433,393,4.472,394,3.091,395,3.086,396,4.472,397,3.091,398,4.472,399,4.523,400,3.091,401,2.661,402,3.091,403,3.091,404,3.091,405,4.472,406,3.091,407,2.661,408,3.091,409,2.167,410,1.737,411,1.242,412,1.377,413,3.091,414,3.091,415,1.377,416,3.091,417,3.091,418,3.091,419,3.091,420,3.091,421,3.091,422,2.224,423,2.661,424,4.472,425,4.472,426,3.44,427,1.377,428,1.242,429,1.631,430,2.794,431,3.431,432,3.431,433,3.431,434,1.453,435,3.223,436,1.737,437,2.102,438,2.22,439,2.706,440,3.037,441,2.22,442,1.796,443,1.991,444,2.512,445,2.11,446,1.737,447,1.737,448,1.796,449,1.631,450,1.857,451,1.857,452,1.857,453,1.453,454,1.453,455,1.453,456,1.453,457,1.737,458,1.737,459,1.538,460,2.359,461,1.377,462,1.306,463,1.538,464,1.377,465,1.377,466,3.44,467,1.857,468,2.224,469,1.857,470,2.378,471,2.378]],["title/classes/Category.html",[0,0.143,472,1.756]],["body/classes/Category.html",[0,0.2,2,1.506,3,0.25,4,0.25,5,0.222,7,0.988,10,1.816,11,0.309,12,0.488,15,0.29,16,0.018,17,0.827,18,0.611,19,0.651,20,0.365,27,0.25,28,1.52,29,1.915,30,2.16,31,2.684,32,2.263,33,1.384,34,1.384,35,0.015,36,0.045,78,0.894,472,3.425,473,4.505,474,5.233,475,5.233,476,5.233]],["title/classes/CreateQuiz.html",[0,0.143,477,2.244]],["body/classes/CreateQuiz.html",[0,0.187,2,1.003,3,0.167,4,0.167,5,0.148,7,1.309,10,1.69,11,0.206,12,0.374,15,0.316,16,0.019,17,0.872,18,0.629,19,0.629,20,0.376,22,1.386,27,0.233,28,0.834,29,1.051,30,1.101,31,1.473,32,1.153,33,1.556,34,1.482,35,0.011,36,0.034,44,2.372,45,2.145,51,2.254,78,0.889,82,1.552,89,3.933,108,1.733,472,3.196,477,2.925,478,2.681,479,5.23,480,4.674,481,5.23,482,2.856,483,3.926,484,3.485,485,2.372,486,3.485,487,3.485,488,4.832,489,3.485,490,3.485,491,3.485,492,3.485,493,4.317,494,4.317,495,4.317,496,3.485,497,3.627,498,4.832,499,3.485,500,4.832,501,4.832,502,4.832,503,3.746]],["title/classes/CreateUser.html",[0,0.143,504,1.971]],["body/classes/CreateUser.html",[0,0.26,2,0.998,3,0.166,4,0.166,5,0.147,7,0.655,10,1.203,11,0.205,12,0.373,15,0.28,16,0.019,17,0.888,18,0.591,19,0.591,20,0.353,27,0.29,28,0.83,29,1.046,30,1.095,32,1.148,33,1.51,34,1.391,35,0.011,36,0.034,78,0.793,165,1.725,211,1.544,482,3.191,485,1.466,504,3.199,505,2.241,506,3.617,507,3.923,508,2.954,509,3.617,510,3.136,511,3.803,512,3.833,513,3.584,514,4.228,515,3.714,516,3.468,517,4.241,518,4.472,519,3.468,520,3.642,521,3.468,522,3.468,523,3.923,524,3.468,525,3.468,526,2.241,527,2.241,528,2.43,529,2.56,530,2.241,531,2.56]],["title/components/EditProfileComponent.html",[144,0.546,229,1.075]],["body/components/EditProfileComponent.html",[0,0.087,3,0.108,4,0.108,5,0.096,7,0.427,11,0.133,12,0.271,14,0.864,15,0.184,16,0.018,18,0.202,19,0.202,20,0.349,22,1.016,27,0.108,35,0.008,36,0.025,60,1.493,61,1.141,63,0.7,70,1.09,74,1.864,77,0.427,78,0.697,79,0.427,82,1.573,84,1.336,110,0.958,114,0.386,127,1.962,131,2.258,132,0.681,144,0.635,145,0.681,146,1.169,147,0.784,148,0.784,149,0.784,150,0.784,154,0.681,155,2.452,156,2.339,157,1.226,159,1.226,165,1.567,172,0.784,174,1.573,191,1.062,215,2.282,216,2.077,217,1.984,218,0.908,219,1.878,221,0.784,222,1.226,223,1.226,224,1.705,225,0.784,226,0.823,227,0.651,228,0.823,229,1.415,230,1.984,231,0.823,232,0.651,233,0.593,234,1.286,235,0.651,236,0.823,237,0.651,238,0.823,239,0.651,240,0.823,241,0.651,242,0.823,243,0.651,244,0.748,245,1.286,246,0.651,247,0.621,248,0.823,249,0.651,250,0.651,251,0.823,252,0.651,253,0.823,254,0.651,255,0.823,256,0.651,257,0.823,258,0.823,259,0.823,284,1.124,289,4.661,327,1.739,331,2.475,411,0.908,422,1.124,427,2.375,428,1.419,429,1.192,430,2.629,431,2.995,432,2.995,433,2.995,434,1.062,435,2.814,436,1.269,437,2.31,438,2.254,439,2.31,440,2.593,441,1.837,442,1.419,443,1.573,444,1.984,445,2.142,446,1.269,447,1.269,448,1.419,449,1.192,453,1.062,454,1.062,455,1.062,456,1.062,457,1.269,458,1.269,459,1.124,460,1.864,461,1.006,462,0.955,463,1.124,464,1.006,465,1.006,468,1.757,469,1.358,508,3.672,511,3.509,512,1.358,513,3.394,514,3.859,515,3.39,517,1.984,520,2.122,529,1.864,532,5.726,533,1.946,534,4.348,535,3.532,536,4.348,537,2.809,538,3.737,539,3.256,540,4.915,541,2.717,542,5.085,543,5.085,544,1.584,545,2.26,546,3.532,547,4.231,548,3.041,549,2.26,550,2.995,551,3.788,552,4.298,553,2.717,554,2.717,555,2.995,556,3.047,557,2.26,558,2.717,559,2.717,560,2.717,561,2.717,562,2.26,563,3.532,564,2.717,565,2.475,566,2.26,567,1.946,568,2.26,569,4.661,570,1.946,571,2.26,572,1.946,573,2.26,574,1.739,575,2.26,576,1.739,577,2.26,578,1.946,579,2.26,580,1.358,581,1.946,582,1.946,583,2.26,584,2.26,585,2.26,586,2.26,587,2.26,588,2.26,589,2.26,590,2.26,591,2.26,592,1.946,593,1.946,594,1.946,595,1.946,596,1.946,597,1.946,598,1.946,599,2.26,600,1.739,601,2.26,602,1.946,603,2.26,604,2.26,605,2.26,606,2.26,607,2.26,608,2.26,609,2.26,610,5.117,611,2.717,612,2.717,613,3.041,614,1.584,615,3.041,616,1.946,617,1.946,618,1.946,619,1.46,620,1.062,621,1.66,622,1.062,623,1.062,624,1.006,625,1.062,626,3.047,627,1.739,628,1.739,629,1.864,630,2.475,631,1.739,632,1.739,633,1.739,634,1.739,635,1.739,636,1.739,637,1.739,638,1.739,639,1.739,640,2.122,641,2.475,642,1.584,643,2.717,644,1.584,645,1.358,646,1.358,647,1.584]],["title/guards/EditProfileGuard.html",[320,2.618,648,2.873]],["body/guards/EditProfileGuard.html",[0,0.184,3,0.23,4,0.23,5,0.204,7,0.908,11,0.284,15,0.204,16,0.018,20,0.257,27,0.23,35,0.014,36,0.042,44,2.548,45,1.838,47,3.896,56,1.995,60,2.548,61,1.583,63,1.195,77,0.908,78,0.629,79,0.908,84,1.195,85,3.275,110,1.183,114,0.822,117,2.26,121,2.391,122,2.26,123,3.386,127,2.092,165,1.576,174,2.685,189,2.26,191,2.26,193,1.75,320,4.225,329,5.47,357,1.75,565,4.225,649,3.699,650,5.19,651,4.14,652,4.14,653,5.944,654,5.944,655,5.944,656,4.809,657,6.029,658,6.029,659,3.275,660,5.19,661,5.67,662,4.14,663,2.537,664,3.107,665,4.14,666,4.809,667,4.14,668,4.809,669,4.809]],["title/classes/EditUser.html",[0,0.143,529,1.971]],["body/classes/EditUser.html",[0,0.261,2,1.017,3,0.169,4,0.169,5,0.15,7,0.667,10,1.226,11,0.209,12,0.378,15,0.272,16,0.019,17,0.889,18,0.574,19,0.574,20,0.343,27,0.292,28,0.845,29,1.065,30,1.116,32,1.169,33,1.45,34,1.332,35,0.011,36,0.034,78,0.799,165,1.713,211,1.573,482,2.873,485,1.493,504,2.594,505,2.283,506,3.653,507,3.962,508,2.983,509,3.653,510,2.283,511,3.816,512,3.859,513,3.597,514,4.246,515,3.729,517,4.25,518,4.503,520,3.671,523,3.445,526,2.283,527,2.283,528,2.476,529,3.225,530,3.176,531,2.594,670,3.532,671,3.532,672,3.532,673,3.532,674,3.532]],["title/classes/FRIEND.html",[0,0.143,233,0.981]],["body/classes/FRIEND.html",[0,0.209,2,1.57,3,0.261,4,0.261,5,0.231,11,0.322,12,0.5,14,2.66,15,0.295,16,0.018,17,0.869,18,0.622,19,0.622,20,0.372,27,0.261,30,2.199,35,0.015,36,0.046,233,1.709,675,4.694,676,5.355,677,5.453,678,5.453,679,5.453]],["title/pipes/FilterFriendsPipe.html",[134,1.5,269,2.414]],["body/pipes/FilterFriendsPipe.html",[0,0.205,3,0.256,4,0.256,5,0.227,15,0.227,16,0.018,17,0.803,20,0.286,27,0.256,35,0.015,36,0.045,63,1.06,77,1.01,78,0.903,79,1.01,84,1.06,110,1.157,114,0.914,127,2.234,134,2.586,154,1.613,211,2.867,233,1.994,269,4.16,347,3.75,351,3.214,355,4.952,357,1.948,680,5.542,681,4.606,682,6.437,683,6.437,684,5.35,685,4.116,686,5.35,687,5.35,688,4.606]],["title/pipes/FilterPipe.html",[134,1.5,270,2.414]],["body/pipes/FilterPipe.html",[0,0.204,3,0.255,4,0.255,5,0.226,15,0.226,16,0.018,17,0.801,20,0.284,22,1.286,27,0.255,35,0.015,36,0.045,63,1.056,77,1.006,78,0.902,79,1.006,84,1.056,99,3.019,110,1.154,114,0.911,127,2.229,134,2.58,154,1.607,270,4.15,347,3.736,351,3.202,352,5.529,353,6.305,355,4.941,356,2.506,357,1.94,358,4.589,359,4.589,624,2.86,689,4.589,690,5.33,691,4.589,692,5.33]],["title/components/FriendInfoComponent.html",[144,0.546,232,1.075]],["body/components/FriendInfoComponent.html",[0,0.11,3,0.241,4,0.137,5,0.122,11,0.17,12,0.326,15,0.272,16,0.018,18,0.45,19,0.45,20,0.359,22,1.115,27,0.137,28,1.206,35,0.01,36,0.03,51,1.154,61,0.754,63,0.84,70,0.72,77,0.542,78,0.811,79,0.542,84,0.569,110,1.115,114,0.491,124,0.79,131,1.403,132,1.278,144,0.736,145,0.866,146,1.403,147,0.997,148,0.997,149,0.997,150,0.997,154,0.866,155,2.547,156,2.429,157,1.471,159,1.471,163,2.21,165,1.66,172,0.997,191,1.993,193,1.046,205,2.971,216,2.506,218,1.702,219,2.453,221,0.997,222,1.471,223,1.471,224,1.929,225,0.997,226,1.046,227,0.827,228,1.046,229,0.827,230,0.907,231,1.046,232,1.601,233,1.729,234,1.543,235,0.827,236,1.046,237,0.827,238,1.046,239,0.827,240,1.046,241,0.827,242,1.046,243,0.827,244,0.951,245,1.543,246,0.827,247,0.79,248,1.046,249,0.827,250,0.827,251,1.046,252,0.827,253,1.046,254,0.827,255,1.046,256,0.827,257,1.046,258,1.046,259,1.046,309,4.793,342,2.21,351,3.34,365,1.614,392,2.35,409,2.014,411,1.154,412,2.476,415,1.279,422,1.429,428,1.702,429,1.516,430,2.646,431,3.331,432,3.331,433,3.331,434,2.368,435,3.129,436,1.614,437,1.993,438,2.129,439,2.614,440,2.934,441,2.129,442,2.233,443,2.476,444,2.381,445,2.382,446,1.614,447,1.614,448,1.702,453,1.351,457,1.614,458,1.614,459,1.429,460,2.237,461,1.279,462,2.129,463,1.429,464,2.243,465,1.888,468,1.429,482,1.993,485,1.791,537,1.857,620,1.351,621,1.993,622,1.351,623,1.351,624,1.279,625,1.351,629,1.516,645,3.026,646,1.726,659,2.108,663,1.516,693,5.888,694,2.21,695,4.336,696,3.649,697,2.829,698,5.037,699,3.255,700,2.014,701,3.123,702,3.832,703,4.239,704,2.474,705,3.255,706,2.873,707,2.474,708,2.474,709,2.474,710,2.873,711,2.474,712,2.474,713,2.21,714,2.873,715,1.857,716,1.614,717,3.875,718,1.726,719,2.014,720,2.873,721,2.014,722,2.21,723,2.873,724,2.873,725,2.873,726,3.261,727,4.239,728,4.239,729,4.239,730,4.239,731,4.239,732,2.971,733,2.873,734,2.873,735,2.873,736,3.649,737,3.649,738,3.34,739,2.873,740,2.873,741,3.875,742,2.873,743,2.739,744,2.873,745,2.873,746,1.857,747,2.474,748,2.21,749,2.873,750,2.873,751,2.873,752,2.474,753,2.21,754,1.857,755,1.614,756,1.857,757,2.014,758,1.857]],["title/components/FriendsComponent.html",[144,0.546,235,1.075]],["body/components/FriendsComponent.html",[0,0.105,3,0.131,4,0.131,5,0.116,8,2.589,11,0.162,12,0.315,15,0.268,16,0.018,17,0.71,18,0.52,19,0.565,20,0.371,22,1.097,27,0.131,28,1.393,33,1.069,34,1.186,35,0.01,36,0.029,45,1.05,61,0.722,63,0.813,70,0.689,77,0.926,78,0.761,79,0.926,84,1.153,110,1.097,114,0.47,124,0.756,131,1.801,132,1.237,144,0.717,145,0.829,146,1.357,147,0.954,148,0.954,149,0.954,150,0.954,154,0.829,155,2.531,156,2.414,157,1.423,159,1.423,165,1.514,166,2.65,172,2.118,191,1.928,211,3.13,216,1.733,218,1.647,219,2.079,221,0.954,222,1.423,223,1.423,224,1.888,225,0.954,226,1,227,0.791,228,1,229,0.791,230,0.868,231,1,232,0.791,233,1.826,234,1.493,235,1.566,236,1,237,0.791,238,1,239,0.791,240,1,241,0.791,242,1,243,0.791,244,0.91,245,1.493,246,0.791,247,0.756,248,1,249,0.791,250,0.791,251,1,252,0.791,253,1,254,0.791,255,1,256,0.791,257,1,258,1,259,1,284,1.367,357,1.493,388,2.185,391,4.224,392,2.299,399,4.224,401,3.531,411,1.104,412,1.224,415,1.224,422,1.367,427,1.224,428,1.104,429,1.45,430,2.718,431,3.27,432,3.27,433,3.27,434,1.292,435,3.071,436,1.544,437,1.928,438,2.074,439,2.558,440,2.871,441,2.074,442,1.647,443,1.826,444,2.304,445,1.971,446,1.544,447,1.544,448,1.647,449,1.45,450,1.651,451,1.651,452,1.651,453,1.292,454,1.292,455,1.292,456,1.292,457,1.544,458,1.544,459,1.367,460,2.164,461,1.224,462,1.161,463,1.367,464,1.224,465,1.224,466,3.155,467,1.651,469,1.651,470,2.114,471,2.114,537,3.171,539,3.036,544,1.926,550,2.756,551,2.756,552,2.65,555,1.544,580,1.651,663,1.45,664,1.776,665,2.366,676,2.114,685,2.114,688,3.531,722,2.114,759,2.366,760,4.907,761,4.102,762,4.684,763,4.907,764,4.907,765,5.441,766,5.441,767,4.102,768,4.866,769,4.102,770,2.748,771,2.748,772,2.748,773,4.102,774,2.748,775,2.748,776,2.748,777,2.748,778,2.748,779,4.102,780,2.748,781,2.748,782,2.748,783,2.366,784,2.748,785,2.748,786,2.748,787,2.748,788,2.748,789,2.748,790,2.748,791,2.748,792,2.748,793,2.748,794,2.748,795,2.366,796,2.748,797,2.748,798,2.748,799,2.366,800,2.748,801,2.748,802,2.748,803,2.114,804,2.366,805,2.748,806,2.748,807,2.748,808,2.748,809,2.748,810,2.748,811,2.114,812,2.114,813,2.748,814,2.366,815,2.366,816,2.748,817,4.102,818,3.531]],["title/classes/History.html",[0,0.143,697,2.098]],["body/classes/History.html",[0,0.242,2,1.49,3,0.247,4,0.247,5,0.219,11,0.306,12,0.485,13,2.579,14,2.708,15,0.288,16,0.018,17,0.878,18,0.608,19,0.608,20,0.363,27,0.302,30,1.635,32,1.713,33,1.544,34,1.544,35,0.015,36,0.044,485,2.994,697,3.544,705,3.344,819,3.981,820,5.175,821,5.175,822,5.175,823,4.456]],["title/classes/HistoryArr.html",[0,0.143,705,2.414]],["body/classes/HistoryArr.html",[0,0.233,2,1.406,3,0.233,4,0.233,5,0.207,11,0.288,12,0.468,13,2.527,14,2.653,15,0.309,16,0.018,17,0.881,18,0.651,19,0.651,20,0.389,27,0.291,30,2.095,32,2.195,33,1.557,34,1.557,35,0.014,36,0.043,485,2.934,697,2.743,705,3.933,819,3.756,823,5.709,824,4.883,825,4.883,826,4.883,827,4.883,828,4.883,829,4.883]],["title/injectables/HistoryService.html",[56,1.236,702,2.414]],["body/injectables/HistoryService.html",[0,0.166,3,0.207,4,0.207,5,0.184,11,0.256,12,0.434,14,2.54,15,0.305,16,0.018,17,0.836,18,0.388,19,0.388,20,0.368,22,1.015,27,0.207,33,1.368,35,0.013,36,0.04,56,1.869,58,2.29,62,3.525,63,1.119,70,1.088,71,2.438,72,3.734,75,2.979,77,1.255,78,0.869,79,1.255,84,1.244,85,3.577,103,3.172,104,3.525,107,3.172,108,2.808,109,3.172,110,1.238,112,3.77,113,2.29,114,0.742,115,2.438,117,2.04,119,2.158,120,2.438,121,2.158,122,2.04,124,1.193,127,2.178,130,3.392,131,1.869,132,1.702,133,3.392,134,2.268,135,3.172,697,3.871,702,3.648,713,3.338,830,3.736,831,5.646,832,5.646,833,5.646,834,4.34,835,5.646,836,4.34,837,5.646,838,4.34,839,5.646,840,4.34,841,4.34,842,5.646,843,4.34,844,4.34,845,4.34,846,3.736,847,4.34,848,4.34,849,4.34,850,4.34]],["title/components/HomeComponent.html",[144,0.546,237,1.075]],["body/components/HomeComponent.html",[0,0.109,1,2.36,3,0.136,4,0.136,5,0.12,8,1.498,9,2.749,11,0.168,12,0.384,13,1.033,14,1.085,15,0.278,16,0.018,17,0.743,18,0.527,19,0.599,20,0.369,22,1.339,27,0.136,35,0.01,36,0.029,61,0.745,63,0.833,70,0.712,77,1.043,78,0.808,79,1.043,84,1.169,88,1.705,99,2.774,102,2.184,110,1.205,114,0.485,124,0.78,132,0.856,144,0.808,145,0.856,146,1.391,147,0.985,148,0.985,149,0.985,150,0.985,154,0.856,155,2.542,156,2.425,157,1.458,159,1.458,165,1.479,169,3.544,172,2.047,191,1.975,193,1.033,202,2.184,203,4.539,205,2.944,216,2.336,218,1.14,219,1.085,221,0.985,222,1.458,223,1.458,224,1.918,225,0.985,226,1.033,227,0.817,228,1.033,229,0.817,230,0.897,231,1.033,232,0.817,233,0.745,234,1.529,235,0.817,236,1.033,237,1.591,238,1.033,239,0.817,240,1.033,241,0.817,242,1.033,243,0.817,244,0.94,245,1.529,246,0.817,247,0.78,248,1.033,249,0.817,250,0.817,251,1.033,252,0.817,253,1.033,254,0.817,255,1.033,256,0.817,257,1.033,258,1.033,259,1.033,356,1.334,357,1.529,365,3.591,381,1.99,388,2.227,392,2.336,395,2.904,407,2.444,409,1.99,410,1.595,411,1.14,412,2.227,415,2.227,426,3.232,428,1.14,430,1.14,434,1.975,438,1.2,441,1.2,442,1.687,445,1.14,448,1.14,462,1.2,468,1.412,472,2.351,537,2.715,539,2.934,565,2.944,580,1.705,620,1.334,621,1.975,622,1.334,623,1.334,624,1.264,625,1.334,629,1.498,645,1.705,663,1.498,664,1.834,691,4.306,719,1.99,721,1.99,732,2.944,741,3.232,753,2.184,754,1.834,755,1.595,756,1.834,757,1.99,758,1.834,811,2.184,851,2.444,852,5.001,853,4.201,854,5.001,855,5.528,856,5.528,857,3.617,858,4.201,859,5.528,860,4.201,861,2.184,862,2.839,863,3.617,864,2.839,865,4.201,866,2.839,867,2.839,868,2.839,869,4.201,870,2.839,871,2.839,872,2.839,873,2.839,874,2.839,875,2.839,876,1.99,877,2.444,878,3.004,879,2.839,880,2.839,881,2.839,882,2.444,883,2.839,884,2.839,885,2.444,886,2.839,887,2.839,888,4.306,889,2.839,890,2.839,891,2.839,892,2.444,893,2.444,894,2.444,895,2.444,896,2.444,897,3.617,898,2.184,899,2.184,900,1.99,901,2.444,902,2.839,903,2.839,904,4.201,905,2.839,906,2.839,907,2.839,908,2.839,909,2.839,910,2.839,911,2.839,912,2.839,913,2.839,914,4.201,915,4.201,916,3.617]],["title/components/LeaderboardComponent.html",[144,0.546,239,1.075]],["body/components/LeaderboardComponent.html",[0,0.133,3,0.166,4,0.166,5,0.147,11,0.205,12,0.373,15,0.237,16,0.018,18,0.433,19,0.433,20,0.341,22,1.188,27,0.166,33,1.058,34,1.058,35,0.011,36,0.034,61,0.91,63,0.962,70,0.869,77,0.655,78,0.732,79,0.655,84,0.962,110,1.006,114,0.593,124,0.953,144,0.818,145,1.046,146,1.606,147,1.203,148,1.203,149,1.203,150,1.203,154,1.046,155,2.61,156,2.49,157,1.684,159,1.684,165,1.34,172,1.684,210,4.306,219,1.855,221,1.203,222,1.684,223,1.684,224,2.104,225,1.203,226,1.262,227,0.998,228,1.262,229,0.998,230,1.095,231,1.262,232,0.998,233,0.91,234,1.766,235,0.998,236,1.262,237,0.998,238,1.262,239,1.745,240,1.262,241,0.998,242,1.262,243,0.998,244,1.148,245,1.766,246,0.998,247,0.953,248,1.262,249,0.998,250,0.998,251,1.262,252,0.998,253,1.262,254,0.998,255,1.262,256,0.998,257,1.262,258,1.262,259,1.262,331,3.401,357,1.766,388,2.493,392,2.562,411,1.393,415,1.544,422,2.413,428,1.393,429,1.83,430,2.895,431,3.585,432,3.585,433,3.585,434,1.63,435,3.367,436,1.948,437,2.281,438,2.051,439,2.85,440,3.199,441,2.051,442,1.949,443,2.493,444,2.726,445,2.435,446,1.948,447,1.948,448,1.949,449,1.83,450,2.083,451,2.083,452,2.083,453,1.63,454,1.63,455,1.63,456,1.63,457,1.948,458,1.948,459,1.725,460,2.56,461,1.544,462,1.466,463,1.725,464,1.544,465,1.544,467,2.083,482,2.281,485,2.366,515,2.56,517,3.144,738,2.083,917,2.985,918,5.598,919,4.853,920,6.063,921,3.468,922,4.635,923,4.853,924,3.468,925,3.468,926,3.468,927,3.468,928,3.468,929,3.468,930,3.468,931,3.468,932,4.853,933,3.401,934,3.401,935,4.853,936,6.063,937,4.178,938,4.853,939,2.43,940,3.468,941,3.468,942,3.468,943,3.468,944,2.985]],["title/injectables/LeaderboardService.html",[56,1.236,922,2.618]],["body/injectables/LeaderboardService.html",[0,0.192,3,0.239,4,0.239,5,0.212,11,0.295,12,0.475,15,0.262,16,0.018,17,0.582,18,0.447,19,0.447,20,0.358,27,0.239,35,0.014,36,0.043,56,2.045,58,2.64,62,3.766,63,1.224,70,1.254,71,2.81,72,3.933,75,3.26,77,0.944,78,0.654,79,0.944,84,0.991,85,3.334,103,3.471,104,3.471,107,3.471,108,3.073,109,3.471,110,1.293,113,2.64,114,0.855,115,2.81,117,2.352,119,2.488,120,2.81,121,2.488,122,2.352,124,1.375,127,1.736,135,2.81,165,1.197,411,2.009,922,4.33,945,4.307,946,7.002,947,5.003,948,5.003,949,6.179,950,5.003,951,5.003]],["title/components/LoginComponent.html",[144,0.546,241,1.075]],["body/components/LoginComponent.html",[0,0.106,3,0.132,4,0.132,5,0.117,7,0.523,11,0.164,12,0.317,15,0.117,16,0.018,17,0.48,18,0.247,19,0.247,20,0.312,22,1.1,27,0.132,35,0.01,36,0.029,60,1.743,61,1.294,63,0.817,70,1.236,74,2.177,77,0.523,78,0.645,79,0.523,82,1.837,84,1.157,110,1.049,114,0.473,124,0.761,127,1.431,131,2.026,132,0.835,144,0.72,145,0.835,146,1.365,147,0.961,148,0.961,149,0.961,150,0.961,154,0.835,155,2.533,156,2.416,157,1.431,159,1.431,165,1.518,169,4.001,172,0.961,174,1.837,193,1.008,204,3.173,215,2.666,216,2.308,217,2.317,218,1.112,219,2.087,221,0.961,222,1.431,223,1.431,224,1.895,225,0.961,226,1.008,227,0.797,228,1.008,229,0.797,230,0.875,231,1.008,232,0.797,233,0.727,234,1.502,235,0.797,236,1.008,237,0.797,238,1.008,239,0.797,240,1.008,241,1.572,242,1.008,243,0.797,244,0.917,245,1.502,246,0.797,247,0.761,248,1.008,249,0.797,250,0.797,251,1.008,252,0.797,253,1.008,254,0.797,255,1.008,256,0.797,257,1.008,258,1.008,259,1.008,284,1.378,328,3.173,330,4.751,411,1.112,412,1.233,415,1.233,422,1.378,427,1.233,428,1.657,429,1.461,430,2.763,431,3.28,432,3.28,433,3.28,434,1.302,435,3.081,436,1.556,437,2.567,438,2.468,439,2.567,440,2.882,441,2.083,442,1.657,443,1.837,444,2.317,445,2.346,446,1.556,447,1.556,448,1.657,449,1.461,450,1.664,451,1.664,452,1.664,453,1.302,454,1.302,455,1.302,456,1.302,457,1.556,458,1.556,459,1.378,460,2.177,461,1.233,462,1.171,463,1.378,464,1.233,465,1.233,468,2.052,469,1.664,508,3.23,511,3.749,513,3.464,531,2.177,538,3.455,539,3.045,541,3.173,544,1.941,550,3.28,551,3.28,552,3.529,553,3.173,554,3.173,555,2.769,558,3.173,559,3.173,560,3.173,561,3.173,569,3.828,574,2.131,576,2.131,580,1.664,602,2.385,610,4.201,611,3.173,612,3.173,614,1.941,619,1.79,620,1.302,621,1.939,622,1.302,623,1.302,624,1.233,625,1.302,626,3.455,627,2.131,628,2.131,629,2.177,630,2.891,631,2.131,632,2.131,633,2.131,634,2.131,635,2.131,636,2.131,637,2.131,638,2.131,639,2.131,640,2.478,641,2.891,642,1.941,643,3.173,644,1.941,645,1.664,646,1.664,647,1.941,952,2.385,953,4.929,954,4.125,955,4.929,956,2.77,957,3.173,958,2.77,959,2.77,960,2.77,961,2.77,962,2.77,963,4.125,964,2.77,965,2.385,966,2.77,967,2.77,968,2.77,969,2.77,970,2.77,971,2.77,972,2.77,973,2.77]],["title/guards/LoginGuard.html",[323,2.618,648,2.873]],["body/guards/LoginGuard.html",[0,0.196,3,0.245,4,0.245,5,0.217,11,0.302,15,0.217,16,0.018,20,0.273,27,0.245,35,0.015,36,0.044,44,2.649,45,1.957,56,2.074,63,1.242,77,0.966,78,0.67,79,0.966,84,1.014,85,3.369,110,1.217,114,0.875,117,2.407,121,2.546,122,2.407,127,2.175,165,1.225,189,2.407,191,2.407,193,1.864,323,4.392,329,5.571,357,1.864,649,3.938,652,4.407,653,6.077,654,5.831,655,6.077,659,3.117,660,5.396,661,5.831,662,4.407,663,2.701,664,3.308,803,3.938,974,4.407,975,5.12,976,5.12]],["title/classes/LoginUser.html",[0,0.143,531,1.971]],["body/classes/LoginUser.html",[0,0.26,2,1.078,3,0.179,4,0.179,5,0.159,7,0.707,10,1.776,11,0.221,12,0.393,15,0.217,16,0.019,17,0.888,18,0.457,19,0.457,20,0.273,27,0.3,28,0.897,29,1.129,30,1.183,32,1.24,33,1.476,34,1.366,35,0.012,36,0.036,78,0.763,165,1.689,211,1.668,482,2.946,485,1.583,504,2.701,505,2.421,506,3.308,507,3.587,508,2.701,509,3.308,510,2.421,511,3.857,512,3.502,513,3.636,514,4.068,515,3.574,517,4.249,518,4.598,520,3.502,523,3.587,526,2.421,527,2.421,528,2.625,529,2.701,530,2.421,531,3.306,977,3.746,978,3.746]],["title/components/MasterAnswerComponent.html",[144,0.546,243,1.075]],["body/components/MasterAnswerComponent.html",[0,0.141,3,0.176,4,0.176,5,0.156,11,0.217,12,0.389,13,2.104,15,0.276,16,0.018,17,0.672,18,0.556,19,0.556,20,0.36,22,1.351,27,0.176,33,0.803,35,0.012,36,0.035,37,1.842,51,2.321,61,0.967,63,1.003,70,0.923,77,0.695,78,0.756,79,0.695,84,0.73,110,1.118,114,0.629,124,1.013,131,1.675,144,0.909,145,1.11,146,1.675,147,1.278,148,1.278,149,1.278,150,1.278,154,1.11,155,2.629,156,2.507,157,1.756,159,1.756,165,0.882,172,1.278,193,1.341,221,1.278,222,1.756,223,1.756,224,2.159,225,1.278,226,1.341,227,1.06,228,1.341,229,1.06,230,1.163,231,1.341,232,1.06,233,0.967,234,1.842,235,1.06,236,1.341,237,1.06,238,1.341,239,1.06,240,1.341,241,1.06,242,1.341,243,1.791,244,2.327,245,1.842,246,1.06,247,1.013,248,1.341,249,1.06,250,1.06,251,1.341,252,1.06,253,1.341,254,1.06,255,1.341,256,1.06,257,1.341,258,1.341,259,1.341,299,4.837,356,1.731,357,1.842,388,2.574,392,2.629,395,3.168,410,2.069,412,1.64,415,1.64,434,2.378,497,2.38,659,2.874,701,3.495,716,2.069,718,2.212,861,2.833,877,3.171,878,2.212,979,5.942,980,2.833,981,4.975,982,4.356,983,5.779,984,4.975,985,3.683,986,3.683,987,3.683,988,3.683,989,3.683,990,3.683,991,3.683,992,3.683,993,2.212,994,3.171,995,3.683,996,2.833,997,5.06,998,3.683,999,3.683,1000,5.06,1001,3.683]],["title/classes/NewAnswer.html",[0,0.143,53,2.098]],["body/classes/NewAnswer.html",[0,0.238,2,1.223,3,0.203,4,0.203,5,0.18,7,0.802,10,2.156,11,0.251,12,0.428,15,0.316,16,0.019,17,0.868,18,0.589,19,0.649,20,0.352,26,4.014,27,0.297,28,1.017,29,1.281,30,1.342,31,1.796,32,1.406,33,0.926,34,0.926,35,0.013,36,0.039,37,2.808,38,2.978,39,4.745,40,4.621,44,2.786,45,2.52,47,4.26,48,5.072,50,2.557,51,2.495,53,3.489,54,3.345,55,2.552,1002,4.249,1003,4.249,1004,4.249,1005,4.249]],["title/classes/NewQuestion.html",[0,0.143,1006,2.098]],["body/classes/NewQuestion.html",[0,0.244,2,1.291,3,0.214,4,0.214,5,0.19,7,0.846,10,2.212,11,0.265,12,0.443,13,2.638,15,0.317,16,0.018,17,0.875,18,0.569,19,0.601,20,0.34,27,0.305,28,1.073,29,1.352,30,1.416,31,1.895,32,1.484,33,0.977,34,0.977,35,0.013,36,0.04,37,2.32,50,2.822,51,2.56,55,2.693,131,1.484,427,1.996,1006,3.239,1007,3.142,1008,4.483,1009,4.467,1010,4.483,1011,4.119,1012,4.483,1013,4.904,1014,4.904,1015,2.693]],["title/classes/NewQuestionAnswer.html",[0,0.143,1016,2.618]],["body/classes/NewQuestionAnswer.html",[0,0.194,2,1.456,3,0.242,4,0.242,5,0.214,7,0.954,10,1.754,11,0.299,12,0.478,13,2.627,15,0.298,16,0.018,17,0.854,18,0.628,19,0.628,20,0.375,27,0.242,35,0.014,36,0.044,37,2.627,39,4.353,44,2.628,50,2.758,189,2.924,1009,4.359,1011,4.019,1016,4.359,1017,4.353,1018,4.353,1019,5.056,1020,5.056,1021,5.056,1022,5.056]],["title/classes/Question.html",[0,0.143,50,1.36]],["body/classes/Question.html",[0,0.24,2,1.244,3,0.207,4,0.207,5,0.183,7,0.815,10,2.173,11,0.255,12,0.432,13,2.616,15,0.319,16,0.018,17,0.876,18,0.615,19,0.63,20,0.367,27,0.299,28,1.347,29,1.697,30,1.978,31,2.379,32,2.073,33,1.227,34,1.227,35,0.013,36,0.039,37,2.28,50,2.818,51,2.515,55,2.595,427,1.924,1006,2.427,1007,3.027,1009,4.389,1011,4.047,1013,4.817,1014,4.817,1015,2.595,1023,4.32,1024,4.32,1025,4.32,1026,4.32,1027,4.32]],["title/injectables/QuestionService.html",[56,1.236,1028,2.244]],["body/injectables/QuestionService.html",[0,0.125,3,0.156,4,0.156,5,0.139,7,0.618,11,0.193,12,0.358,15,0.294,16,0.018,17,0.754,18,0.485,19,0.292,20,0.364,22,1.062,27,0.156,28,1.414,29,1.404,35,0.011,36,0.033,50,2.799,56,1.542,58,1.727,60,1.969,61,1.223,62,3.047,63,0.923,70,1.36,71,1.838,72,3.319,74,2.458,75,3.295,76,2.798,77,1.225,78,0.849,79,1.225,82,2.074,84,1.426,85,3.61,88,2.798,89,3.265,90,3.01,99,2.19,102,3.583,103,2.617,104,2.617,107,2.617,108,2.317,109,2.617,110,1.166,111,2.115,112,3.549,113,1.727,114,0.559,115,1.838,116,2.294,117,1.538,119,1.628,120,1.838,121,1.628,122,1.538,123,3.751,124,0.9,127,2.252,128,2.518,130,3.258,131,1.795,132,1.635,133,2.798,134,1.871,135,3.508,378,4.01,472,1.538,876,2.294,993,4.1,1006,3.751,1011,3.01,1015,3.258,1028,2.798,1029,2.817,1030,4.658,1031,4.658,1032,4.658,1033,4.658,1034,5.909,1035,4.658,1036,3.273,1037,4.658,1038,3.273,1039,4.658,1040,3.273,1041,4.658,1042,3.273,1043,4.658,1044,4.658,1045,3.273,1046,4.658,1047,3.273,1048,4.658,1049,3.273,1050,3.273,1051,4.01,1052,4.658,1053,3.273,1054,2.294,1055,5.909,1056,4.658,1057,2.817,1058,3.273,1059,3.273,1060,3.273,1061,3.273,1062,3.273,1063,3.273,1064,3.273,1065,3.273,1066,3.273,1067,3.273]],["title/classes/Quiz.html",[0,0.143,22,0.671]],["body/classes/Quiz.html",[0,0.181,2,0.959,3,0.159,4,0.159,5,0.141,7,1.294,10,1.636,11,0.197,12,0.362,15,0.318,16,0.019,17,0.874,18,0.645,19,0.645,20,0.385,22,1.386,27,0.225,28,1.129,29,1.422,30,1.729,31,1.993,32,1.812,33,1.559,34,1.494,35,0.011,36,0.033,44,2.314,45,2.093,51,2.199,78,0.878,89,3.838,108,2.345,472,3.155,477,2,478,2.562,479,5.163,480,4.581,481,5.163,482,2.8,483,3.848,485,2.314,488,4.714,493,4.212,494,4.212,495,4.212,497,3.538,498,4.714,500,4.714,501,4.714,502,4.714,503,4.835,1068,3.33,1069,3.33,1070,3.33,1071,3.33,1072,3.33,1073,3.33,1074,3.33,1075,3.33,1076,3.33,1077,3.33,1078,3.33,1079,3.33]],["title/components/QuizAnswerComponent.html",[144,0.546,246,1.075]],["body/components/QuizAnswerComponent.html",[0,0.072,3,0.09,4,0.09,5,0.08,7,0.355,8,0.992,11,0.111,12,0.234,13,0.684,14,0.718,15,0.284,16,0.018,17,0.447,18,0.528,19,0.543,20,0.379,22,1.237,27,0.09,33,0.41,34,0.965,35,0.011,36,0.021,37,2.152,44,1.871,45,1.166,50,1.772,51,1.225,57,3.299,60,1.289,61,1.01,63,0.604,70,0.471,77,0.355,78,0.503,79,0.355,84,1.033,90,3.145,110,1.158,114,0.321,118,1.317,124,0.517,131,1.725,132,0.919,144,0.711,145,0.567,146,1.009,147,0.652,148,0.652,149,0.652,150,0.652,154,0.567,155,2.369,156,2.26,157,1.058,159,1.058,165,1.454,172,1.809,174,1.972,189,2.081,191,1.434,193,0.684,213,2.137,216,2.567,217,1.713,218,0.755,219,1.692,221,0.652,222,1.058,223,1.058,224,1.689,225,0.652,226,0.684,227,0.541,228,0.684,229,0.541,230,0.594,231,0.684,232,0.541,233,0.493,234,1.11,235,0.541,236,0.684,237,0.541,238,0.684,239,0.541,240,0.684,241,0.541,242,0.684,243,0.541,244,0.622,245,1.11,246,1.275,247,0.517,248,0.684,249,0.541,250,0.541,251,0.684,252,0.541,253,0.684,254,0.541,255,0.684,256,0.541,257,0.684,258,0.684,259,0.684,274,2.137,284,0.935,292,5.002,356,0.884,357,1.11,388,1.714,392,1.871,395,2.581,410,1.056,411,0.755,412,2.547,422,1.914,427,0.837,428,1.546,430,2.094,437,2.081,438,1.871,439,1.434,441,0.794,442,1.546,443,2.321,445,1.778,448,0.755,449,0.992,450,1.129,451,1.129,452,1.129,453,0.884,454,0.884,455,0.884,456,0.884,461,0.837,462,0.794,464,1.714,465,0.837,467,1.129,468,1.517,483,3.369,485,1.626,497,2.861,550,2.734,551,2.487,555,1.056,620,0.884,621,1.434,622,0.884,623,0.884,624,0.837,625,0.884,629,1.609,640,1.129,659,1.914,663,2.336,697,2.487,699,2.487,701,2.487,702,3.548,712,1.618,713,1.446,715,1.215,716,1.056,718,1.129,719,2.697,721,2.137,738,3.131,743,1.215,746,1.215,748,1.446,754,1.215,755,1.713,756,1.215,757,2.137,758,2.861,762,4.191,768,4.224,783,1.618,812,2.96,814,1.618,815,1.618,818,1.618,878,1.832,933,3.103,934,3.411,937,2.625,939,1.317,980,1.446,981,3.313,982,2.625,993,2.312,1028,3.131,1054,1.317,1080,4.009,1081,2.96,1082,3.313,1083,3.313,1084,3.313,1085,3.313,1086,3.848,1087,3.313,1088,4.191,1089,3.848,1090,4.728,1091,4.191,1092,3.812,1093,3.812,1094,4.428,1095,3.406,1096,3.812,1097,2.625,1098,4.191,1099,1.618,1100,3.05,1101,2.625,1102,1.88,1103,1.88,1104,1.88,1105,2.137,1106,1.88,1107,1.88,1108,1.88,1109,2.346,1110,2.137,1111,2.625,1112,1.88,1113,3.313,1114,1.88,1115,1.88,1116,1.88,1117,2.346,1118,1.88,1119,1.88,1120,1.88,1121,1.88,1122,1.88,1123,1.88,1124,1.88,1125,1.88,1126,1.88,1127,1.88,1128,1.88,1129,2.625,1130,1.88,1131,2.137,1132,1.618,1133,1.446,1134,1.446,1135,2.625,1136,1.88,1137,1.88,1138,1.88,1139,1.618,1140,1.618,1141,2.625,1142,1.618,1143,1.618,1144,1.618,1145,1.618,1146,1.618,1147,1.618,1148,1.618,1149,1.618,1150,1.618,1151,3.313,1152,2.625,1153,1.618,1154,1.618,1155,1.618,1156,2.625,1157,4.191,1158,1.618,1159,1.618,1160,1.618,1161,1.618,1162,1.618,1163,1.618,1164,3.313,1165,2.625,1166,2.625,1167,1.88,1168,3.848,1169,3.05,1170,1.88,1171,1.88,1172,1.618,1173,1.88,1174,1.618,1175,1.446,1176,1.88,1177,1.88,1178,1.88,1179,1.88,1180,1.88,1181,1.88,1182,1.88,1183,1.88,1184,2.625,1185,2.346,1186,3.05,1187,3.745,1188,2.346,1189,2.625,1190,1.618,1191,1.446,1192,1.618,1193,2.625,1194,1.618,1195,1.618,1196,1.618,1197,1.618,1198,1.618,1199,1.618,1200,1.446,1201,1.317,1202,1.317,1203,1.317,1204,1.317,1205,1.215,1206,2.625,1207,1.618,1208,1.618,1209,1.618,1210,1.317,1211,1.88,1212,1.618]],["title/components/QuizCreateComponent.html",[144,0.546,247,1.027]],["body/components/QuizCreateComponent.html",[0,0.09,3,0.066,4,0.066,5,0.058,7,0.581,8,3.217,11,0.139,12,0.18,13,0.855,15,0.243,16,0.018,17,0.273,18,0.513,19,0.485,20,0.335,22,1.342,27,0.066,34,1.22,35,0.005,37,2.426,39,3.076,44,0.993,45,1.391,50,2.552,51,1.912,53,1.32,57,2.86,61,0.361,63,0.466,70,0.345,77,0.443,78,0.535,79,0.443,82,2.235,84,0.883,88,1.411,90,3.509,99,2.095,110,1.032,114,0.235,118,0.963,124,0.378,131,2.355,132,1.58,144,0.45,146,0.455,147,0.477,148,1.419,149,0.477,150,0.477,154,0.414,155,0.815,156,0.778,157,0.815,159,0.815,163,1.057,165,1.34,172,1.546,174,0.612,189,1.711,191,0.646,196,2.022,211,1.621,213,1.646,215,0.888,216,2.365,217,2.943,218,1.79,219,2.29,221,0.477,222,0.815,223,0.815,224,0.477,225,0.477,230,0.742,247,0.646,284,0.684,300,4.455,331,1.646,351,1.411,356,1.104,357,0.855,375,2.156,388,1.37,392,1.538,395,2.095,410,0.772,411,0.552,412,2.235,415,1.37,422,1.53,423,2.649,428,2.181,429,0.725,430,2.521,435,2.512,437,2.238,438,0.993,439,1.104,440,1.24,441,1.538,442,1.462,443,1.984,445,2.307,448,0.944,453,0.646,454,1.104,455,1.104,456,1.104,459,2.216,460,1.24,461,1.046,462,1.3,463,1.168,464,2.12,465,1.984,466,1.807,467,0.826,468,1.81,469,1.848,470,1.057,471,1.057,472,2.238,477,3.262,479,1.057,480,1.057,481,1.057,482,0.646,483,1.988,495,1.807,508,1.24,509,2.352,538,1.646,550,2.674,551,3.611,552,4.197,555,0.772,564,1.057,614,0.963,619,2.642,620,0.646,621,1.104,622,0.646,623,0.646,624,1.37,625,0.646,629,3.031,630,2.551,640,2.456,641,1.646,642,0.963,644,2.156,645,2.677,646,0.826,647,0.963,667,2.022,722,1.057,726,1.057,732,1.646,738,2.456,741,1.057,743,0.888,746,3.076,747,2.022,755,2.674,756,1.518,758,3.076,795,1.183,799,2.022,861,1.057,876,0.963,878,2.186,882,2.022,898,2.8,899,1.057,900,1.646,934,2.551,939,0.963,984,3.52,993,3.529,996,1.057,1006,1.32,1016,3.517,1018,2.022,1028,2.86,1054,0.963,1057,3.134,1080,3.57,1088,2.022,1117,1.807,1131,2.156,1133,1.057,1134,1.057,1172,2.022,1185,1.807,1187,1.057,1188,1.807,1189,2.022,1191,1.057,1200,2.8,1201,0.963,1202,0.963,1204,2.156,1205,1.988,1210,0.963,1213,1.183,1214,3.077,1215,2.349,1216,2.649,1217,3.077,1218,3.077,1219,3.077,1220,3.077,1221,3.64,1222,3.64,1223,3.077,1224,2.349,1225,1.374,1226,1.374,1227,1.374,1228,1.374,1229,1.374,1230,1.374,1231,2.349,1232,1.374,1233,1.374,1234,2.349,1235,2.349,1236,2.349,1237,1.374,1238,2.349,1239,2.349,1240,1.374,1241,1.374,1242,1.374,1243,1.374,1244,1.374,1245,1.374,1246,1.374,1247,1.374,1248,1.374,1249,1.374,1250,2.649,1251,1.374,1252,1.374,1253,2.349,1254,2.022,1255,1.374,1256,1.374,1257,2.649,1258,2.349,1259,1.374,1260,2.349,1261,1.374,1262,3.077,1263,1.374,1264,1.374,1265,1.374,1266,1.374,1267,2.349,1268,1.374,1269,2.349,1270,1.374,1271,1.374,1272,1.374,1273,1.374,1274,2.649,1275,2.022,1276,1.374,1277,2.349,1278,2.349,1279,1.374,1280,3.077,1281,1.374,1282,1.374,1283,1.183,1284,1.374,1285,1.374,1286,1.374,1287,1.374,1288,2.349,1289,1.374,1290,2.349,1291,2.349,1292,3.64,1293,1.374,1294,1.374,1295,1.374,1296,1.374,1297,1.183,1298,1.374,1299,1.374,1300,1.374,1301,1.374,1302,1.374,1303,1.374,1304,1.374,1305,1.374,1306,1.374,1307,2.349,1308,2.349,1309,5.019,1310,5.43,1311,6.191,1312,2.349,1313,2.349,1314,2.022,1315,2.349,1316,2.349,1317,3.64,1318,2.349,1319,2.349,1320,2.349,1321,2.349,1322,2.349,1323,2.349,1324,2.349,1325,2.349,1326,2.349,1327,2.349,1328,2.349,1329,2.349,1330,2.349,1331,2.349,1332,2.349,1333,2.349,1334,2.349,1335,2.349,1336,2.349,1337,2.349,1338,2.349,1339,2.349,1340,2.349,1341,2.349,1342,2.349,1343,2.349,1344,2.349,1345,2.349,1346,2.349,1347,2.349,1348,3.64,1349,2.349,1350,2.349,1351,5.744,1352,2.349,1353,2.349,1354,2.349,1355,2.349,1356,2.349,1357,2.349,1358,2.349,1359,2.349,1360,2.349,1361,2.349,1362,4.456,1363,2.349,1364,2.349,1365,3.64,1366,4.456,1367,2.349,1368,6.613,1369,2.022,1370,2.349,1371,2.349,1372,3.64,1373,2.349,1374,2.349,1375,3.64,1376,2.349,1377,2.349,1378,2.349,1379,5.019,1380,2.349,1381,2.349,1382,2.349,1383,4.456,1384,2.349,1385,2.349,1386,2.349,1387,2.349,1388,2.349,1389,2.349,1390,2.349,1391,2.349,1392,2.349,1393,3.077,1394,2.349,1395,2.349,1396,1.374,1397,1.183,1398,2.022,1399,2.022,1400,1.183,1401,1.183,1402,1.183,1403,1.374,1404,1.374,1405,1.374,1406,1.374,1407,1.374,1408,1.374,1409,1.374,1410,1.374,1411,1.374,1412,1.374,1413,1.374,1414,1.374,1415,1.374,1416,2.349,1417,2.349,1418,2.349,1419,2.349,1420,1.374,1421,1.374,1422,1.374,1423,2.349,1424,3.64,1425,1.374,1426,2.349,1427,1.374,1428,1.374,1429,1.374,1430,1.374,1431,4.456,1432,1.374,1433,3.077,1434,1.374,1435,1.374,1436,1.374]],["title/components/QuizInfoComponent.html",[144,0.546,249,1.075]],["body/components/QuizInfoComponent.html",[0,0.109,3,0.24,4,0.137,5,0.121,7,1.117,11,0.169,12,0.324,15,0.297,16,0.018,18,0.255,19,0.377,20,0.384,22,1.345,27,0.137,28,1.201,33,1.094,34,0.92,35,0.01,36,0.03,61,0.75,63,0.836,70,0.716,77,0.539,78,0.86,79,0.539,84,0.995,97,2.459,110,1.063,114,0.488,124,0.785,132,0.861,144,0.81,145,0.861,146,1.397,147,0.991,148,0.991,149,0.991,150,0.991,154,0.861,155,2.545,156,2.427,157,1.464,159,1.464,169,3.847,172,1.742,193,1.04,202,3.246,218,1.147,219,2.119,221,0.991,222,1.464,223,1.464,224,1.924,225,0.991,226,1.04,227,0.822,228,1.04,229,0.822,230,0.902,231,1.04,232,0.822,233,0.75,234,1.536,235,0.822,236,1.04,237,0.822,238,1.04,239,0.822,240,1.04,241,0.822,242,1.04,243,0.822,244,0.945,245,1.536,246,0.822,247,0.785,248,1.04,249,1.596,250,0.822,251,1.04,252,0.822,253,1.04,254,0.822,255,1.04,256,0.822,257,1.04,258,1.04,259,1.04,295,5.081,342,2.197,351,2.535,356,1.343,357,1.536,388,2.235,392,2.343,395,3.011,410,1.604,412,2.757,415,1.879,428,1.147,430,2.487,439,1.343,442,1.147,443,1.879,445,1.695,448,1.147,454,1.343,455,1.343,456,1.343,459,1.42,461,1.272,462,1.207,463,1.42,464,1.272,465,1.272,472,3.011,493,3.246,494,3.246,503,3.861,539,3.186,548,2.459,580,1.715,619,1.845,620,1.343,621,1.984,622,1.343,623,1.343,624,1.272,625,1.343,659,2.099,694,2.197,695,4.321,696,3.633,699,3.243,700,2.001,701,3.114,704,2.459,707,3.633,708,2.459,709,2.459,711,2.459,715,1.845,716,1.604,717,2.197,718,1.715,736,2.459,737,2.459,738,2.535,743,1.845,746,1.845,752,2.459,755,2.37,900,2.001,901,2.459,933,4.489,996,2.197,1080,4.072,1081,3.861,1095,4.265,1201,2.001,1202,2.001,1204,2.001,1205,1.845,1210,2.001,1297,2.459,1314,2.459,1397,2.459,1398,2.459,1399,2.459,1400,2.459,1401,2.459,1402,2.459,1437,5.915,1438,5.019,1439,5.915,1440,5.544,1441,2.856,1442,2.856,1443,2.856,1444,2.856,1445,2.856,1446,2.856,1447,2.856,1448,2.856,1449,2.856,1450,2.856,1451,2.856,1452,2.856,1453,2.856,1454,2.856,1455,2.856,1456,2.856,1457,2.856,1458,2.856,1459,2.856,1460,4.22,1461,2.856,1462,2.856,1463,2.856,1464,4.22,1465,2.856,1466,2.856,1467,2.856,1468,2.856,1469,2.856,1470,2.856,1471,2.856,1472,2.856,1473,2.856,1474,2.856,1475,2.856,1476,4.22,1477,4.22,1478,2.856]],["title/components/QuizResultComponent.html",[144,0.546,250,1.075]],["body/components/QuizResultComponent.html",[0,0.154,3,0.192,4,0.192,5,0.17,11,0.237,12,0.412,13,2.446,14,2.568,15,0.285,16,0.018,20,0.369,22,1.347,27,0.192,35,0.012,36,0.038,61,1.054,63,1.063,70,1.007,77,0.758,78,0.79,79,0.758,84,0.796,110,0.964,114,0.686,124,1.104,144,0.883,145,1.211,146,1.775,147,1.393,148,1.393,149,1.393,150,1.393,154,1.211,155,2.654,156,2.531,157,1.861,159,1.861,172,1.861,193,1.462,221,1.393,222,1.861,223,1.861,224,2.237,225,1.393,226,1.462,227,1.156,228,1.462,229,1.156,230,1.268,231,1.462,232,1.156,233,1.054,234,1.953,235,1.156,236,1.462,237,1.156,238,1.462,239,1.156,240,1.462,241,1.156,242,1.462,243,1.156,244,1.329,245,1.953,246,1.156,247,1.104,248,1.462,249,1.156,250,1.856,251,1.462,252,1.156,253,1.462,254,1.156,255,1.462,256,1.156,257,1.462,258,1.462,259,1.462,310,4.947,357,1.953,388,2.69,392,2.725,659,2.668,699,3.904,700,2.814,701,3.622,715,2.595,716,2.255,994,3.457,1080,3.965,1203,4.947,1479,3.457,1480,6.041,1481,5.364,1482,5.364,1483,4.015,1484,4.015,1485,4.015,1486,4.015,1487,4.015,1488,4.015,1489,4.015,1490,4.015,1491,4.015]],["title/components/QuizSearchComponent.html",[144,0.546,252,1.075]],["body/components/QuizSearchComponent.html",[0,0.129,1,2.667,3,0.161,4,0.161,5,0.142,8,1.774,9,2.737,11,0.198,12,0.365,13,1.224,14,1.285,15,0.253,16,0.018,17,0.391,18,0.492,19,0.492,20,0.349,22,1.356,27,0.161,28,1.317,35,0.011,36,0.033,61,0.882,63,0.941,70,0.843,77,0.896,78,0.782,79,0.896,84,0.941,99,2.587,110,1.209,114,0.574,124,0.924,132,1.013,144,0.804,145,1.013,146,1.571,147,1.166,148,1.166,149,1.166,150,1.166,154,1.013,155,2.6,156,2.48,157,1.647,159,1.647,165,1.51,166,3.068,172,1.91,191,2.232,193,1.224,205,3.327,216,2.326,218,1.35,219,1.285,221,1.166,222,1.647,223,1.647,224,2.075,225,1.166,226,1.224,227,0.968,228,1.224,229,0.968,230,1.062,231,1.224,232,0.968,233,0.882,234,1.728,235,0.968,236,1.224,237,0.968,238,1.224,239,0.968,240,1.224,241,0.968,242,1.224,243,0.968,244,1.113,245,1.728,246,0.968,247,0.924,248,1.224,249,0.968,250,0.968,251,1.224,252,1.722,253,1.224,254,0.968,255,1.224,256,0.968,257,1.224,258,1.224,259,1.224,302,4.716,356,1.58,357,1.728,365,3.78,381,2.356,388,2.451,392,2.527,395,3.163,409,2.356,410,1.888,411,1.35,412,2.114,415,1.497,426,3.652,428,1.35,430,1.35,434,2.232,438,1.421,441,1.421,442,1.35,445,1.35,468,1.672,537,3.068,565,2.356,620,1.58,621,2.232,622,1.58,623,1.58,624,1.497,625,1.58,659,2.361,663,1.774,664,2.172,700,2.356,701,3.359,716,1.888,717,2.586,718,2.019,719,2.356,721,2.356,732,3.327,753,2.586,754,2.172,755,1.888,811,2.586,857,4.087,863,4.087,885,2.894,888,4.087,892,2.894,893,2.894,894,2.894,895,2.894,896,2.894,897,4.087,898,2.586,899,2.586,916,4.087,1080,3.78,1492,2.894,1493,5.504,1494,4.748,1495,3.361,1496,3.361,1497,3.361,1498,3.361,1499,3.361,1500,3.361,1501,3.361,1502,3.361]],["title/injectables/QuizService.html",[56,1.236,395,1.756]],["body/injectables/QuizService.html",[0,0.109,3,0.137,4,0.137,5,0.121,7,0.539,11,0.169,12,0.324,13,2.332,14,2.261,15,0.293,16,0.018,17,0.86,18,0.255,19,0.255,20,0.37,22,1.368,27,0.137,28,1.735,29,1.672,33,0.92,35,0.01,36,0.03,56,1.397,58,1.507,60,1.783,61,1.108,62,2.819,63,0.836,70,1.258,71,1.604,72,3.114,74,2.227,75,3.121,76,2.535,77,1.241,78,0.86,79,1.241,84,1.467,85,3.628,88,2.535,99,2.606,103,2.37,104,3.323,107,2.37,108,2.099,109,2.37,110,1.113,111,1.845,112,3.015,113,1.507,114,0.488,115,1.604,116,2.001,117,1.343,119,1.42,120,1.604,121,1.42,122,1.343,123,3.891,124,0.785,127,2.33,128,2.197,130,2.535,131,1.835,132,1.272,133,2.535,134,1.695,135,3.694,166,2.727,356,1.343,375,2.957,395,1.984,427,2.469,472,3.011,477,3.553,876,2.001,933,4.608,1051,3.633,1092,3.633,1216,3.633,1254,3.633,1275,3.633,1503,2.459,1504,4.22,1505,4.22,1506,4.22,1507,4.22,1508,5.544,1509,5.544,1510,4.22,1511,4.22,1512,2.856,1513,2.856,1514,2.856,1515,4.22,1516,4.22,1517,2.856,1518,4.22,1519,2.856,1520,4.22,1521,2.856,1522,4.22,1523,4.22,1524,4.22,1525,2.856,1526,2.856,1527,3.246,1528,2.856,1529,4.22,1530,2.856,1531,4.22,1532,2.856,1533,4.22,1534,4.22,1535,2.856,1536,4.22,1537,2.856,1538,2.856,1539,2.856,1540,2.856,1541,2.856,1542,2.856,1543,2.856,1544,2.856,1545,2.856,1546,3.633,1547,2.856,1548,2.856,1549,2.856,1550,2.856,1551,2.856,1552,2.856,1553,2.459,1554,2.856]],["title/components/QuizTypeinComponent.html",[144,0.546,254,1.075]],["body/components/QuizTypeinComponent.html",[0,0.091,3,0.114,4,0.114,5,0.101,11,0.14,12,0.282,15,0.285,16,0.018,18,0.451,19,0.488,20,0.375,22,1.281,27,0.114,33,0.518,34,0.978,35,0.009,36,0.026,37,2.19,44,1.552,45,0.908,50,1.987,51,1.803,57,3.614,61,0.624,63,0.728,70,0.596,77,0.449,78,0.587,79,0.449,84,1.001,90,3.528,110,1.081,114,0.406,118,1.666,124,0.653,131,1.216,132,1.107,144,0.798,145,0.717,146,1.216,147,0.825,148,0.825,149,0.825,150,0.825,154,0.717,155,2.474,156,2.359,157,1.275,159,1.275,172,1.752,174,2.249,189,1.727,193,0.865,213,2.574,216,2.753,217,2.063,218,0.955,219,1.93,221,0.825,222,1.275,223,1.275,224,1.894,225,0.825,226,0.865,227,0.684,228,0.865,229,0.684,230,0.751,231,0.865,232,0.684,233,0.624,234,1.337,235,0.684,236,0.865,237,0.684,238,0.865,239,0.684,240,0.865,241,0.684,242,0.865,243,0.684,244,0.787,245,1.337,246,0.684,247,0.653,248,0.865,249,0.684,250,0.684,251,0.865,252,0.684,253,0.865,254,1.454,255,0.865,256,0.684,257,0.865,258,0.865,259,0.865,274,1.666,284,1.182,306,4.962,388,1.058,392,2.134,412,2.431,427,1.058,428,1.803,430,2.318,437,2.374,438,2.134,441,1.004,442,1.803,443,2.57,445,2.028,448,0.955,449,1.254,450,1.428,451,1.428,452,1.428,453,1.117,454,1.117,455,1.117,456,1.117,461,1.058,462,1.004,464,1.999,465,1.058,467,1.428,483,3.729,485,1.552,497,3.263,550,2.522,551,2.063,555,1.335,620,1.117,621,1.727,622,1.117,623,1.117,624,1.058,625,1.117,629,1.938,640,1.428,659,2.233,699,2.901,701,2.837,715,1.536,716,1.335,718,1.428,738,3.467,743,1.536,746,1.536,748,1.828,754,1.536,755,2.063,756,1.536,757,2.574,758,3.263,878,2.206,939,1.666,993,2.697,1028,3.467,1054,1.666,1080,3.977,1081,1.828,1082,3.865,1083,3.865,1084,3.865,1085,3.865,1087,3.865,1090,4.7,1091,4.7,1093,4.348,1095,3.885,1096,4.348,1097,3.162,1098,4.7,1099,2.046,1101,3.162,1105,2.574,1109,2.826,1110,2.574,1111,3.162,1113,3.865,1129,3.162,1131,2.574,1132,2.046,1133,1.828,1134,1.828,1135,2.046,1139,2.046,1140,2.046,1141,3.162,1142,2.046,1143,2.046,1144,2.046,1145,2.046,1146,2.046,1147,2.046,1148,2.046,1149,2.046,1150,2.046,1151,3.865,1152,3.162,1153,2.046,1154,2.046,1155,2.046,1156,3.162,1157,3.865,1158,2.046,1159,2.046,1160,2.046,1161,2.046,1162,2.046,1163,2.046,1164,2.046,1165,2.046,1166,2.046,1184,3.162,1185,2.826,1187,3.453,1190,2.046,1191,1.828,1192,2.046,1193,3.162,1194,2.046,1195,2.046,1196,2.046,1197,2.046,1198,2.046,1199,2.046,1200,1.828,1201,1.666,1202,1.666,1203,1.666,1204,1.666,1205,1.536,1206,3.162,1207,2.046,1208,2.046,1209,2.046,1210,1.666,1212,2.046,1555,2.046,1556,3.673,1557,4.489,1558,3.673,1559,3.673,1560,2.377,1561,2.377,1562,2.377,1563,2.377,1564,2.377,1565,2.377,1566,2.377,1567,2.377,1568,2.377,1569,2.377,1570,2.377,1571,2.377,1572,2.377,1573,2.377,1574,3.673]],["title/components/RegistrationComponent.html",[144,0.546,256,1.075]],["body/components/RegistrationComponent.html",[0,0.082,3,0.103,4,0.103,5,0.091,7,0.406,11,0.127,12,0.261,15,0.178,16,0.018,18,0.376,19,0.192,20,0.345,22,1.08,27,0.103,34,0.74,35,0.008,36,0.024,45,0.822,47,1.39,61,0.565,63,0.673,70,0.539,74,1.792,75,1.135,77,0.406,78,0.681,79,0.406,82,1.513,83,1.852,84,1.321,109,1.208,110,0.995,114,0.368,123,1.908,127,1.921,131,2.281,132,1.024,144,0.847,145,0.648,146,1.124,147,0.746,148,0.746,149,0.746,150,0.746,154,0.648,155,2.431,156,2.319,157,1.179,159,1.179,165,1.387,169,4.004,172,0.746,174,1.513,184,2.925,189,1.011,193,0.783,204,2.613,215,2.195,216,2.021,217,1.908,218,1.364,219,2.296,221,0.746,222,1.179,223,1.179,224,1.66,225,0.746,226,0.783,227,0.619,228,0.783,229,0.619,230,0.679,231,0.783,232,0.619,233,0.565,234,1.237,235,0.619,236,0.783,237,0.619,238,0.783,239,0.619,240,0.783,241,0.619,242,0.783,243,0.619,244,0.712,245,1.237,246,0.619,247,0.591,248,0.783,249,0.619,250,0.619,251,0.783,252,0.619,253,0.783,254,0.619,255,0.783,256,1.377,257,1.896,258,0.783,259,0.783,284,1.07,328,4.006,330,2.381,411,0.864,415,0.958,422,1.07,428,1.691,429,1.792,430,2.814,431,2.925,432,2.925,433,2.925,434,1.979,435,2.748,436,1.208,437,2.248,438,2.201,439,2.248,440,2.524,441,1.779,442,1.364,443,1.875,444,1.908,445,2.223,446,1.208,447,1.208,448,2.223,449,1.792,453,1.597,454,1.597,455,1.597,456,1.597,457,1.908,458,1.908,459,1.689,460,2.524,461,1.513,462,1.436,463,1.689,464,1.513,465,1.513,469,1.292,482,1.011,504,1.792,506,1.39,508,3.561,511,3.561,512,1.292,513,3.357,514,3.804,515,3.341,520,2.529,538,4.211,539,3.213,541,2.613,542,4.99,543,4.99,544,1.507,550,2.925,551,3.744,552,4.245,553,2.613,554,2.613,555,2.925,556,2.951,558,2.613,559,2.613,560,2.613,561,2.613,567,1.852,569,4.604,570,1.852,572,1.852,574,1.654,576,1.654,578,1.852,580,1.292,581,1.852,582,1.852,592,1.852,593,1.852,594,1.852,595,1.852,596,1.852,600,1.654,610,5.054,611,2.613,612,2.613,613,2.925,614,1.507,615,2.925,616,1.852,617,1.852,618,1.852,619,1.39,620,1.011,621,1.597,622,1.011,623,1.011,624,0.958,625,1.011,626,2.951,627,1.654,628,1.654,629,1.792,630,2.381,631,1.654,632,1.654,633,1.654,634,1.654,635,1.654,636,1.654,637,1.654,638,1.654,639,1.654,640,2.529,641,2.381,642,1.507,643,2.613,644,1.507,645,1.292,646,1.292,647,1.507,726,1.654,803,3.239,804,1.852,812,1.654,957,2.613,1105,1.507,1175,2.613,1203,2.381,1205,1.39,1575,1.852,1576,4.21,1577,3.397,1578,4.21,1579,4.783,1580,2.151,1581,3.397,1582,2.151,1583,2.151,1584,3.397,1585,2.151,1586,2.151,1587,2.151,1588,2.151,1589,2.151,1590,2.151,1591,2.151,1592,2.151,1593,2.151,1594,2.151,1595,2.151,1596,2.151,1597,2.151,1598,2.151,1599,2.151,1600,2.151,1601,2.151,1602,2.151,1603,2.151,1604,2.151,1605,2.151,1606,2.151,1607,2.151,1608,3.397,1609,3.397,1610,2.151,1611,2.151,1612,2.151,1613,2.151,1614,2.151,1615,2.151,1616,2.151]],["title/classes/UpdateAnswer.html",[0,0.143,54,2.244]],["body/classes/UpdateAnswer.html",[0,0.243,2,1.273,3,0.211,4,0.211,5,0.187,7,0.834,10,2.197,11,0.261,12,0.439,15,0.301,16,0.019,17,0.86,18,0.51,19,0.634,20,0.305,26,3.692,27,0.303,28,1.058,29,1.333,30,1.396,31,1.868,32,1.463,33,0.964,34,0.964,35,0.013,36,0.04,37,2.811,38,3.098,39,4.781,40,4.005,44,2.829,45,2.558,47,4.325,48,5.149,50,2.437,51,2.295,53,2.483,54,4.021,55,3.432,1617,4.42,1618,4.42]],["title/classes/UpdateQuestion.html",[0,0.143,1015,2.244]],["body/classes/UpdateQuestion.html",[0,0.25,2,1.355,3,0.225,4,0.225,5,0.199,7,0.888,10,2.263,11,0.278,12,0.457,13,2.494,15,0.299,16,0.018,17,0.87,18,0.42,19,0.582,20,0.251,27,0.312,28,1.126,29,1.419,30,1.486,31,1.988,32,1.557,33,1.026,34,1.026,35,0.014,36,0.042,37,2.165,50,2.822,51,2.388,55,3.572,427,2.648,1006,2.643,1007,3.298,1009,4.168,1011,3.843,1013,4.575,1014,4.575,1015,3.572,1619,4.705]],["title/classes/User.html",[0,0.143,165,0.894]],["body/classes/User.html",[0,0.257,2,0.955,3,0.159,4,0.159,5,0.141,7,0.626,10,1.151,11,0.196,12,0.361,15,0.295,16,0.019,17,0.886,18,0.622,19,0.622,20,0.372,27,0.284,28,1.126,29,1.648,30,1.726,32,1.809,33,1.54,34,1.461,35,0.011,36,0.033,78,0.778,165,1.727,211,2.095,482,3.152,485,2.31,504,2.482,505,2.144,506,3.04,507,3.297,508,2.482,509,3.04,510,2.144,511,3.771,512,3.771,513,3.554,514,4.186,515,3.676,517,4.234,518,4.399,520,3.572,523,3.83,526,3.04,527,3.04,528,3.297,529,2.482,530,2.144,531,2.482,600,2.553,1620,3.318,1621,3.318,1622,3.318,1623,3.318,1624,3.318,1625,3.318,1626,3.318,1627,3.318,1628,3.318,1629,3.318]],["title/injectables/UserService.html",[56,1.236,539,1.858]],["body/injectables/UserService.html",[0,0.108,3,0.238,4,0.134,5,0.119,7,0.531,11,0.166,12,0.32,14,2.67,15,0.304,16,0.018,17,0.862,18,0.373,19,0.491,20,0.368,27,0.134,28,1.317,35,0.01,36,0.029,45,1.594,56,1.38,58,1.483,60,1.762,61,1.095,62,2.793,63,0.826,70,1.246,71,1.579,72,3.09,74,2.2,75,3.1,76,2.505,77,1.262,78,0.903,79,1.262,82,2.45,84,1.423,85,3.512,103,2.343,104,3.301,107,2.343,108,2.074,110,1.106,111,1.816,112,3.53,113,1.483,114,0.48,115,1.579,117,1.321,119,1.398,120,1.579,121,1.398,122,1.321,123,3.925,124,0.773,127,2.271,130,3.304,131,2.252,132,1.659,133,3.304,134,1.997,135,3.579,165,1.808,189,1.96,211,2.915,214,3.59,233,0.738,330,2.923,375,2.923,411,1.129,427,1.857,504,2.903,511,3.1,513,1.398,515,2.2,527,2.695,529,2.903,531,2.903,539,2.074,547,3.59,676,3.825,685,2.162,846,2.42,965,3.59,1105,2.923,1131,2.923,1250,3.59,1283,3.59,1546,2.42,1553,2.42,1630,2.42,1631,4.171,1632,4.171,1633,4.171,1634,4.171,1635,4.171,1636,4.171,1637,4.171,1638,2.811,1639,4.171,1640,2.811,1641,4.171,1642,4.171,1643,2.811,1644,4.171,1645,2.811,1646,4.736,1647,4.171,1648,2.811,1649,4.171,1650,4.171,1651,4.171,1652,4.171,1653,2.811,1654,2.811,1655,2.811,1656,4.171,1657,2.811,1658,4.171,1659,4.171,1660,2.811,1661,4.171,1662,2.811,1663,4.171,1664,4.171,1665,2.811,1666,2.811,1667,2.811,1668,2.811,1669,4.972,1670,2.811,1671,2.811,1672,2.811,1673,2.811,1674,2.811,1675,2.811,1676,2.811,1677,2.811,1678,2.811,1679,2.811,1680,2.811,1681,2.811]],["title/coverage.html",[1682,3.93]],["body/coverage.html",[0,0.291,1,2.029,5,0.153,6,3.841,9,1.797,15,0.153,16,0.018,22,0.649,34,1.642,35,0.012,36,0.035,37,1.315,38,4.01,50,1.315,53,2.029,54,2.17,56,2.273,57,2.17,59,3.11,119,1.797,131,1.196,134,2.298,144,1.096,145,1.089,151,3.11,165,0.865,174,1.609,227,1.04,229,1.04,232,1.04,233,0.949,235,1.04,237,1.04,239,1.04,241,1.04,243,1.04,246,1.04,247,0.993,249,1.04,250,1.04,252,1.04,254,1.04,256,1.04,268,2.335,269,2.335,270,2.335,289,2.532,292,2.532,295,2.532,299,2.532,300,2.532,302,2.532,306,2.532,309,2.532,310,2.532,320,2.532,323,2.532,348,3.11,349,3.11,365,2.029,366,3.11,387,3.11,395,1.698,472,1.698,473,3.11,477,2.17,478,3.841,504,1.906,505,3.988,529,1.906,531,1.906,532,3.11,533,3.11,539,1.797,556,2.532,564,2.779,646,4.605,648,3.841,650,3.11,651,3.11,675,3.11,680,3.11,681,3.11,689,3.11,693,3.11,694,3.841,697,2.029,702,2.335,705,2.335,759,3.11,819,3.841,830,3.11,851,3.11,917,3.11,922,2.532,944,3.11,945,3.11,952,3.11,974,3.11,979,3.11,980,3.841,1006,2.029,1007,4.01,1015,2.17,1016,2.532,1017,3.11,1028,2.17,1029,3.11,1080,3.763,1213,3.11,1479,3.11,1492,3.11,1503,3.11,1555,3.11,1575,3.11,1630,3.11,1682,2.779,1683,3.11,1684,3.613,1685,3.613,1686,3.613,1687,3.613,1688,3.613,1689,3.613,1690,3.613,1691,3.613,1692,3.613,1693,4.993,1694,3.613,1695,3.613,1696,3.613,1697,5.721,1698,6.172,1699,4.993,1700,4.993,1701,5.721,1702,4.993,1703,3.613,1704,3.613,1705,5.721,1706,4.993,1707,3.613,1708,5.721,1709,3.613,1710,3.613,1711,3.613,1712,3.613,1713,3.613,1714,3.613,1715,3.613,1716,3.613,1717,4.993,1718,3.11,1719,3.613,1720,3.613,1721,3.613,1722,3.613,1723,3.613,1724,3.613,1725,3.11,1726,4.993,1727,3.11,1728,3.613]],["title/dependencies.html",[263,3.15,1729,2.681]],["body/dependencies.html",[16,0.018,35,0.015,36,0.046,114,0.948,117,2.608,193,2.02,263,3.888,281,5.663,282,5.061,284,2.759,768,4.268,1730,5.548,1731,7.689,1732,5.548,1733,5.548,1734,5.548,1735,5.548,1736,5.548,1737,5.548,1738,5.548,1739,5.548,1740,5.548,1741,5.548,1742,5.548,1743,5.548,1744,5.548,1745,5.548]],["title/miscellaneous/functions.html",[1110,3.15,1746,2.182]],["body/miscellaneous/functions.html",[11,0.345,15,0.248,16,0.017,35,0.016,36,0.048,77,1.103,78,0.764,79,1.103,111,4.383,119,3.564,174,2.603,597,5.031,598,5.031,1110,4.096,1257,5.031,1725,5.031,1746,4.096,1747,5.845,1748,5.845,1749,5.845,1750,5.845,1751,5.845]],["title/index.html",[11,0.184,1752,3.114,1753,3.114]],["body/index.html",[16,0.015,22,1.237,35,0.015,36,0.046,37,1.736,50,1.736,60,2.015,76,2.864,82,2.67,99,2.819,187,4.105,211,2.123,343,4.105,448,1.915,510,3.081,517,3.685,526,3.081,530,3.081,626,3.342,878,2.864,900,3.342,934,3.342,957,3.668,993,3.602,1109,5.654,1117,3.668,1174,4.105,1175,5.295,1527,3.668,1646,4.105,1682,3.668,1683,5.926,1754,4.768,1755,5.997,1756,5.997,1757,4.768,1758,4.768,1759,6.56,1760,4.768,1761,4.768,1762,4.768,1763,4.768,1764,4.768,1765,4.768,1766,4.768,1767,4.768,1768,4.768,1769,4.768,1770,4.768,1771,4.768,1772,4.768,1773,4.768,1774,4.768,1775,4.768,1776,4.768,1777,4.768,1778,4.768,1779,7.094,1780,5.997,1781,4.768,1782,4.768,1783,4.768,1784,4.768,1785,4.768,1786,5.997,1787,5.997,1788,4.768,1789,6.56,1790,5.997,1791,6.56,1792,4.768,1793,4.768,1794,4.768,1795,4.768,1796,4.768,1797,4.768,1798,5.997,1799,4.768,1800,4.768,1801,4.768,1802,4.768,1803,4.768,1804,4.768,1805,4.768,1806,4.768,1807,4.768,1808,4.768,1809,4.768,1810,4.768,1811,4.768,1812,4.768,1813,4.768,1814,4.768,1815,4.768,1816,4.768,1817,4.768]],["title/modules.html",[262,3.301]],["body/modules.html",[16,0.016,35,0.016,36,0.048,261,4.208,262,3.88,271,3.88,282,4.619,1527,4.619,1818,6.005,1819,6.005,1820,6.889,1821,6.005]],["title/overview.html",[1822,4.398]],["body/overview.html",[2,1.328,16,0.018,35,0.014,36,0.041,58,2.434,145,2.2,146,1.527,227,1.86,229,1.86,232,1.86,235,1.86,237,1.86,239,1.86,241,1.86,243,1.86,246,1.86,247,1.776,249,1.86,250,1.86,252,1.86,254,1.86,256,1.86,261,5.564,262,2.981,263,4.116,264,3.972,265,3.972,266,3.972,267,3.972,268,4.175,269,4.175,270,4.175,271,4.175,272,5.056,273,3.972,274,3.233,319,3.233,347,3.233,468,2.921,649,3.549,1188,3.549,1369,3.972,1718,5.056,1822,3.972,1823,4.614]],["title/properties.html",[12,0.345,1729,2.681]],["body/properties.html",[12,0.467,16,0.017,31,2.57,35,0.016,36,0.049,1824,6.082]],["title/routes.html",[319,3.58]],["body/routes.html",[16,0.016,35,0.016,36,0.049,319,4.29]],["title/miscellaneous/variables.html",[1746,2.182,1825,3.87]],["body/miscellaneous/variables.html",[11,0.326,15,0.234,16,0.018,18,0.494,19,0.494,35,0.015,36,0.046,127,1.918,174,2.461,189,2.598,327,5.049,513,3.264,556,4.907,569,3.873,663,3.463,1274,4.758,1727,4.758,1746,3.873,1825,4.758,1826,5.527,1827,5.527,1828,5.527,1829,5.527,1830,6.563,1831,5.527,1832,6.563,1833,5.527,1834,5.527,1835,5.527,1836,5.527,1837,5.527,1838,5.527]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":34,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1824,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["0.9.4",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":742,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["1",{"_index":422,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["1.1.19",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1415,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1/1",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":434,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["10/10",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":646,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":748,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["10000",{"_index":744,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["1001682.jpg",{"_index":452,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["100vh",{"_index":463,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["1020",{"_index":1331,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1080",{"_index":1332,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["10px",{"_index":758,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["11",{"_index":436,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["11/12",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":943,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["1140",{"_index":1333,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["12/12",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1316,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1200",{"_index":1334,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1260",{"_index":1335,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["13/13",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["1320",{"_index":1336,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1380",{"_index":1337,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1440",{"_index":1338,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["15",{"_index":622,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["15.2.8",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":1339,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1560",{"_index":1340,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["15px",{"_index":757,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["16",{"_index":1718,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["1620",{"_index":1341,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1680",{"_index":1342,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["16px",{"_index":1195,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["1740",{"_index":1343,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["180",{"_index":1317,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["19",{"_index":1823,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1416,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1rem",{"_index":641,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["2",{"_index":468,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"overview.html":{}}}],["2.0.11",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1413,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["2/2",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1206,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["20px",{"_index":746,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["24",{"_index":798,"title":{},"body":{"components/FriendsComponent.html":{}}}],["240",{"_index":1318,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["242325",{"_index":446,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["24px",{"_index":1193,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["25",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":621,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["28",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["28fcb.web.app",{"_index":1811,"title":{},"body":{"index.html":{}}}],["28fcb.web.app/quiz",{"_index":1176,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["2s",{"_index":737,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["3",{"_index":1188,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"overview.html":{}}}],["3.2",{"_index":735,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["3/3",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1101,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["300",{"_index":1319,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["30px",{"_index":1428,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["333",{"_index":1433,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["35",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["360",{"_index":1320,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["3c887e",{"_index":433,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4",{"_index":1189,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["4/4",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1404,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["40px",{"_index":739,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["420",{"_index":1321,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["42a948",{"_index":631,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["480",{"_index":1322,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["4caf50",{"_index":1199,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["5",{"_index":439,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["5/5",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1424,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["50px",{"_index":741,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{}}}],["5129486.jpg",{"_index":1616,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["5220092.jpg",{"_index":1613,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["540",{"_index":1323,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["55",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":643,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6",{"_index":440,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["6/17",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":495,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["600",{"_index":1324,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["66",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["660",{"_index":1325,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["666",{"_index":1427,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["6em",{"_index":444,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["7",{"_index":1369,"title":{},"body":{"components/QuizCreateComponent.html":{},"overview.html":{}}}],["7.8.0",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["7/25",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":740,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["7069762.jpg",{"_index":1399,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["720",{"_index":1326,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["780",{"_index":1327,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["8",{"_index":1370,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["80",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["820000",{"_index":639,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["83",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["840",{"_index":1328,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["9",{"_index":1371,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["9/9",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1329,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["91",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["960",{"_index":1330,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["__v",{"_index":32,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["_id",{"_index":30,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["a94442",{"_index":634,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["a::after",{"_index":1435,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ability",{"_index":1389,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["absolute",{"_index":1423,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["abstractcontrol",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":1348,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["access",{"_index":666,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["accessors",{"_index":541,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["account",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["activate",{"_index":657,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["activatedroute",{"_index":701,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["activatedroutesnapshot",{"_index":653,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["active",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/QuizCreateComponent.html":{}}}],["actual_component",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["add",{"_index":8,"title":{},"body":{"classes/AddBookmark.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["add_bookmark",{"_index":367,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["add_bookmark(bookmark",{"_index":371,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["addbookmark",{"_index":1,"title":{"classes/AddBookmark.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["added",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["addfriend",{"_index":765,"title":{},"body":{"components/FriendsComponent.html":{}}}],["additionally",{"_index":1766,"title":{},"body":{"index.html":{}}}],["addrating",{"_index":1092,"title":{},"body":{"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{}}}],["addrating(rating",{"_index":1513,"title":{},"body":{"injectables/QuizService.html":{}}}],["addrating(rating:number",{"_index":1551,"title":{},"body":{"injectables/QuizService.html":{}}}],["address",{"_index":518,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["adds",{"_index":1515,"title":{},"body":{"injectables/QuizService.html":{}}}],["alert",{"_index":636,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["alert(\"bookmark",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["alert(\"delete",{"_index":810,"title":{},"body":{"components/FriendsComponent.html":{}}}],["alert(\"email",{"_index":1599,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["alert(\"friend",{"_index":802,"title":{},"body":{"components/FriendsComponent.html":{}}}],["alert(\"invalid",{"_index":799,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["alert(\"please",{"_index":1272,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["alert(\"quiz",{"_index":1278,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["alert(\"time",{"_index":1154,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["alert(\"you",{"_index":664,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizSearchComponent.html":{}}}],["alert(res['message",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":464,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["allowance",{"_index":498,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["along",{"_index":561,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["already",{"_index":803,"title":{},"body":{"components/FriendsComponent.html":{},"guards/LoginGuard.html":{},"components/RegistrationComponent.html":{}}}],["alter",{"_index":1391,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["angular",{"_index":60,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":783,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["angular/common",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":113,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":114,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1601,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["ans",{"_index":1168,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer",{"_index":37,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["answer',this.id",{"_index":1474,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["answer'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["answer.answer",{"_index":1186,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["answer.component.html",{"_index":982,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.scss",{"_index":981,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts",{"_index":980,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer.component.ts:108",{"_index":1107,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:115",{"_index":1112,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:123",{"_index":1104,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:15",{"_index":985,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:167",{"_index":1103,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:17",{"_index":988,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:18",{"_index":987,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:181",{"_index":1106,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:19",{"_index":990,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:20",{"_index":989,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:21",{"_index":986,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:26",{"_index":1102,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:28",{"_index":1123,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:29",{"_index":1114,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:30",{"_index":1120,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:31",{"_index":1127,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:32",{"_index":1121,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:36",{"_index":1119,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:40",{"_index":1128,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:44",{"_index":1126,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:46",{"_index":1118,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:48",{"_index":1116,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:50",{"_index":1100,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:54",{"_index":1122,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:56",{"_index":1115,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:58",{"_index":1130,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:60",{"_index":1125,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:64",{"_index":1124,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:69",{"_index":1108,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer/'+quiz._id.tostring",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["answer/:id",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answer/master",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["answer/quiz",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer:updateanswer",{"_index":141,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer[element._id",{"_index":1142,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answer_form",{"_index":1082,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answer_id",{"_index":1083,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answerarr",{"_index":91,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answering",{"_index":991,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answerquiz",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answers",{"_index":90,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answerservice",{"_index":57,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["api",{"_index":597,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["app",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["app.component",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1429,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["application",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{}}}],["application/json",{"_index":133,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":261,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":271,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apron",{"_index":104,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["array",{"_index":1283,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/UserService.html":{}}}],["associated",{"_index":1011,"title":{},"body":{"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{}}}],["auto",{"_index":1190,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["available",{"_index":1527,"title":{},"body":{"injectables/QuizService.html":{},"index.html":{},"modules.html":{}}}],["average",{"_index":479,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["back",{"_index":726,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["backdrop",{"_index":623,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["background",{"_index":430,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["base",{"_index":107,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["base_url",{"_index":62,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"index.html":{}}}],["baseline",{"_index":940,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["being",{"_index":23,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["belonging",{"_index":378,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{}}}],["belongs",{"_index":26,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["below",{"_index":1308,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["best",{"_index":1609,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["between",{"_index":471,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["beyond",{"_index":1377,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["blend",{"_index":454,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["block",{"_index":469,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["blur(5px",{"_index":625,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["body",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["bold",{"_index":1210,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["bookfilter",{"_index":350,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["bookfilterpipe",{"_index":268,"title":{"pipes/BookFilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/BookFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["bookmark",{"_index":9,"title":{"classes/Bookmark.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["bookmarked",{"_index":24,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["bookmarks",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{}}}],["bookmarks'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["bookmarks.component.html",{"_index":390,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks.component.scss",{"_index":389,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks/bookmarks.component",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bookmarkscomponent",{"_index":227,"title":{"components/BookmarksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookmarkservice",{"_index":365,"title":{"injectables/BookmarkService.html":{}},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{}}}],["booltimesup",{"_index":1084,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":629,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["both",{"_index":1765,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":437,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["box",{"_index":619,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["brett",{"_index":1614,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["browse",{"_index":1820,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1198,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["building",{"_index":1803,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["bulmaio",{"_index":1814,"title":{},"body":{"index.html":{}}}],["button",{"_index":1297,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["button:hover",{"_index":1478,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["buttonback",{"_index":745,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["buttonback:hover",{"_index":751,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["buttondispl",{"_index":762,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["buttondispl=\"copy",{"_index":784,"title":{},"body":{"components/FriendsComponent.html":{}}}],["buttons",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["cadetblue",{"_index":942,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["call",{"_index":598,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1257,"title":{},"body":{"components/QuizCreateComponent.html":{},"miscellaneous/functions.html":{}}}],["calls",{"_index":109,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{}}}],["can't",{"_index":665,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{}}}],["canactivate",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["canactivate(route",{"_index":652,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["cancel",{"_index":1373,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["card",{"_index":754,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["cards",{"_index":753,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["cat",{"_index":353,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["cat.name",{"_index":1265,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["catagories",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["catagory.name",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["catcherror",{"_index":115,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["catcherror(handleerror",{"_index":135,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":1216,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["categorized",{"_index":1774,"title":{},"body":{"index.html":{}}}],["category",{"_index":472,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"classes/CreateQuiz.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["category.name",{"_index":1313,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["catergories",{"_index":691,"title":{},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{}}}],["ccc",{"_index":1417,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["cd",{"_index":1780,"title":{},"body":{"index.html":{}}}],["center",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["changedetectionstrategy",{"_index":408,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["changedetectorref",{"_index":407,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{}}}],["changes",{"_index":1366,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["character",{"_index":1353,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["check",{"_index":1105,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["check_email_exists",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["check_email_exists(email",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["checkanswers",{"_index":1093,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["choice",{"_index":502,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["choose",{"_index":1367,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["churchman",{"_index":451,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["ci",{"_index":1801,"title":{},"body":{"index.html":{}}}],["circle",{"_index":1800,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"overview.html":{}}}],["clearinterval(this.countdowntimer",{"_index":1152,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["cli",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["click",{"_index":1365,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["clicks",{"_index":1296,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["client",{"_index":76,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["clipboard",{"_index":768,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["codecov",{"_index":1808,"title":{},"body":{"index.html":{}}}],["color",{"_index":445,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["colors.jpg",{"_index":618,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["column",{"_index":1205,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["command",{"_index":1791,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1809,"title":{},"body":{"index.html":{}}}],["competitions",{"_index":1769,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1273,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["completed",{"_index":1306,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["compodoc",{"_index":1796,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["compodocto",{"_index":1795,"title":{},"body":{"index.html":{}}}],["component",{"_index":144,"title":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["component:quizinfocomponent",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["confirm",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_password",{"_index":543,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirmpassword",{"_index":556,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log(\"quiz",{"_index":1001,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["console.log(\"toggled",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`searched",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(json.stringify(quiz",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(json.stringify(this.quiz",{"_index":1300,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["console.log(qna",{"_index":1290,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["console.log(res",{"_index":812,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["console.log(response",{"_index":601,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["console.log(this.friends",{"_index":806,"title":{},"body":{"components/FriendsComponent.html":{}}}],["console.log(this.history",{"_index":725,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["console.log(this.quizzes",{"_index":1502,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["const",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["constructor(bookmarkservice",{"_index":394,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["constructor(http",{"_index":71,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(leaderboardservice",{"_index":921,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["constructor(private",{"_index":124,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":582,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(questionservice",{"_index":1099,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["constructor(quizservice",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["constructor(route",{"_index":700,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["constructor(router",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":544,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contact",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["container",{"_index":939,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["content",{"_index":132,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["continue",{"_index":1281,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["continuous",{"_index":1755,"title":{},"body":{"index.html":{}}}],["control",{"_index":569,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get(\"confirm_password",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get(\"password",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":559,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contructor",{"_index":1581,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["copied",{"_index":815,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["copy",{"_index":776,"title":{},"body":{"components/FriendsComponent.html":{}}}],["copyid",{"_index":766,"title":{},"body":{"components/FriendsComponent.html":{}}}],["copyresults",{"_index":1094,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["correct",{"_index":39,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{}}}],["countdown",{"_index":1197,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["countdowntimer",{"_index":1085,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["cover",{"_index":461,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["coverage",{"_index":1682,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":82,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["create.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":1215,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.scss",{"_index":1214,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts",{"_index":1213,"title":{},"body":{"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:106",{"_index":1226,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:124",{"_index":1227,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:141",{"_index":1232,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:152",{"_index":1230,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:18",{"_index":1225,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:20",{"_index":1247,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:21",{"_index":1243,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:22",{"_index":1244,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:24",{"_index":1246,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:25",{"_index":1233,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:26",{"_index":1242,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:28",{"_index":1245,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:30",{"_index":1229,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:38",{"_index":1237,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:56",{"_index":1240,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:68",{"_index":1241,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:77",{"_index":1228,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create/quiz",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["create_answer",{"_index":64,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_answer(answer",{"_index":80,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_friends",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["create_friends(friendid",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["create_history",{"_index":831,"title":{},"body":{"injectables/HistoryService.html":{}}}],["create_history(history",{"_index":835,"title":{},"body":{"injectables/HistoryService.html":{}}}],["create_many_answers",{"_index":65,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_answers(answerarr",{"_index":86,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_questions",{"_index":1030,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_many_questions(questions",{"_index":1037,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question",{"_index":1031,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question(question",{"_index":1039,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_quiz",{"_index":1504,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_quiz(newquiz",{"_index":1516,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_user",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user(user",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["createanswer",{"_index":129,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createbookmark",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["createbookmark(quiz",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["created",{"_index":1476,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["created_by",{"_index":1437,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["createquestion",{"_index":1057,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{}}}],["createquestiontext",{"_index":1222,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["createquiz",{"_index":477,"title":{"classes/CreateQuiz.html":{}},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizform",{"_index":1217,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["creates",{"_index":88,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["createuser",{"_index":504,"title":{"classes/CreateUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":510,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["creation",{"_index":1305,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["creator",{"_index":488,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["creatorid",{"_index":480,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["css",{"_index":1409,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ctrl",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl.value",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":547,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/UserService.html":{}}}],["current_user",{"_index":763,"title":{},"body":{"components/FriendsComponent.html":{}}}],["currplays",{"_index":841,"title":{},"body":{"injectables/HistoryService.html":{}}}],["currplays+1",{"_index":848,"title":{},"body":{"injectables/HistoryService.html":{}}}],["cursor",{"_index":1201,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["customize",{"_index":1307,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["data",{"_index":509,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"classes/User.html":{}}}],["database",{"_index":29,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["date",{"_index":823,"title":{},"body":{"classes/History.html":{},"classes/HistoryArr.html":{}}}],["declarations",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":1434,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["decorator",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{}}}],["decorators",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":94,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer",{"_index":66,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer(id",{"_index":92,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_bookmark",{"_index":368,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_bookmark(bookmark",{"_index":373,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_friend",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_friend(friendobjid",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_question",{"_index":1032,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_question(question",{"_index":1041,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_quiz",{"_index":1505,"title":{},"body":{"injectables/QuizService.html":{}}}],["delete_quiz(id",{"_index":1518,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletequiz/\"+id).pipe",{"_index":1545,"title":{},"body":{"injectables/QuizService.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":1798,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["direction",{"_index":1204,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["directive",{"_index":61,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["directives",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["directory",{"_index":1784,"title":{},"body":{"index.html":{}}}],["display",{"_index":428,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["displaying",{"_index":1453,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["displays",{"_index":992,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["div",{"_index":637,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["docs",{"_index":1758,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1683,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["don't",{"_index":614,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["don\\'t",{"_index":647,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["done",{"_index":1086,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["dynamic",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":500,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["each",{"_index":560,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit_user",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["edit_user(user",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["editprofilecomponent",{"_index":229,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editprofileguard",{"_index":320,"title":{"guards/EditProfileGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["edituser",{"_index":529,"title":{"classes/EditUser.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["element",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["element._id",{"_index":1160,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["element.correct",{"_index":1161,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["element.friendid",{"_index":790,"title":{},"body":{"components/FriendsComponent.html":{}}}],["elementref",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{}}}],["email",{"_index":511,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email).pipe",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["email_status",{"_index":1592,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["end",{"_index":1361,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ends",{"_index":1356,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["error",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":1014,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["even",{"_index":1767,"title":{},"body":{"index.html":{}}}],["executing",{"_index":1761,"title":{},"body":{"index.html":{}}}],["exists",{"_index":804,"title":{},"body":{"components/FriendsComponent.html":{},"components/RegistrationComponent.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["express",{"_index":1816,"title":{},"body":{"index.html":{}}}],["f7f7f7",{"_index":1412,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["failed",{"_index":811,"title":{},"body":{"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["false",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["favourite",{"_index":425,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["feature",{"_index":667,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/QuizCreateComponent.html":{}}}],["featuring",{"_index":1392,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["fed3d3",{"_index":638,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fetching",{"_index":1452,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["fff",{"_index":747,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizCreateComponent.html":{}}}],["field",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["fields",{"_index":1274,"title":{},"body":{"components/QuizCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fill",{"_index":1292,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["filter",{"_index":624,"title":{},"body":{"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["filter.pipe",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["filter.pipe.ts",{"_index":349,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:9",{"_index":354,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["filterfriends",{"_index":682,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["filterfriendspipe",{"_index":269,"title":{"pipes/FilterFriendsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterFriendsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["filterpipe",{"_index":270,"title":{"pipes/FilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":424,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["finish",{"_index":1312,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["firebase",{"_index":1805,"title":{},"body":{"index.html":{}}}],["first",{"_index":520,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["first_name",{"_index":542,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["firstname",{"_index":512,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["fit",{"_index":1191,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["flex",{"_index":755,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["following",{"_index":1790,"title":{},"body":{"index.html":{}}}],["font",{"_index":738,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["for(let",{"_index":423,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizCreateComponent.html":{}}}],["force",{"_index":1364,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["forget",{"_index":1382,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["form",{"_index":508,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["format",{"_index":1620,"title":{},"body":{"classes/User.html":{}}}],["formbuilder",{"_index":1132,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["formcontrol",{"_index":551,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["formcontrol('false",{"_index":1239,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["formgroup",{"_index":550,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup(answer",{"_index":1147,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["friend",{"_index":233,"title":{"classes/FRIEND.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["friend.friendid",{"_index":688,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"components/FriendsComponent.html":{}}}],["friend_form",{"_index":764,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friend_id",{"_index":779,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friendarray",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["friendid",{"_index":676,"title":{},"body":{"classes/FRIEND.html":{},"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["friendinfocomponent",{"_index":232,"title":{"components/FriendInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friendobjid",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["friends",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendsComponent.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["friends'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["friends.component.html",{"_index":761,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friends.component.scss",{"_index":760,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friends.filter(friend",{"_index":687,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["friends.pipe",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["friends.pipe.ts",{"_index":681,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"coverage.html":{}}}],["friends.pipe.ts:9",{"_index":684,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["friends/friends.component",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["friendscomponent",{"_index":235,"title":{"components/FriendsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["front",{"_index":1387,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["full",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["function",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1110,"title":{"miscellaneous/functions.html":{}},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":1793,"title":{},"body":{"index.html":{}}}],["generated",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["genereated",{"_index":526,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["get_bookmarks",{"_index":369,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_bookmarks(userid",{"_index":376,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_category_byid",{"_index":1506,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_category_byid(id",{"_index":1520,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_history",{"_index":832,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_history(userid",{"_index":837,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_question_answer",{"_index":67,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_question_answer(questionid",{"_index":95,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_quiz_byid",{"_index":1507,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_byid(id",{"_index":1524,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_categories",{"_index":1508,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_questions",{"_index":1033,"title":{},"body":{"injectables/QuestionService.html":{}}}],["get_quiz_questions(id",{"_index":1044,"title":{},"body":{"injectables/QuestionService.html":{}}}],["get_usernameid",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["get_usernameid(id",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["get_usernameid(id:string",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["getallanswers",{"_index":68,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getallquestions",{"_index":1034,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallquiz",{"_index":1509,"title":{},"body":{"injectables/QuizService.html":{}}}],["getallquizzes\").pipe",{"_index":1539,"title":{},"body":{"injectables/QuizService.html":{}}}],["getconfirm_password",{"_index":578,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getemail",{"_index":574,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfirst_name",{"_index":567,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfriends",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["getfriends(userid",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["getleaderboard",{"_index":946,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["getmodulefactory",{"_index":1248,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["getpassword",{"_index":576,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["gets",{"_index":1048,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getsurname",{"_index":570,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":1752,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":572,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["give",{"_index":817,"title":{},"body":{"components/FriendsComponent.html":{}}}],["given",{"_index":1522,"title":{},"body":{"injectables/QuizService.html":{}}}],["global",{"_index":563,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["go",{"_index":1783,"title":{},"body":{"index.html":{}}}],["gradient(circle",{"_index":432,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":1821,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":453,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["green",{"_index":632,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["grid",{"_index":429,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["groups",{"_index":1768,"title":{},"body":{"index.html":{}}}],["guard",{"_index":648,"title":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":649,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"overview.html":{}}}],["guards/edit",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/login.guard",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h2",{"_index":1192,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["handleerror",{"_index":119,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["header",{"_index":941,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["headers",{"_index":130,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":462,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["here",{"_index":976,"title":{},"body":{"guards/LoginGuard.html":{}}}],["hide",{"_index":1357,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["hint",{"_index":1358,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["hist.date",{"_index":730,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["hist.quizid",{"_index":729,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["hist.score",{"_index":731,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["history",{"_index":697,"title":{"classes/History.html":{}},"body":{"components/FriendInfoComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["historyarr",{"_index":705,"title":{"classes/HistoryArr.html":{}},"body":{"components/FriendInfoComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"coverage.html":{}}}],["historyservice",{"_index":702,"title":{"injectables/HistoryService.html":{}},"body":{"components/FriendInfoComponent.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["historyservice:historyservice",{"_index":714,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["home",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["home.component.html",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":237,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hosting",{"_index":1806,"title":{},"body":{"index.html":{}}}],["html",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["http",{"_index":75,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":72,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httperrorresponse",{"_index":111,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":112,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://aksharnana.github.io/quizplatform",{"_index":1757,"title":{},"body":{"index.html":{}}}],["https://clumsy",{"_index":103,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://quiz",{"_index":1174,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["i+1",{"_index":935,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["i=0",{"_index":1302,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["id,nupdate",{"_index":1543,"title":{},"body":{"injectables/QuizService.html":{}}}],["identifier",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["idx",{"_index":399,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{}}}],["idx+1",{"_index":1184,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["if(!this.createquizform.valid",{"_index":1271,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(ans",{"_index":1181,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["if(cat",{"_index":358,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["if(friend",{"_index":686,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["if(friendid",{"_index":794,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(friendid?.length",{"_index":797,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(res.hasownproperty('message",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(res[\"message\"]==true",{"_index":808,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(res['creatorid",{"_index":1299,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(res['friend_exists",{"_index":801,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(res['message",{"_index":420,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["if(res['quizid",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["if(this.questionform.valid",{"_index":1284,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(this.questionformtext.valid",{"_index":1293,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(this.quiz.type===\"text",{"_index":1473,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["if(this.toggled",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.user",{"_index":719,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{}}}],["if(user",{"_index":662,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["if(value",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["image",{"_index":448,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["implements",{"_index":357,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["import",{"_index":110,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1400,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["imports",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":48,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["increment",{"_index":920,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["info',quiz._id",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["info'},{'name",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["info.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.html",{"_index":696,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.scss",{"_index":695,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts",{"_index":694,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:14",{"_index":1445,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:15",{"_index":707,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:16",{"_index":703,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:17",{"_index":1446,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:18",{"_index":710,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:19",{"_index":711,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:20",{"_index":706,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:21",{"_index":708,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:23",{"_index":709,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:25",{"_index":704,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1449,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:29",{"_index":1444,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:30",{"_index":1447,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1448,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:33",{"_index":1443,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:57",{"_index":1442,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:61",{"_index":1441,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info/\"+this.quiz_id",{"_index":1177,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["info/:id",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["info/friend",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FriendInfoComponent.html":{},"coverage.html":{}}}],["info/quiz",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":548,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizInfoComponent.html":{}}}],["initialised",{"_index":1111,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["inject",{"_index":74,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1419,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["input",{"_index":1131,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["input[type=\"text",{"_index":1196,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["inputs",{"_index":1097,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["install",{"_index":1777,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1776,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1781,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1756,"title":{},"body":{"index.html":{}}}],["interface",{"_index":10,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["invalid",{"_index":611,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invalid:not(form",{"_index":633,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["involves",{"_index":1760,"title":{},"body":{"index.html":{}}}],["issue",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["it's",{"_index":1523,"title":{},"body":{"injectables/QuizService.html":{}}}],["items",{"_index":465,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["itself",{"_index":1009,"title":{},"body":{"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["jetpunk",{"_index":1764,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(correct",{"_index":1289,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["json.parse(this.current_user",{"_index":786,"title":{},"body":{"components/FriendsComponent.html":{}}}],["json.parse(this.user",{"_index":721,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{}}}],["json.parse(use",{"_index":1251,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["json.parse(user",{"_index":584,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.parse(window.sessionstorage.getitem(\"user",{"_index":405,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["json.stringify",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(answer",{"_index":126,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(answerarr",{"_index":136,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(bookmark",{"_index":384,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["json.stringify(newquiz",{"_index":1537,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(question",{"_index":1056,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(questions",{"_index":1059,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(response",{"_index":603,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.stringify(update",{"_index":1541,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(user",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user[0",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify({plays",{"_index":847,"title":{},"body":{"injectables/HistoryService.html":{}}}],["justify",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["kellie",{"_index":450,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["kondratiev",{"_index":617,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["label",{"_index":642,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["large",{"_index":1209,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["last",{"_index":1349,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["leaderboard",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LeaderboardComponent.html":{}}}],["leaderboard'},{'name",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["leaderboard.component.html",{"_index":919,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard.component.scss",{"_index":918,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard/leaderboard.component",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["leaderboardcomponent",{"_index":239,"title":{"components/LeaderboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leaderboardservice",{"_index":922,"title":{"injectables/LeaderboardService.html":{}},"body":{"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"coverage.html":{}}}],["left",{"_index":438,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["li",{"_index":1432,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["lightblue",{"_index":1401,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["link",{"_index":934,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"index.html":{}}}],["list",{"_index":527,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["live",{"_index":1810,"title":{},"body":{"index.html":{}}}],["load",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":1794,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1782,"title":{},"body":{"index.html":{}}}],["log",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":565,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["logging",{"_index":669,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["login",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["login(user",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.html",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_form",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":241,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguard",{"_index":323,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["loginuser",{"_index":531,"title":{"classes/LoginUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["lose",{"_index":1388,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["made",{"_index":523,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["main",{"_index":1396,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["many",{"_index":89,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateQuiz.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{}}}],["manyans",{"_index":1304,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["margin",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["marked",{"_index":1395,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["master",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["masteranswercomponent",{"_index":243,"title":{"components/MasterAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["match",{"_index":615,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["match_ctrl",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_ctrl.value",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1403,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["mcq",{"_index":1314,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["medium",{"_index":1212,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["menu",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["method",{"_index":1253,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["methods",{"_index":63,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":1421,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["min",{"_index":1402,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["miscellaneous",{"_index":1746,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":455,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["models/answer",{"_index":118,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["models/bookmarks",{"_index":381,"title":{},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["models/categories",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["models/friend",{"_index":685,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["models/history",{"_index":713,"title":{},"body":{"components/FriendInfoComponent.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{}}}],["models/qna",{"_index":1249,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["models/question",{"_index":1054,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["models/quiz",{"_index":356,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{}}}],["models/user",{"_index":411,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":260,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1817,"title":{},"body":{"index.html":{}}}],["more",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["much",{"_index":1129,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["multiple",{"_index":501,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["multiplechoice",{"_index":1013,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["multiply",{"_index":456,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["name",{"_index":78,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nans",{"_index":125,"title":{},"body":{"injectables/AnswerService.html":{}}}],["navbar",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar_menu",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1440,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["navigatequiz",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigatequiz(quiz",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["nbookmark",{"_index":383,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["need",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["new",{"_index":131,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newanswer",{"_index":53,"title":{"classes/NewAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["newq",{"_index":1303,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["newquestion",{"_index":1006,"title":{"classes/NewQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["newquestionanswer",{"_index":1016,"title":{"classes/NewQuestionAnswer.html":{}},"body":{"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["newquestions",{"_index":1301,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["newquiz",{"_index":1275,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["next",{"_index":1298,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ng",{"_index":626,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":1095,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["ngoninit",{"_index":392,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["nicely",{"_index":458,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["node",{"_index":1815,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1778,"title":{},"body":{"index.html":{}}}],["none",{"_index":1200,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["note",{"_index":1386,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["now",{"_index":1173,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["npm",{"_index":1779,"title":{},"body":{"index.html":{}}}],["nquestion",{"_index":1055,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquestions",{"_index":1058,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquiz",{"_index":1536,"title":{},"body":{"injectables/QuizService.html":{}}}],["null",{"_index":663,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":33,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["number(this.createquizform.get(\"quiztimer\")?.value",{"_index":1270,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["numcorrect",{"_index":1157,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["nupdate",{"_index":1540,"title":{},"body":{"injectables/QuizService.html":{}}}],["object",{"_index":1254,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["observable",{"_index":85,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["occurs",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["once",{"_index":1378,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ondestroy",{"_index":1081,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["oninit",{"_index":388,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["opacity",{"_index":447,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["openrunning",{"_index":1788,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1309,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["order",{"_index":1362,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ordered",{"_index":481,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["out",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"overview.html":{}}}],["overall",{"_index":1450,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["overview",{"_index":1822,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1194,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["package",{"_index":1729,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":640,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["page",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["panel",{"_index":466,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["param",{"_index":123,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params['id",{"_index":718,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["params['quiz",{"_index":1489,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["params['result",{"_index":1491,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["params['user",{"_index":1488,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["parse",{"_index":507,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["particular",{"_index":1533,"title":{},"body":{"injectables/QuizService.html":{}}}],["pass",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":513,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":613,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":1595,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["pipe",{"_index":134,"title":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pipe(catcherror(handleerror",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["pipes",{"_index":347,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"overview.html":{}}}],["pipes/book",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter.pipe",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":355,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["places",{"_index":1381,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["platform",{"_index":1175,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["play",{"_index":1172,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["play_times",{"_index":698,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["played",{"_index":494,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["players",{"_index":1385,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["playrandomquiz",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["plays",{"_index":482,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["please",{"_index":1280,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pointer",{"_index":1202,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["populate",{"_index":546,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["position",{"_index":459,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["previous",{"_index":1407,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["prior",{"_index":1359,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["private",{"_index":412,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["profile",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizCreateComponent.html":{}}}],["profile'},{'name",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile.component",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":535,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":534,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":533,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":575,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:110",{"_index":577,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:116",{"_index":579,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":562,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":557,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":545,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":566,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":549,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:86",{"_index":568,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:92",{"_index":571,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":573,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.guard",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.guard.ts",{"_index":651,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["profile.guard.ts:18",{"_index":656,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["profile/edit",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":1574,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["progress",{"_index":1344,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["project",{"_index":1759,"title":{},"body":{"index.html":{}}}],["promise",{"_index":660,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provided",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["providedin",{"_index":121,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":538,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["publish",{"_index":1383,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["published",{"_index":1379,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["publishquiz",{"_index":1223,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pushes",{"_index":1282,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pushing",{"_index":1804,"title":{},"body":{"index.html":{}}}],["qcategory",{"_index":1262,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qcategory)?._id",{"_index":1266,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qdescription",{"_index":1260,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qna",{"_index":1018,"title":{},"body":{"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{}}}],["qname",{"_index":1258,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qtimer",{"_index":1269,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qtype",{"_index":1267,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quest",{"_index":1207,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["question",{"_index":50,"title":{"classes/Question.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["question.answer",{"_index":1347,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["question.question",{"_index":1185,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["question:updatequestion",{"_index":1065,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionform",{"_index":1218,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["questionformtext",{"_index":1219,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["questionid",{"_index":40,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["questions",{"_index":993,"title":{},"body":{"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["questionservice",{"_index":1028,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["quiz",{"_index":22,"title":{"classes/Quiz.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["quiz._id",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.category",{"_index":692,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["quiz.creatorid",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.description",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name",{"_index":426,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name.includes(cat",{"_index":360,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["quiz_id",{"_index":1087,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["quiz_platform",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["quiz_platformstart",{"_index":1785,"title":{},"body":{"index.html":{}}}],["quizanswercomponent",{"_index":246,"title":{"components/QuizAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizcategory",{"_index":1235,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizcreatecomponent",{"_index":247,"title":{"components/QuizCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdescription",{"_index":1234,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizid",{"_index":13,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateQuestion.html":{}}}],["quizid:string,userid:string",{"_index":1552,"title":{},"body":{"injectables/QuizService.html":{}}}],["quizinfocomponent",{"_index":249,"title":{"components/QuizInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizname",{"_index":1088,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["quizresultcomponent",{"_index":250,"title":{"components/QuizResultComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizsaved",{"_index":1220,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizsearchcomponent",{"_index":252,"title":{"components/QuizSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizservice",{"_index":395,"title":{"injectables/QuizService.html":{}},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quiztime",{"_index":983,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["quiztimer",{"_index":1236,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quiztype",{"_index":984,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["quiztypeincomponent",{"_index":254,"title":{"components/QuizTypeinComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":99,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"index.html":{}}}],["quizzes.filter(quiz",{"_index":359,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["radial",{"_index":431,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["radio",{"_index":1211,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["radius",{"_index":756,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["random",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["randomize",{"_index":1363,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ranking",{"_index":932,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["rated",{"_index":1775,"title":{},"body":{"index.html":{}}}],["rating",{"_index":933,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{}}}],["rating_form",{"_index":1089,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["raw",{"_index":1408,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ray.cyclic.app/api/answer",{"_index":105,"title":{},"body":{"injectables/AnswerService.html":{}}}],["ray.cyclic.app/api/bookmark",{"_index":379,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["ray.cyclic.app/api/category/getallcategories\").pipe",{"_index":1547,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/category/getcategory/\"+id).pipe",{"_index":1549,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/friend/createfriend\",body",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/friend/deletefriend/\"+friendobjid).pipe",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/friend/getfriends/\"+userid).pipe",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/history",{"_index":842,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ray.cyclic.app/api/leaderboard",{"_index":949,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["ray.cyclic.app/api/question",{"_index":1052,"title":{},"body":{"injectables/QuestionService.html":{}}}],["ray.cyclic.app/api/quiz",{"_index":1534,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/rating/createrating",{"_index":1554,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/user",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/user/updateuser/\"+userid,userupdated",{"_index":850,"title":{},"body":{"injectables/HistoryService.html":{}}}],["reactiveformsmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["ready",{"_index":1374,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["red",{"_index":635,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["redirectto",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registered",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser",{"_index":1579,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1577,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":1576,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration_form",{"_index":1578,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":256,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reintegrate",{"_index":1410,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["related",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["relative",{"_index":1418,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["remove",{"_index":375,"title":{},"body":{"injectables/BookmarkService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["removebookmark",{"_index":393,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removebookmark(quiz",{"_index":398,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removefriend",{"_index":767,"title":{},"body":{"components/FriendsComponent.html":{}}}],["removefriend(friend",{"_index":773,"title":{},"body":{"components/FriendsComponent.html":{}}}],["removequestion",{"_index":1224,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["removequestion(question",{"_index":1231,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["removes",{"_index":1043,"title":{},"body":{"injectables/QuestionService.html":{}}}],["repeat",{"_index":460,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["replaceid",{"_index":1288,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["report",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["represents",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{}}}],["request",{"_index":83,"title":{},"body":{"injectables/AnswerService.html":{},"components/RegistrationComponent.html":{}}}],["requests",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":610,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["res",{"_index":415,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["res.find(cat",{"_index":1264,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["res.foreach(element",{"_index":788,"title":{},"body":{"components/FriendsComponent.html":{}}}],["res.name",{"_index":1138,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["res.tostring",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["res?._id",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["res['userid",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["reserve",{"_index":1390,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["reset",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":600,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["responsible",{"_index":1451,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["result",{"_index":1203,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["result'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["result.component",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["result.component.html",{"_index":1481,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.scss",{"_index":1480,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts",{"_index":1479,"title":{},"body":{"components/QuizResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:10",{"_index":1485,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:11",{"_index":1486,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:12",{"_index":1484,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:13",{"_index":1482,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:16",{"_index":1483,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.foreach(element",{"_index":1144,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["result/:user/:quiz/:result",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result/quiz",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizResultComponent.html":{},"coverage.html":{}}}],["result['email_status",{"_index":1594,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["rgba(255",{"_index":620,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["right",{"_index":441,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["route",{"_index":659,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["router",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["router:router",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{}}}],["routermodule",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":655,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["routes",{"_index":319,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1109,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["running",{"_index":1802,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":117,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ryutaro",{"_index":1611,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["s",{"_index":1163,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["save",{"_index":1311,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["saved",{"_index":1279,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["saves",{"_index":1255,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["sayles",{"_index":1615,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["scale",{"_index":457,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["scale(1.1",{"_index":752,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["scale(1.2",{"_index":750,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["score",{"_index":485,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/User.html":{}}}],["scored",{"_index":1165,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["scoredisplay",{"_index":1090,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["search",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{}}}],["search'},{'name",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["search(value",{"_index":401,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{}}}],["search.component",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["search.component.html",{"_index":1494,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.scss",{"_index":1493,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts",{"_index":1492,"title":{},"body":{"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:14",{"_index":1495,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:18",{"_index":1498,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:19",{"_index":1499,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:21",{"_index":1500,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:23",{"_index":1497,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:33",{"_index":1496,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search/:id",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search/quiz",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search_bar",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["search_quiz",{"_index":1510,"title":{},"body":{"injectables/QuizService.html":{}}}],["search_quiz(id",{"_index":1529,"title":{},"body":{"injectables/QuizService.html":{}}}],["searchable",{"_index":1384,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["searcheditem",{"_index":391,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{}}}],["second",{"_index":1148,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["seconds",{"_index":1315,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["see",{"_index":732,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["select",{"_index":644,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["select::before",{"_index":1422,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["selected",{"_index":1372,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["selectedcategory",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectedcatid",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["self",{"_index":1406,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["send",{"_index":1394,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["serve",{"_index":1787,"title":{},"body":{"index.html":{}}}],["servecontinuous",{"_index":1797,"title":{},"body":{"index.html":{}}}],["server",{"_index":1786,"title":{},"body":{"index.html":{}}}],["service",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["services/answer.service",{"_index":1134,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/bookmark.service",{"_index":409,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["services/history.service",{"_index":712,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["services/leaderboard.service",{"_index":927,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["services/question.service",{"_index":1133,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/quiz.service",{"_index":410,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["services/user.service",{"_index":580,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["sessionstorage.setitem(\"user",{"_index":602,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{}}}],["sessionstorage.setitem(\"user\",json.stringify(user",{"_index":1180,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["setinterval",{"_index":1150,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["setup",{"_index":558,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["share",{"_index":1117,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"index.html":{}}}],["short",{"_index":612,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["show",{"_index":1375,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["sign",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1762,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1773,"title":{},"body":{"index.html":{}}}],["single",{"_index":1352,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["site",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":443,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["sizing",{"_index":1430,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["solid",{"_index":630,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["space",{"_index":470,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["specifc",{"_index":1046,"title":{},"body":{"injectables/QuestionService.html":{}}}],["specific",{"_index":97,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuizInfoComponent.html":{}}}],["specified",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["sporcle",{"_index":1763,"title":{},"body":{"index.html":{}}}],["src/.../errorhandler.ts",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/bookmarks/bookmarks.component.ts",{"_index":387,"title":{},"body":{"components/BookmarksComponent.html":{},"coverage.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:15",{"_index":403,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:16",{"_index":404,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:17",{"_index":406,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:18",{"_index":396,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:21",{"_index":397,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:32",{"_index":400,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:50",{"_index":402,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/edit",{"_index":532,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/friend",{"_index":693,"title":{},"body":{"components/FriendInfoComponent.html":{},"coverage.html":{}}}],["src/app/friends/friends.component.ts",{"_index":759,"title":{},"body":{"components/FriendsComponent.html":{},"coverage.html":{}}}],["src/app/friends/friends.component.ts:15",{"_index":782,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:17",{"_index":777,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:19",{"_index":778,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:20",{"_index":781,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:22",{"_index":772,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:38",{"_index":769,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:41",{"_index":780,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:47",{"_index":770,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:65",{"_index":774,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:76",{"_index":771,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:81",{"_index":775,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/guards/edit",{"_index":650,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts",{"_index":974,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts:9",{"_index":975,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/home/home.component.ts",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:17",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:25",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:26",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:27",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:43",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:63",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:73",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:79",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts",{"_index":917,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:12",{"_index":926,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:13",{"_index":923,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:17",{"_index":925,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:26",{"_index":924,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:61",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:67",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/master",{"_index":979,"title":{},"body":{"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["src/app/models/answer.ts",{"_index":38,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["src/app/models/answer.ts:12",{"_index":1005,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:16",{"_index":1002,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:20",{"_index":1003,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:31",{"_index":49,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:35",{"_index":52,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:39",{"_index":43,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:43",{"_index":46,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:47",{"_index":42,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:51",{"_index":41,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:61",{"_index":1617,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:65",{"_index":1618,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:8",{"_index":1004,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/bookmarks.ts",{"_index":6,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"coverage.html":{}}}],["src/app/models/bookmarks.ts:12",{"_index":364,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:16",{"_index":363,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:21",{"_index":361,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:30",{"_index":25,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:34",{"_index":21,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:8",{"_index":362,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/categories.ts",{"_index":473,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/models/categories.ts:12",{"_index":476,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:16",{"_index":474,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:8",{"_index":475,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/friend.ts",{"_index":675,"title":{},"body":{"classes/FRIEND.html":{},"coverage.html":{}}}],["src/app/models/friend.ts:2",{"_index":679,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/friend.ts:3",{"_index":678,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/friend.ts:4",{"_index":677,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/history.ts",{"_index":819,"title":{},"body":{"classes/History.html":{},"classes/HistoryArr.html":{},"coverage.html":{}}}],["src/app/models/history.ts:10",{"_index":828,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:11",{"_index":826,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:12",{"_index":824,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:13",{"_index":825,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:2",{"_index":820,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/history.ts:3",{"_index":822,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/history.ts:4",{"_index":821,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/history.ts:8",{"_index":827,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:9",{"_index":829,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/qna.ts",{"_index":1017,"title":{},"body":{"classes/NewQuestionAnswer.html":{},"coverage.html":{}}}],["src/app/models/qna.ts:13",{"_index":1021,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:18",{"_index":1019,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:20",{"_index":1020,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:8",{"_index":1022,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/question.ts",{"_index":1007,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["src/app/models/question.ts:13",{"_index":1012,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:18",{"_index":1008,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:28",{"_index":1026,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:33",{"_index":1027,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:38",{"_index":1025,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:43",{"_index":1024,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:48",{"_index":1023,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:58",{"_index":1619,"title":{},"body":{"classes/UpdateQuestion.html":{}}}],["src/app/models/question.ts:8",{"_index":1010,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/quiz.ts",{"_index":478,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts:12",{"_index":489,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:16",{"_index":487,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:20",{"_index":486,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:24",{"_index":499,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:28",{"_index":492,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:32",{"_index":484,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:36",{"_index":491,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:40",{"_index":496,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:49",{"_index":1074,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:53",{"_index":1073,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:57",{"_index":1072,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:61",{"_index":1071,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:65",{"_index":1079,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:69",{"_index":1076,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:73",{"_index":1070,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:77",{"_index":1075,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:8",{"_index":490,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:81",{"_index":1077,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:85",{"_index":1078,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:90",{"_index":1069,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:94",{"_index":1068,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/user.ts",{"_index":505,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:100",{"_index":672,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:110",{"_index":977,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:114",{"_index":978,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:13",{"_index":1629,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1624,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1628,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1623,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1625,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1626,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1627,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:42",{"_index":1621,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:52",{"_index":525,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:57",{"_index":519,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:61",{"_index":524,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:65",{"_index":516,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:69",{"_index":521,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:73",{"_index":522,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:8",{"_index":1622,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:83",{"_index":674,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:88",{"_index":671,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:92",{"_index":673,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:96",{"_index":670,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/pipes/book",{"_index":348,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter",{"_index":680,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts",{"_index":689,"title":{},"body":{"pipes/FilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts:14",{"_index":690,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/quiz",{"_index":1080,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1575,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:103",{"_index":1588,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:109",{"_index":1589,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:115",{"_index":1590,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":1580,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:22",{"_index":1584,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:27",{"_index":1583,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:53",{"_index":1582,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:85",{"_index":1585,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:91",{"_index":1586,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:97",{"_index":1587,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/services/answer.service.ts",{"_index":59,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/services/answer.service.ts:13",{"_index":73,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:24",{"_index":106,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:29",{"_index":81,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:45",{"_index":87,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:60",{"_index":98,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:71",{"_index":96,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:83",{"_index":101,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:97",{"_index":93,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/bookmark.service.ts",{"_index":366,"title":{},"body":{"injectables/BookmarkService.html":{},"coverage.html":{}}}],["src/app/services/bookmark.service.ts:13",{"_index":370,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:24",{"_index":380,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:31",{"_index":377,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:42",{"_index":372,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:58",{"_index":374,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/history.service.ts",{"_index":830,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history.service.ts:10",{"_index":834,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:16",{"_index":843,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:18",{"_index":836,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:28",{"_index":838,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:32",{"_index":840,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/leaderboard.service.ts",{"_index":945,"title":{},"body":{"injectables/LeaderboardService.html":{},"coverage.html":{}}}],["src/app/services/leaderboard.service.ts:10",{"_index":947,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/leaderboard.service.ts:17",{"_index":950,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/leaderboard.service.ts:19",{"_index":948,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/question.service.ts",{"_index":1029,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:100",{"_index":1042,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:14",{"_index":1036,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:25",{"_index":1053,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:32",{"_index":1040,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:48",{"_index":1038,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:63",{"_index":1047,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:74",{"_index":1045,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:86",{"_index":1050,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":1503,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:108",{"_index":1521,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:119",{"_index":1530,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:132",{"_index":1514,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:14",{"_index":1512,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:25",{"_index":1535,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:32",{"_index":1517,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:48",{"_index":1528,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:60",{"_index":1532,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:76",{"_index":1519,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:86",{"_index":1526,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:97",{"_index":1525,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/user.service.ts",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:110",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:121",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:132",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:61",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:77",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:93",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/utilities/errorhandler.ts",{"_index":1725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utilities/password.validator.ts",{"_index":1727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1813,"title":{},"body":{"index.html":{}}}],["stanislav",{"_index":616,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["start",{"_index":1477,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["started",{"_index":1753,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1360,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["state",{"_index":654,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["statements",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1754,"title":{},"body":{"index.html":{}}}],["still",{"_index":1393,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["stop",{"_index":1113,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["stoptimer",{"_index":1096,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["string(response",{"_index":791,"title":{},"body":{"components/FriendsComponent.html":{}}}],["style",{"_index":1426,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["styles",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["sub",{"_index":699,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["submit",{"_index":1187,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["subtitle",{"_index":1414,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["such",{"_index":1772,"title":{},"body":{"index.html":{}}}],["supplies",{"_index":1398,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["support",{"_index":1818,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":514,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["svg",{"_index":1819,"title":{},"body":{"modules.html":{}}}],["tabcontent",{"_index":1405,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["table",{"_index":944,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1431,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tag",{"_index":1368,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tags",{"_index":1310,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["take",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["taken",{"_index":1591,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["tech",{"_index":1812,"title":{},"body":{"index.html":{}}}],["template",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["temporary",{"_index":1256,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tempquiz",{"_index":1221,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["test",{"_index":658,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["testauto",{"_index":1792,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1789,"title":{},"body":{"index.html":{}}}],["text",{"_index":51,"title":{},"body":{"classes/Answer.html":{},"classes/CreateQuiz.html":{},"components/FriendInfoComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["this.answer_form",{"_index":1146,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answer_form.get(element._id)?.value",{"_index":1158,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answers.foreach(element",{"_index":1159,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answers.push(element",{"_index":1145,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answerservice.get_question_answer(element._id).subscribe((result",{"_index":1143,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.bookmarks",{"_index":414,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarks.foreach(element",{"_index":416,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.add_bookmark(bookmark).subscribe((res",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.bookmarkservice.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res",{"_index":419,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.get_bookmarks(this.user._id).subscribe((res",{"_index":413,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.booltimesup",{"_index":1153,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.buttondispl",{"_index":814,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["this.catagories",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.catagories.find(val",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categories",{"_index":1252,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.category",{"_index":1460,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.checkanswers",{"_index":1155,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.clipboard.copy(this.link",{"_index":1183,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.clipboard.copy(this.user._id",{"_index":813,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.confirm_password?.setvalue(this.userobj.password",{"_index":590,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.countdowntimer",{"_index":1149,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.created_by",{"_index":1464,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.createquizform.get(\"quizcategory\")?.value",{"_index":1263,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quizdescription\")?.value",{"_index":1261,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quizname\")?.value",{"_index":1259,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quiztype\")?.value",{"_index":1268,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.current_user",{"_index":785,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.description",{"_index":1457,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.done",{"_index":1167,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.email?.setvalue(this.userobj.email",{"_index":588,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.email?.value",{"_index":595,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.first_name?.setvalue(this.userobj.firstname",{"_index":585,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.first_name?.value",{"_index":592,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.friend_form.get(\"friend_id\")?.value",{"_index":793,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.friends",{"_index":792,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.friends.push(res",{"_index":805,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.friends.splice(idx,1",{"_index":809,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.history",{"_index":724,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["this.history.length",{"_index":727,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["this.historyservice.create_history(history).subscribe((res",{"_index":1178,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.historyservice.get_history(userobj._id).subscribe((res",{"_index":723,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["this.historyservice.update_user_plays(user.plays,user._id).subscribe((res",{"_index":1179,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.http.delete(\"https://clumsy",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.base_url",{"_index":1544,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.delete(this.base_url+\"/deleteanswer/\"+id).pipe",{"_index":143,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.delete(this.base_url+\"/deletebookmark/\"+bookmark._id).pipe",{"_index":386,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.delete(this.base_url+\"/deletequestion/\"+question._id).pipe",{"_index":1067,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(\"https://clumsy",{"_index":1546,"title":{},"body":{"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["this.http.get(this.base_url",{"_index":1538,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/emailexists",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.base_url+\"/getallanswers\").pipe",{"_index":138,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getallquestions\").pipe",{"_index":1062,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getanswers/\"+questionid).pipe",{"_index":139,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getbookmarks/\"+userid).pipe",{"_index":382,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.get(this.base_url+\"/getname/\"+id).pipe",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.base_url+\"/getquestions/\"+id).pipe",{"_index":1063,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getquiz/\"+id).pipe",{"_index":1548,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/getuserhistory/\"+userid",{"_index":845,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.get(this.base_url+\"/highestscores\").pipe",{"_index":951,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["this.http.get(this.base_url+\"/searchquiz/\"+id).pipe",{"_index":1550,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(\"https://clumsy",{"_index":849,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.patch(this.base_url+\"/updateanswer/\"+id",{"_index":142,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.patch(this.base_url+\"/updatequestion/\"+id",{"_index":1066,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.patch(this.base_url+\"/updatequiz",{"_index":1542,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(this.base_url+\"/updateuser/\"+userid,userupdated",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(\"https://clumsy",{"_index":1553,"title":{},"body":{"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.base_url",{"_index":128,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["this.http.post(this.base_url+\"/createbookmark",{"_index":385,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.post(this.base_url+\"/createhistory\",history",{"_index":844,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.post(this.base_url+\"/createmanyanswers\",nans",{"_index":137,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.post(this.base_url+\"/createmanyquestions\",nquestions",{"_index":1060,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.post(this.base_url+\"/createuser\",usernew",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url+\"/login\",body",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.id",{"_index":717,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.increment",{"_index":930,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.leaderboardservice.getleaderboard().subscribe((res",{"_index":928,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.link",{"_index":1171,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.login_form.get(\"email",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"email\")?.value",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password\")?.value",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.reset",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1455,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.add(\"is",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.remove(\"is",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password?.setvalue(this.userobj.password",{"_index":589,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.password?.value",{"_index":596,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.questionform.get(\"answer\")?.value",{"_index":1286,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.get(\"question\")?.value",{"_index":1285,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.get(\"truth\")?.value",{"_index":1287,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.valid",{"_index":1345,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionformtext.get(\"answer\")?.value",{"_index":1295,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionformtext.get(\"question\")?.value",{"_index":1294,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionformtext.valid",{"_index":1346,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questions",{"_index":1140,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questions.foreach(element",{"_index":1141,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questions.length",{"_index":1166,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questions.push(qna",{"_index":1291,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionservice.get_quiz_questions(this.quiz_id).subscribe((value",{"_index":1139,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quiz",{"_index":996,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["this.quiz.timer",{"_index":1000,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz.type",{"_index":998,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz_id",{"_index":1135,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quizid",{"_index":994,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizResultComponent.html":{}}}],["this.quizname",{"_index":1137,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.quizsaved",{"_index":1277,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.quizservice.addrating(parseint(ans),this.quiz_id,user._id).subscribe((res",{"_index":1182,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.quizservice.get_category_byid(this.category).subscribe(res",{"_index":1470,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.quizservice.get_quiz_byid(element.quizid).subscribe((res",{"_index":417,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.id).subscribe((value",{"_index":1454,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.quiz_id).subscribe((res",{"_index":1136,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.quizid).subscribe((res",{"_index":995,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizservice.get_quiz_categories().subscribe((res",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{}}}],["this.quizservice.getallquiz().subscribe((res",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.quizservice.search_quiz(this.id).subscribe(res",{"_index":1501,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["this.quiztime",{"_index":999,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiztype",{"_index":997,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizzes",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.quizzes.foreach(quiz",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.quizzes.push(res",{"_index":418,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizzes.splice(idx,1",{"_index":421,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizzes[math.floor(math.random()*this.quizzes.length",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.rating",{"_index":1459,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.rating_form.get(\"rating\")?.value",{"_index":1169,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.registration_form.get(\"confirm_password",{"_index":1607,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"email",{"_index":1605,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"first_name",{"_index":1602,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"password",{"_index":1606,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"surname",{"_index":1603,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"username",{"_index":1604,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.reset",{"_index":1598,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.result",{"_index":1490,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":716,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.router.navigate(['/home",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1597,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/quiz",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["this.router.navigatebyurl(url",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.score",{"_index":931,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.scoredisplay",{"_index":1164,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.search_bar?.nativeelement.value",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["this.searcheditem",{"_index":816,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.selectedcategory",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectedcatid",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.stoptimer",{"_index":1156,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.sub",{"_index":715,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.sub.unsubscribe",{"_index":1472,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.surname?.setvalue(this.userobj.surname",{"_index":586,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.surname?.value",{"_index":593,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.tempquiz",{"_index":1276,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.thumbnail",{"_index":1468,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.timeleft",{"_index":1151,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.timeleftdisplay",{"_index":1162,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.timevalue",{"_index":1466,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.toggled",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.total_played",{"_index":1462,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.update_form.get(\"confirm_password",{"_index":609,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"email",{"_index":607,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"first_name",{"_index":604,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"password",{"_index":608,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"surname",{"_index":605,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"username",{"_index":606,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user",{"_index":722,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["this.user._id",{"_index":795,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizCreateComponent.html":{}}}],["this.userid",{"_index":1487,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["this.username?.setvalue(this.userobj.username",{"_index":587,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.value",{"_index":594,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.userobj",{"_index":583,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userobj._id",{"_index":591,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.users",{"_index":929,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.check_email_exists(user.email).subscribe((res",{"_index":1593,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.create_friends(friendid,this.user._id).subscribe((res",{"_index":800,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.create_user(user).subscribe",{"_index":1596,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.delete_friend(friend._id).subscribe((res",{"_index":807,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.edit_user(user,userid).subscribe",{"_index":599,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.get_usernameid(element.friendid).subscribe((response",{"_index":789,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.get_usernameid(quiz.creatorid).subscribe(res",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.userservice.get_usernameid(this.created_by).subscribe(res",{"_index":1471,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.userservice.getfriends(this.user._id).subscribe((res",{"_index":787,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.login(body).subscribe((res",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":116,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["thumbnail",{"_index":503,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["thy're",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["tilemain",{"_index":733,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["tilesub",{"_index":734,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["tilesub:hover",{"_index":749,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["time",{"_index":497,"title":{},"body":{"classes/CreateQuiz.html":{},"components/MasterAnswerComponent.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timeleft",{"_index":1098,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timeleftdisplay",{"_index":1091,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timer",{"_index":483,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["times",{"_index":493,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["timevalue",{"_index":1438,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["title",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizCreateComponent.html":{}}}],["toggle",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["toggled",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":442,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["total",{"_index":728,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["total_played",{"_index":1439,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["transform",{"_index":351,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["transform(friends",{"_index":683,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["transform(quizzes",{"_index":352,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["transition",{"_index":736,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["translatex",{"_index":1436,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["translatey",{"_index":1425,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["transparent",{"_index":435,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"injectables/UserService.html":{}}}],["true/false",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["truth",{"_index":1238,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["try",{"_index":1600,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["tslib",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["tsukata",{"_index":1612,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":1061,"title":{},"body":{"injectables/QuestionService.html":{}}}],["typein",{"_index":1556,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein',this.id",{"_index":1475,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["typein'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["typein.component",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["typein.component.html",{"_index":1558,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.scss",{"_index":1557,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts",{"_index":1555,"title":{},"body":{"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["typein.component.ts:100",{"_index":1561,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:15",{"_index":1560,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:17",{"_index":1570,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:18",{"_index":1565,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:20",{"_index":1572,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:26",{"_index":1568,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:30",{"_index":1573,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:34",{"_index":1571,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:36",{"_index":1567,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:38",{"_index":1559,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:42",{"_index":1569,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:44",{"_index":1566,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:49",{"_index":1563,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:85",{"_index":1562,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:92",{"_index":1564,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein/:id",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["typein/quiz",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["types",{"_index":1771,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":528,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["up",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["update",{"_index":427,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateQuestion.html":{},"injectables/UserService.html":{}}}],["update_answer",{"_index":69,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id",{"_index":100,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id:string",{"_index":140,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_form",{"_index":536,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["update_question",{"_index":1035,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id",{"_index":1049,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id:string",{"_index":1064,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_quiz",{"_index":1511,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_quiz(update",{"_index":1531,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_user_plays",{"_index":833,"title":{},"body":{"injectables/HistoryService.html":{}}}],["update_user_plays(currplays",{"_index":839,"title":{},"body":{"injectables/HistoryService.html":{}}}],["updateanswer",{"_index":54,"title":{"classes/UpdateAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["updated",{"_index":55,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["updatequestion",{"_index":1015,"title":{"classes/UpdateQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["updates",{"_index":102,"title":{},"body":{"injectables/AnswerService.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{}}}],["updateuser",{"_index":540,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updatevalue",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatevalue(value",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["updating",{"_index":530,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["url",{"_index":108,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"classes/CreateQuiz.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["url(\"../../assets/images/pexels",{"_index":449,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["url(\"../../assets/pexels",{"_index":1610,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["url(\"./src/app/school",{"_index":1411,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["url('../../assets/images/school",{"_index":1397,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["url='/quiz",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["urltree",{"_index":661,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["use",{"_index":1250,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/UserService.html":{}}}],["used",{"_index":506,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["user",{"_index":165,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user._id",{"_index":818,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["user.firstname",{"_index":1170,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["user.plays",{"_index":937,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["user.score",{"_index":938,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["user.username",{"_index":936,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["userid",{"_index":14,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["username",{"_index":515,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["usernew",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj",{"_index":537,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["userobj._id",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["userobj:user",{"_index":720,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["users",{"_index":517,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["userservice",{"_index":539,"title":{"injectables/UserService.html":{}},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice:userservice",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["userupdated",{"_index":846,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/UserService.html":{}}}],["using",{"_index":1799,"title":{},"body":{"index.html":{}}}],["utilities/errorhandler",{"_index":120,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["utilities/password.validator",{"_index":581,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["val.name",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid.required",{"_index":628,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":627,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":555,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":553,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":554,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":552,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.category",{"_index":1461,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.creatorid",{"_index":1465,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.description",{"_index":1458,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.name",{"_index":1456,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.plays",{"_index":1463,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.thumbnail",{"_index":1469,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.timer",{"_index":1467,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["values",{"_index":1051,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["var",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":564,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1825,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1770,"title":{},"body":{"index.html":{}}}],["version",{"_index":31,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"properties.html":{}}}],["vertical",{"_index":1420,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["viewable",{"_index":1380,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["viewchild",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{}}}],["viewchild('navbar_menu",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('search_bar",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["weight",{"_index":743,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["well",{"_index":1807,"title":{},"body":{"index.html":{}}}],["whether",{"_index":47,"title":{},"body":{"classes/Answer.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["width",{"_index":645,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["within",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["without",{"_index":668,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["word",{"_index":1350,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["words",{"_index":1354,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["world",{"_index":1376,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["worlds",{"_index":1608,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["wrong",{"_index":1355,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["x",{"_index":1208,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["yes",{"_index":1351,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["yourself",{"_index":796,"title":{},"body":{"components/FriendsComponent.html":{}}}],["zone.js",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddBookmark.html":{"url":"classes/AddBookmark.html","title":"class - AddBookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddBookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Add Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:34\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:30\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                Answer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:51\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:47\n                        \n                    \n\n            \n                \n                    id of Answer from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:39\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:43\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:31\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:35\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/answer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_answer\n                            \n                            \n                                create_many_answers\n                            \n                            \n                                delete_answer\n                            \n                            \n                                get_question_answer\n                            \n                            \n                                getAllAnswers\n                            \n                            \n                                update_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/answer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Angular Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_answer\n                        \n                    \n                \n            \n            \n                \ncreate_answer(answer: NewAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Answer request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                NewAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_answers\n                        \n                    \n                \n            \n            \n                \ncreate_many_answers(answerArr: NewAnswer[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:45\n                \n            \n\n\n            \n                \n                    Creates many answers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answerArr\n                                    \n                                            NewAnswer[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_answer\n                        \n                    \n                \n            \n            \n                \ndelete_answer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:97\n                \n            \n\n\n            \n                \n                    Delete the answer from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_question_answer\n                        \n                    \n                \n            \n            \n                \nget_question_answer(QuestionID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:71\n                \n            \n\n\n            \n                \n                    Get answers to a specific question\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    QuestionID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAnswers\n                        \n                    \n                \n            \n            \n                \ngetAllAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:60\n                \n            \n\n\n            \n                \n                    Get all answers for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_answer\n                        \n                    \n                \n            \n            \n                \nupdate_answer(id: String, answer: UpdateAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:83\n                \n            \n\n\n            \n                \n                    Updates an answer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                UpdateAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/answer\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/answer.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for answer calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Answer, NewAnswer, UpdateAnswer } from '../models/answer';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  /**\n   * Angular Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for answer calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/answer\";\n\n    /**\n   * Create Answer request\n   */\n  create_answer(answer: NewAnswer): Observable {\n    let nans = JSON.stringify(answer);\n    return this.http.post(this.base_url + \"/createAnswer\", nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates many answers\n   * @param answerArr \n   * @returns Answer[]\n   */\n  create_many_answers(answerArr: NewAnswer[]) : Observable{\n    let nans = JSON.stringify(answerArr);\n    return this.http.post(this.base_url+\"/createManyAnswers\",nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Get all answers for all quizzes\n   * @returns Answer[]\n   */\n  getAllAnswers() : Observable{\n    return this.http.get(this.base_url+\"/getAllAnswers\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get answers to a specific question\n   * @param QuestionID \n   * @returns Answer[]\n   */\n  get_question_answer(QuestionID: String) : Observable{\n    return this.http.get(this.base_url+\"/getAnswers/\"+QuestionID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Updates an answer\n   * @param id \n   * @param answer \n   * @returns Answer\n   */\n  update_answer(id:String, answer:UpdateAnswer) : Observable{\n    let nans = JSON.stringify(answer);\n    return this.http.patch(this.base_url+\"/updateAnswer/\"+id, nans,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n  \n  /**\n   * Delete the answer from database\n   * @param id \n   * @returns any\n   */\n  delete_answer(id: string) : Observable{\n    return this.http.delete(this.base_url+\"/deleteAnswer/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular @Component generated by cli\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navbar_menu\n                            \n                            \n                                search_bar\n                            \n                            \n                                title\n                            \n                            \n                                toggled\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n                    Function to toggle menu on mobile navbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navbar_menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbar_menu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Angular @ViewChild Decorator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_bar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('search_bar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz_Platform'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Title of site\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Boolean value toggled: Is navbar-mobile toggled?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Angular @Component generated by cli\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of site\n   */\n  title = 'Quiz_Platform';\n\n  constructor(private router: Router){}\n\n  user = sessionStorage.getItem(\"User\");\n\n  /**\n   * Angular @ViewChild Decorator\n   */\n  @ViewChild('navbar_menu') navbar_menu: ElementRef | undefined;\n\n  @ViewChild('search_bar') search_bar: ElementRef | undefined;\n\n  /**\n   * Boolean value toggled: Is navbar-mobile toggled?\n   */\n  toggled = false;\n\n  /**\n   * Function to toggle menu on mobile navbar\n   */\n  toggle(){\n    if(this.toggled == false){\n      this.navbar_menu?.nativeElement.classList.add(\"is-active\");\n      this.toggled = true;\n    }else{\n      this.navbar_menu?.nativeElement.classList.remove(\"is-active\");\n      this.toggled = false;\n    }\n    console.log(\"toggled navbar!\");\n  }\n\n  search(){\n    let id = this.search_bar?.nativeElement.value;\n    console.log(`Searched for ${id}!`);\n\n    this.router.navigate(['/quiz-search', id]);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n      \n        Home\n      \n\n      \n        My Account\n      \n\n      \n        \n          More\n        \n\n        \n          \n            About\n          \n          \n            Jobs\n          \n          \n            Contact\n          \n          \n          \n            Report an issue\n          \n        \n      \n    \n    \n      \n        \n           \n            \n              \n              \n                \n              \n            \n          \n          \n            \n               \n            \n            Create Quiz\n          \n          \n            \n               \n            \n            Bookmark\n          \n          \n            \n              \n            \n            Leaderboard\n          \n          \n            \n              \n            \n            Friends\n          \n          \n            Sign up\n          \n          \n            Log in\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .field{\n  margin: 5px;\n  justify-content: center;\n}\n\n.buttons{\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Home                    My Account                              More                                      About                                Jobs                                Contact                                          Report an issue                                                                                                                                                                                                                  Create Quiz                                                                       Bookmark                                                                      Leaderboard                                                                      Friends                                Sign up                                Log in                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterFriendsPipe\n\nFilterFriendsPipe\n\nAppModule -->\n\nFilterFriendsPipe->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nFriendInfoComponent\n\nFriendInfoComponent\n\nAppModule -->\n\nFriendInfoComponent->AppModule\n\n\n\n\n\nFriendsComponent\n\nFriendsComponent\n\nAppModule -->\n\nFriendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizResultComponent\n\nQuizResultComponent\n\nAppModule -->\n\nQuizResultComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nQuizTypeinComponent\n\nQuizTypeinComponent\n\nAppModule -->\n\nQuizTypeinComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BookFilterPipe\n                        \n                        \n                            BookmarksComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            FilterFriendsPipe\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            FriendInfoComponent\n                        \n                        \n                            FriendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LeaderboardComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MasterAnswerComponent\n                        \n                        \n                            QuizAnswerComponent\n                        \n                        \n                            QuizCreateComponent\n                        \n                        \n                            QuizInfoComponent\n                        \n                        \n                            QuizResultComponent\n                        \n                        \n                            QuizSearchComponent\n                        \n                        \n                            QuizTypeinComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\n\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\nimport { BookFilterPipe } from './pipes/book-filter.pipe';\nimport { QuizTypeinComponent } from './quiz-typein/quiz-typein.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { FriendInfoComponent } from './friend-info/friend-info.component';\nimport { QuizResultComponent } from './quiz-result/quiz-result.component';\nimport { FilterFriendsPipe } from './pipes/filter-friends.pipe';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    EditProfileComponent,\n    LoginComponent,\n    QuizAnswerComponent,\n    HomeComponent,\n    QuizInfoComponent,\n    BookmarksComponent,\n    FilterPipe,\n    MasterAnswerComponent,\n    QuizCreateComponent,\n    QuizSearchComponent,\n    BookFilterPipe,\n\n    QuizTypeinComponent,\n    FriendsComponent,\n    FriendInfoComponent,\n    QuizResultComponent,\n    FilterFriendsPipe,\n    LeaderboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [FilterPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { EditProfileGuard } from './guards/edit-profile.guard';\nimport { LoginGuard } from './guards/login.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { QuizResultComponent } from './quiz-result/quiz-result.component';\nimport { FriendInfoComponent } from './friend-info/friend-info.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { QuizTypeinComponent } from './quiz-typein/quiz-typein.component';\n\n\n/**\n * Add component and the path at which they will load in the router\n */\nconst routes: Routes = [\n  {path: \"home\", component: HomeComponent},\n  {path: \"register\", component: RegistrationComponent, canActivate: [LoginGuard]},\n  {path: \"login\", component: LoginComponent, canActivate: [LoginGuard]},\n  {path: \"edit-profile\", component: EditProfileComponent, canActivate: [EditProfileGuard]},\n  {path: \"answerQuiz\", component: QuizAnswerComponent},\n  {path: \"quiz-info/:id\", component:QuizInfoComponent},\n  {path: \"bookmarks\", component: BookmarksComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-answer/:id\", component: MasterAnswerComponent},\n  {path: \"quiz-typein/:id\", component: QuizTypeinComponent},\n  {path: \"quiz-create\", component: QuizCreateComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-result/:user/:quiz/:result\", component: QuizResultComponent},\n  {path: \"quiz-search/:id\", component: QuizSearchComponent},\n  {path: \"friends\", component: FriendsComponent, canActivate: [EditProfileGuard]},\n  {path: \"friend-info/:id\", component: FriendInfoComponent, canActivate: [EditProfileGuard]},\n  {path: \"leaderboard\", component: LeaderboardComponent},\n  {path: '**', redirectTo: 'home', pathMatch: 'full'}\n];\n\n\n/**\n * Angular generated code to export the Routes defined within this module.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BookFilterPipe.html":{"url":"pipes/BookFilterPipe.html","title":"pipe - BookFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BookFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/book-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bookFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/book-filter.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'bookFilter'\n})\nexport class BookFilterPipe implements PipeTransform {\n\n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"\"){\n      return quizzes\n    }\n    return quizzes.filter(quiz=> quiz.Name.includes(cat));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmark.html":{"url":"classes/Bookmark.html","title":"class - Bookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:21\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:8\n                        \n                    \n\n            \n                \n                    ID from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:16\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:12\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookmarkService.html":{"url":"injectables/BookmarkService.html","title":"injectable - BookmarkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookmarkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bookmark.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_bookmark\n                            \n                            \n                                delete_bookmark\n                            \n                            \n                                get_bookmarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bookmark.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add_bookmark\n                        \n                    \n                \n            \n            \n                \nadd_bookmark(bookMark: AddBookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:42\n                \n            \n\n\n            \n                \n                    Creates a bookmark for user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                AddBookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_bookmark\n                        \n                    \n                \n            \n            \n                \ndelete_bookmark(bookMark: Bookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:58\n                \n            \n\n\n            \n                \n                    Remove bookmark from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                Bookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_bookmarks\n                        \n                    \n                \n            \n            \n                \nget_bookmarks(UserID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:31\n                \n            \n\n\n            \n                \n                    Return all bookmarks belonging to user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    UserID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/bookmark\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bookmark.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for bookmark calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { AddBookmark, Bookmark } from '../models/bookmarks';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for bookmark calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/bookmark\";\n\n  /**\n   * Return all bookmarks belonging to user\n   * @param UserID \n   * @returns Bookmark[]\n   */\n  get_bookmarks(UserID: String) : Observable{\n    return this.http.get(this.base_url+\"/getBookmarks/\"+UserID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates a bookmark for user\n   * @param bookMark \n   * @returns Bookmark\n   */\n  add_bookmark(bookMark : AddBookmark) : Observable{\n    let nbookmark = JSON.stringify(bookMark);\n    return this.http.post(this.base_url+\"/createBookmark\", nbookmark, {\n      headers: new HttpHeaders({\n        'content-type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove bookmark from database\n   * @param bookMark \n   * @returns any\n   */\n  delete_bookmark(bookMark: Bookmark) : Observable{\n    return this.http.delete(this.base_url+\"/deleteBookmark/\"+bookMark._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookmarksComponent.html":{"url":"components/BookmarksComponent.html","title":"component - BookmarksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookmarksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bookmarks/bookmarks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bookmarks\n            \n\n            \n                styleUrls\n                ./bookmarks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bookmarks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookmarks\n                            \n                            \n                                quizzes\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                removeBookmark\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookmarkService: BookmarkService, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/bookmarks/bookmarks.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBookmark\n                        \n                    \n                \n            \n            \n                \nremoveBookmark(quiz: Quiz, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookmark[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(window.sessionStorage.getItem(\"User\")!)\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, ElementRef} from '@angular/core';\nimport { Bookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.scss'],\n})\n\nexport class BookmarksComponent implements OnInit{\n  bookmarks: Bookmark[] = [];\n  quizzes: Quiz[] = [];\n  user: User = JSON.parse(window.sessionStorage.getItem(\"User\")!);\n  searchedItem: string =  \"\";\n  constructor(private bookmarkService: BookmarkService, private quizService: QuizService){}\n  \n  ngOnInit(){\n    this.bookmarkService.get_bookmarks(this.user._id).subscribe((res: Bookmark[]) =>{\n      this.bookmarks = res;\n      this.bookmarks.forEach(element => {\n        this.quizService.get_quiz_byID(element.QuizID).subscribe((res : Quiz) =>{\n          this.quizzes.push(res)\n        });\n      });\n    });\n  }\n\n  removeBookmark(quiz : Quiz, idx: number){\n    this.bookmarkService.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res) =>{\n      if(res['message']){\n        this.quizzes.splice(idx,1);\n        let index = -1;\n        for(let i = 0; i \n    \n\n    \n        \n    \n\n        \n            \n                Bookmarks\n            \n            \n                Find your favourite quizzes!\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{quiz.Name}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 bookmarks.\n            \n        \n    \n\n    \n\n    \n                \n                    ./bookmarks.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: white;\n    margin-left: 2%;\n    margin-right: 2%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Bookmarks                                        Find your favourite quizzes!                                                                                                                                                                                                        {{quiz.Name}}                                                                                                                                                                                                            You have 0 bookmarks.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookmarksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/categories.ts\n        \n\n\n            \n                Description\n            \n            \n                Category Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:16\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:8\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:12\n                        \n                    \n\n            \n                \n                    The category value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category{\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * The category value\n     */\n    Name: string = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuiz.html":{"url":"classes/CreateQuiz.html","title":"class - CreateQuiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Create Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:32\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:20\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:16\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:12\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:8\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:36\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:28\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:40\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:24\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Thumbnail url for quiz\n     */\n    Thumbnail: string =  \"\";\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateUser class, used to parse form data when creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:65\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:57\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:69\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:73\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:61\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:52\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                update_form\n                            \n                            \n                                userObj\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject userService and to populate form with current users information\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:64\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        update_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n            \n                \n                    Global variable for logged in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:86\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:92\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:98\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:104\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:110\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:116\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent{\n  /**\n   * Global variable for logged in user\n   */\n  userObj : User;\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  update_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Constructor to inject userService and to populate form with current users information\n   */\n  constructor(public userService: UserService){\n    let user = sessionStorage.getItem(\"User\");\n    this.userObj = JSON.parse(user!);\n    this.first_name?.setValue(this.userObj.FirstName);\n    this.surname?.setValue(this.userObj.Surname);\n    this.username?.setValue(this.userObj.Username);\n    this.email?.setValue(this.userObj.Email);\n    this.password?.setValue(this.userObj.Password);\n    this.confirm_password?.setValue(this.userObj.Password);\n  }\n\n  /**\n   * Function that will update current user\n  */\n  public updateUser() {\n    const userId = this.userObj._id;\n    let user: EditUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n    }\n    /**\n     * Edit user api call\n     */\n    this.userService.edit_user(user,userId).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n      });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.update_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.update_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.update_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.update_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.update_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.update_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            First Name is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Surname is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Username is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Passwords don't match.\n                        \n                    \n                \n                \n                    \n                        \n                            Update\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                            First Name is required.                                                                                                                                                                                                                                                                                                Surname is required.                                                                                                                                                                                                                                                                                                Username is required.                                                                                                                                                                                                                                                                                                                                                                            Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                                                                                                                                                                Password is required.                                                                            Passwords don\\'t match.                                                                                                                                                    Update                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditProfileGuard.html":{"url":"guards/EditProfileGuard.html","title":"guard - EditProfileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditProfileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/edit-profile.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Angular Directive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/edit-profile.guard.ts:18\n                \n            \n\n\n            \n                \n                    Can Activate function to test whether or not a user is logged in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileGuard implements CanActivate {\n  /**\n   * Can Activate function to test whether or not a user is logged in\n   * @param route \n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        alert(\"You can't access this feature without logging in!\");\n        return false;\n      }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                EditUser class, used to parse form data when updating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:96\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:88\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:100\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:92\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:83\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FRIEND.html":{"url":"classes/FRIEND.html","title":"class - FRIEND","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FRIEND\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/friend.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                FriendID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FriendID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FRIEND{\n    UserID: string = \"\";\n    FriendID: string = \"\";\n    _id: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterFriendsPipe.html":{"url":"pipes/FilterFriendsPipe.html","title":"pipe - FilterFriendsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterFriendsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter-friends.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterFriends\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(friends: FRIEND[], friend: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter-friends.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friends\n                                    \n                                                FRIEND[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    friend\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FRIEND } from '../models/friend';\n\n@Pipe({\n  name: 'filterFriends'\n})\nexport class FilterFriendsPipe implements PipeTransform {\n\n  transform(friends: FRIEND[], friend: string): any[]{\n    if(friend === ''){\n      return friends;\n    }else{\n      return friends.filter(Friend=> Friend.FriendID === friend);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"Catergories\" || cat === ''){\n      return quizzes;\n    }else{\n      return quizzes.filter(quiz=> quiz.Category === cat);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendInfoComponent.html":{"url":"components/FriendInfoComponent.html","title":"component - FriendInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friend-info/friend-info.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-info\n            \n\n            \n                styleUrls\n                ./friend-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                id\n                            \n                            \n                                Name\n                            \n                            \n                                Play_times\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                user\n                            \n                            \n                                User\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/friend-info/friend-info.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-info/friend-info.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HistoryArr[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Play_times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { HistoryService } from '../services/history.service';\nimport { HistoryArr } from '../models/history';\n\n\n@Component({\n  selector: 'app-friend-info',\n  templateUrl: './friend-info.component.html',\n  styleUrls: ['./friend-info.component.scss']\n})\nexport class FriendInfoComponent {\n  id: any;\n  private sub: any;\n  constructor(private route: ActivatedRoute, private historyService:HistoryService){}\n  user = sessionStorage.getItem(\"User\");\n  User: User = new User;\n  history: HistoryArr[] = [];\n  Name : any;\n\n  Play_times: any;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params =>{\n      this.id = params['id'];\n      if(this.user != null){\n        let userOBJ:User = JSON.parse(this.user);\n        this.User = userOBJ;\n        this.historyService.get_history(userOBJ._id).subscribe((res)=>{\n          this.history = res;\n          console.log(this.history);\n        });\n      }\n    })\n  }\n}\n    \n\n    \n        \n  \n    \n      Back\n      \n        \n          \n            {{this.id}} has {{this.history.length}} Total Plays\n          \n        \n      \n\n      \n        \n          \n            \n              \n                \n                  \n                    \n                  \n                \n                \n                  {{hist.QuizID}}\n                  {{hist.Date}}\n                \n              \n              Score: {{hist.Score}}\n              See More\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./friend-info.component.scss\n                \n                .Full {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.tileMain {\n    align-items: center;\n    width: 100%;\n\n}\n\n.tilesub {\n    margin: 3.2%;\n    transition: transform .2s;\n}\n\n.title {\n    font-size: 40px;\n    width: 700px;\n    height: 50px;\n    color: #000;\n    font-weight: 10000;\n    text-align: center;\n}\n\n.buttonBack {\n    font-size: 20px;\n    color: #fff;\n    font-weight: 1000;\n    transition: transform .2s;\n    background-color: gray;\n}\n\n.tilesub:hover {\n    transform: scale(1.2);\n}\n\n\n.buttonBack:hover {\n    transform: scale(1.1);\n}\n\n.cards {\n    margin-left: 10%;\n    margin-right: 10%;\n}\n\n.card{\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    margin-top: 2%;\n    display: flex;\n    justify-content: center;\n    border-radius: 15px;\n}\n\n.image{\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                                    {{this.id}} has {{this.history.length}} Total Plays                                                                                                                                                                                                    {{hist.QuizID}}                  {{hist.Date}}                                            Score: {{hist.Score}}              See More                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendsComponent.html":{"url":"components/FriendsComponent.html","title":"component - FriendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friends/friends.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friends\n            \n\n            \n                styleUrls\n                ./friends.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friends.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonDispl\n                            \n                            \n                                current_user\n                            \n                            \n                                friend_form\n                            \n                            \n                                friends\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                copyID\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFriend\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, clipboard: Clipboard)\n                    \n                \n                        \n                            \n                                Defined in src/app/friends/friends.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyID\n                        \n                    \n                \n            \n            \n                \ncopyID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFriend\n                        \n                    \n                \n            \n            \n                \nremoveFriend(friend: FRIEND, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                FRIEND\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Copy ID\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        current_user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friend_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    friend_id: new FormControl('', [\n      Validators.required,\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FRIEND[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { FRIEND } from '../models/friend';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.scss']\n})\nexport class FriendsComponent implements OnInit {\n  user!: User;\n\n  buttonDispl=\"Copy ID\";\n\n  current_user = sessionStorage.getItem(\"User\");\n  friends: FRIEND[] = [];\n\n  ngOnInit(): void {\n\n    let userOBJ: User;\n    if (this.current_user != null) {\n      userOBJ = JSON.parse(this.current_user);\n      this.user = userOBJ;\n      this.userService.getFriends(this.user._id).subscribe((res: FRIEND[])=>{\n        res.forEach(element => {\n          this.userService.get_usernameID(element.FriendID).subscribe((response) =>{ \n            element.FriendID = String(response)\n          });\n        });\n        this.friends = res;\n      });\n    }\n  }\n  searchedItem: string =  \"\";\n  constructor(private userService: UserService, private clipboard: Clipboard){}\n\n  friend_form = new FormGroup({\n    friend_id: new FormControl('', [\n      Validators.required,\n    ])\n  });\n\n  addFriend(){\n    let friendid = this.friend_form.get(\"friend_id\")?.value;\n    if(friendid === this.user._id){\n      alert(\"You can't add yourself as a friend!\");\n    }else if(friendid?.length != 24){\n      alert(\"Invalid friend id!\");\n    }else{\n      this.userService.create_friends(friendid,this.user._id).subscribe((res) =>{\n        if(res['friend_exists'] == true){\n          alert(\"Friend already exists!\");\n        }else{\n          this.friends.push(res);\n          console.log(this.friends);\n        }\n      });\n    }\n  }\n\n  removeFriend(friend : FRIEND, idx: number){\n    this.userService.delete_friend(friend._id).subscribe((res) =>{\n      if(res[\"message\"]==true){\n        this.friends.splice(idx,1);\n      }else{\n        alert(\"Delete friend failed!\");\n        console.log(res);\n      }\n    })\n  }\n\n  copyID(){\n    this.clipboard.copy(this.user._id);\n    this.buttonDispl = \"Copied\";\n  }\n\n  search(value: string){\n    this.searchedItem = value;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Friends\n            \n            \n                Your ID to give friends: {{user._id}}\n                {{buttonDispl}}\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{friend.FriendID}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 friends.\n            \n        \n    \n    \n        \n            \n                Add Friends\n            \n            \n                \n                    \n                        \n                            \n                                \n                            \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./friends.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: white;\n    margin-left: 0%;\n    margin-right: 0%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Friends                                        Your ID to give friends: {{user._id}}                {{buttonDispl}}                                                                                                                                                                                                        {{friend.FriendID}}                                                                                                                                                                                                            You have 0 friends.                                                                Add Friends                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/history.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                Score\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class History{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n}\n\nexport class HistoryArr{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n    Date: string = \"\";   \n    __v: Number = 0;\n    _id: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoryArr.html":{"url":"classes/HistoryArr.html","title":"class - HistoryArr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoryArr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/history.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Date\n                            \n                            \n                                QuizID\n                            \n                            \n                                Score\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class History{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n}\n\nexport class HistoryArr{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n    Date: string = \"\";   \n    __v: Number = 0;\n    _id: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_history\n                            \n                            \n                                get_history\n                            \n                            \n                                update_user_plays\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/history.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_history\n                        \n                    \n                \n            \n            \n                \ncreate_history(history: History)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    history\n                                    \n                                                History\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_history\n                        \n                    \n                \n            \n            \n                \nget_history(userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_user_plays\n                        \n                    \n                \n            \n            \n                \nupdate_user_plays(currPlays: number, userID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currPlays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/history\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history.service.ts:16\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { History } from '../models/history';\nimport { handleError } from '../utilities/errorhandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  constructor(private http: HttpClient) { }\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/history\";\n\n  create_history(history: History): Observable{\n    return this.http.post(this.base_url+\"/createHistory\",history, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  get_history(userID: string): Observable{\n    return this.http.get(this.base_url+\"/getUserHistory/\"+userID);\n  }\n\n  update_user_plays(currPlays: number, userID: String) : Observable{\n    let userUpdated = JSON.stringify({Plays: currPlays+1});\n    return this.http.patch(\"https://clumsy-apron-ray.cyclic.app/api/user/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catagories\n                            \n                            \n                                quizzes\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                selectedCatID\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                NavigateQuiz\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                PlayRandomQuiz\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, bookmarkService: BookmarkService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NavigateQuiz\n                        \n                    \n                \n            \n            \n                \nNavigateQuiz(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayRandomQuiz\n                        \n                    \n                \n            \n            \n                \nPlayRandomQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        catagories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCatID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { Category } from '../models/categories';\nimport { Quiz } from '../models/quiz';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n//This component represents the home page of the quiz application.\nexport class HomeComponent implements OnInit{\n\n  constructor(private quizService: QuizService, private bookmarkService: BookmarkService, private router:Router, private userService:UserService){}\n  \n  user = sessionStorage.getItem(\"User\");\n\n  catagories: Category[] = [];\n  quizzes: Quiz[] = [];\n  selectedCategory: string = \"\";\n  selectedCatID: string =  \"\";\n  ngOnInit(){\n    this.quizService.get_quiz_categories().subscribe((res) =>{\n      this.catagories = res;\n    });\n\n    this.quizService.getAllQuiz().subscribe((res) =>{\n      this.quizzes = res;\n      this.quizzes.forEach(quiz => {\n        this.userService.get_usernameID(quiz.CreatorID).subscribe(res =>{\n          quiz.CreatorID = res.toString();\n        });\n      });\n    });\n    \n  }\n // This creates a bookmark for the specified quiz and user if thy're logged in\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n//Updates the selectedCategory and selectedCatID properties based on the provided value.\n  updateValue(value: string){\n    this.selectedCategory = value;\n    if(value === \"Catergories\"){\n      this.selectedCatID = \"\";\n    }else{\n      let res = this.catagories.find(val=> val.Name === value);\n      this.selectedCatID = res?._id!;\n    }\n  }\n\n  PlayRandomQuiz(){\n    let quiz = this.quizzes[Math.floor(Math.random()*this.quizzes.length)]\n    console.log(JSON.stringify(quiz))\n    let url='/quiz-answer/'+quiz._id.toString()\n    this.router.navigateByUrl(url)\n  }\n  NavigateQuiz(quiz: Quiz){\n    this.router.navigate(['/quiz-info',quiz._id]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home Page\n      \n      \n        Quizzes\n      \n    \n  \n  \n    \n      \n        \n          \n            Catergories\n            {{catagory.Name}}\n          \n        \n      \n    \n  \n  \n    \n      \n        Random Quiz\n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n            \n            \n              {{quiz.Name}}\n              {{quiz.CreatorID}}\n            \n          \n\n          {{quiz.Description}}\n          \n            Bookmark\n            See More\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .cards {\n    margin-left: 10%;\n    margin-right: 10%;\n}\n\n.card{\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    margin-top: 2%;\n    display: flex;\n    justify-content: center;\n    border-radius: 15px;\n}\n\n.image{\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home Page                    Quizzes                                                      Catergories            {{catagory.Name}}                                                  Random Quiz                                                                                                                                        {{quiz.Name}}              {{quiz.CreatorID}}                                {{quiz.Description}}                      Bookmark            See More                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaderboardComponent.html":{"url":"components/LeaderboardComponent.html","title":"component - LeaderboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeaderboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/leaderboard/leaderboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leaderboard\n            \n\n            \n                styleUrls\n                ./leaderboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./leaderboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                increment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(leaderboardService: LeaderboardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/leaderboard/leaderboard.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        leaderboardService\n                                                  \n                                                        \n                                                                        LeaderboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/leaderboard/leaderboard.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/leaderboard/leaderboard.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LeaderboardService } from '../services/leaderboard.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n  \n  users: User[] = [];\n  score: number = 0;\n  constructor(private leaderboardService: LeaderboardService){};\n  \n  \n  ngOnInit() {\n    this.leaderboardService.getLeaderboard().subscribe((res)=>{\n      this.users = res;\n      this.increment();\n    }\n    )\n  };\n\n\n  increment(){\n    this.score +=1;\n  }\n}\n\n    \n\n    \n        \n\n    \n      \n        Ranking\n        Username\n        Plays\n        Rating\n        Profile Link\n      \n    \n    \n        \n        {{i+1}}\n        {{user.Username}}\n        {{user.Plays}}\n        {{user.Score}}\n        \n        \n            {{user.Username}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./leaderboard.component.scss\n                \n                .leaderboard-container {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    align-items: baseline;\n}\n\n.header{\n    background-color: cadetblue;\n    font-size: 110%;\n}\n\ntable{\n    background-color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Ranking        Username        Plays        Rating        Profile Link                              {{i+1}}        {{user.Username}}        {{user.Plays}}        {{user.Score}}                            {{user.Username}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeaderboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeaderboardService.html":{"url":"injectables/LeaderboardService.html","title":"injectable - LeaderboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeaderboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/leaderboard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLeaderboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/leaderboard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLeaderboard\n                        \n                    \n                \n            \n            \n                \ngetLeaderboard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/leaderboard.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/leaderboard\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/leaderboard.service.ts:17\n                        \n                    \n\n            \n                \n                    Base url for calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderboardService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for calls\n   */\n    base_url = \"https://clumsy-apron-ray.cyclic.app/api/leaderboard\";\n    \n    getLeaderboard(): Observable{\n      return this.http.get(this.base_url+\"/highestScores\").pipe(\n        catchError(handleError)\n      );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login_form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:39\n                \n            \n\n\n            \n                \n                    Function that will login user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:61\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:67\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  /**\n   * Constructor to inject user Service and router\n   */\n  constructor(private userService: UserService, private router: Router){}\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  login_form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  });\n\n  /**\n   * Function that will login user\n  */\n  public login() {\n    let email : string = this.login_form.get(\"email\")?.value!;\n    let pass : string = this.login_form.get(\"password\")?.value!;\n    let body : LoginUser = {\n      Email: email,\n      Password: pass,\n    }\n    this.userService.login(body).subscribe((res) => {\n      if(res.hasOwnProperty('message')){\n        alert(res['message'])  \n      }else{\n        let user : User[] = res;\n        sessionStorage.setItem(\"User\", JSON.stringify(user[0]));\n        this.router.navigate(['/home']);\n        this.login_form.reset();\n      }\n    })\n  }\n\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.login_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.login_form.get(\"password\");\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                            Login\n                        \n                    \n                \n                \n                    \n                      Don't have an account? \n                      Register\n                    \n                  \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                    Login                                                                                                                      Don\\'t have an account?                       Register                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/login.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        return true;\n      }else{\n        alert(\"You already here!\");\n        return false;\n      }\n  }  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUser.html":{"url":"classes/LoginUser.html","title":"class - LoginUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoginUser interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:110\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:114\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MasterAnswerComponent.html":{"url":"components/MasterAnswerComponent.html","title":"component - MasterAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MasterAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/master-answer/master-answer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-master-answer\n            \n\n            \n                styleUrls\n                ./master-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./master-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz\n                            \n                            \n                                quizID\n                            \n                            \n                                quizTime\n                            \n                            \n                                quizType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/master-answer/master-answer.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/master-answer/master-answer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : new Quiz\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-master-answer',\n  templateUrl: './master-answer.component.html',\n  styleUrls: ['./master-answer.component.scss']\n})\n\n // This component represents the page for answering a quiz.\n // Displays the quiz and its questions to the user.\n \nexport class MasterAnswerComponent implements OnInit{\n  constructor(private quizService: QuizService, private route: ActivatedRoute){}\n  quizID: string = \"\"\n  quiz: Quiz = new Quiz;\n  quizType = \"Text\";\n  quizTime = 10;\n  ngOnInit(){\n    this.route.params.subscribe(params =>{\n      this.quizID = params['id'];\n    });\n    this.quizService.get_quiz_byID(this.quizID).subscribe((res) =>{\n      this.quiz = res;\n      this.quizType = \"Text\";\n      this.quizType = this.quiz.Type;\n      this.quizTime = this.quiz.Timer;\n    });\n    console.log(\"Quiz time: \" + this.quiz.Timer);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./master-answer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MasterAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewAnswer.html":{"url":"classes/NewAnswer.html","title":"class - NewAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                NewAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:16\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:20\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:8\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:12\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestion.html":{"url":"classes/NewQuestion.html","title":"class - NewQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                New Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:18\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:13\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestionAnswer.html":{"url":"classes/NewQuestionAnswer.html","title":"class - NewQuestionAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestionAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/qna.ts\n        \n\n\n            \n                Description\n            \n            \n                QNA interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:18\n                        \n                    \n\n            \n                \n                    The answer for this question\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:13\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestionAnswer{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * The answer for this question\n    */\n    Answer: string = \"\";\n\n    Correct: boolean = false;\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:48\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:43\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:38\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:28\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:33\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Default angular directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_many_questions\n                            \n                            \n                                create_question\n                            \n                            \n                                delete_question\n                            \n                            \n                                get_quiz_questions\n                            \n                            \n                                getAllQuestions\n                            \n                            \n                                update_question\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_questions\n                        \n                    \n                \n            \n            \n                \ncreate_many_questions(questions: NewQuestion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:48\n                \n            \n\n\n            \n                \n                    Create many questions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questions\n                                    \n                                            NewQuestion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_question\n                        \n                    \n                \n            \n            \n                \ncreate_question(question: NewQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a question for quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_question\n                        \n                    \n                \n            \n            \n                \ndelete_question(question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:100\n                \n            \n\n\n            \n                \n                    Removes question from database and associated answers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_questions\n                        \n                    \n                \n            \n            \n                \nget_quiz_questions(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:74\n                \n            \n\n\n            \n                \n                    Get all questions belonging to a specifc quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuestions\n                        \n                    \n                \n            \n            \n                \ngetAllQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:63\n                \n            \n\n\n            \n                \n                    Gets all questions for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_question\n                        \n                    \n                \n            \n            \n                \nupdate_question(id: String, question: UpdateQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:86\n                \n            \n\n\n            \n                \n                    Updates question values\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    question\n                                    \n                                                UpdateQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/question\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/question.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for question calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { NewQuestion, Question, UpdateQuestion } from '../models/question';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Default angular directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  /**\n   * Constructor to inject http client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for question calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/question\";\n\n  /**\n   * Creates a question for quiz\n   * @param question \n   * @returns Question\n   */\n  create_question(question: NewQuestion): Observable {\n    let nquestion = JSON.stringify(question);\n    return this.http.post(this.base_url + \"/createQuestion\", nquestion, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Create many questions\n   * @param questions \n   * @returns Question[]\n   */\n  create_many_questions(questions: NewQuestion[]) : Observable{\n    let nquestions = JSON.stringify(questions);\n    return this.http.post(this.base_url+\"/createManyQuestions\",nquestions,{\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Gets all questions for all quizzes\n   * @returns Question[]\n   */\n  getAllQuestions() : Observable{\n    return this.http.get(this.base_url+\"/getAllQuestions\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get all questions belonging to a specifc quiz\n   * @param id \n   * @returns Question[]\n   */\n  get_quiz_questions(id: String) : Observable{\n    return this.http.get(this.base_url+\"/getQuestions/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Updates question values\n   * @param id \n   * @param question \n   * @returns Question\n   */\n  update_question(id:String, question:UpdateQuestion) : Observable{\n    let nquestion = JSON.stringify(question);\n    return this.http.patch(this.base_url+\"/updateQuestion/\"+id, nquestion,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  /**\n   * Removes question from database and associated answers.\n   * @param question \n   * @returns \n   */\n  delete_question(question: Question) : Observable{\n    return this.http.delete(this.base_url+\"/deleteQuestion/\"+question._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Thumbnail\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:94\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:90\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:73\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:61\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:57\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:53\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:49\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:77\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:69\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:81\n                        \n                    \n\n            \n                \n                    Thumbnail url for quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:85\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:65\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Thumbnail url for quiz\n     */\n    Thumbnail: string =  \"\";\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizAnswerComponent.html":{"url":"components/QuizAnswerComponent.html","title":"component - QuizAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-answer/quiz-answer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-answer\n            \n\n            \n                styleUrls\n                ./quiz-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                buttonDispl\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                done\n                            \n                            \n                                link\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                quizName\n                            \n                            \n                                rating_form\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                checkAnswers\n                            \n                            \n                                CopyResults\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute, quizService: QuizService, historyService: HistoryService, clipBoard: Clipboard)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipBoard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:123\n                \n            \n\n\n            \n                \n                    Function to check answers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CopyResults\n                        \n                    \n                \n            \n            \n                \nCopyResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:69\n                \n            \n\n\n            \n                \n                    Run these functions when the component is initialised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:115\n                \n            \n\n\n            \n                \n                    Function to stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Share Results\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:36\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    rating: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:44\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:40\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { History } from '../models/history';\nimport { HistoryService } from '../services/history.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Quiz } from '../models/quiz';\n\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-quiz-answer',\n  templateUrl: './quiz-answer.component.html',\n  styleUrls: ['./quiz-answer.component.scss']\n})\n\nexport class QuizAnswerComponent implements OnInit ,OnDestroy{\n  @Input() timeLeft = 30;\n\n  quiz_id: any;\n  answer_id: any;\n  done: boolean = false;\n  private sub: any;\n  link: any;\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  buttonDispl = \"Share Results\"\n\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute, private quizService: QuizService, private historyService: HistoryService, private clipBoard: Clipboard) { }\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n  user = sessionStorage.getItem(\"User\");\n\n  rating_form = new FormGroup({\n    rating: new FormControl('')\n  });\n\n  quizName: string = \"\";\n\n  /**\n   * Run these functions when the component is initialised\n  */\n  ngOnInit() {\n\n    this.sub = this.route.params.subscribe(params => {\n      this.quiz_id = params['id'];\n      this.quizService.get_quiz_byID(this.quiz_id).subscribe((res: Quiz) =>{\n        this.quizName = res.Name;\n      });\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n\n        let answer: any = {}\n\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n  /**\n   * Function to stop timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n  /**\n   * Function to check answers\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n    if(this.user != null){\n      this.done = true;\n    }\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      this.scoreDisplay = USer.FirstName + \" scored \" + numCorrect + \" out of \" + this.questions.length;\n      this.link = this.scoreDisplay + \", play the quiz now: \" + \"https://quiz-platform-28fcb.web.app/quiz-info/\"+this.quiz_id;\n      // Add history:\n      let history: History = {\n        QuizID: this.quiz_id,\n        UserID: USer._id,\n        Score: numCorrect\n      }\n      this.historyService.create_history(history).subscribe((res)=>{\n        console.log(res);\n      });\n      this.historyService.update_user_plays(USer.Plays,USer._id).subscribe((res) =>{\n        console.log(res);\n        USer.Plays = USer.Plays + 1;\n        sessionStorage.setItem(\"User\",JSON.stringify(USer));\n      });\n    }\n  }\n\n  addRating(){\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      if(ans == null){\n        ans = \"0\"\n      }\n      this.quizService.addRating(parseInt(ans),this.quiz_id,USer._id).subscribe((res) =>{\n        console.log(res);\n      });\n    }\n  }\n\n  CopyResults(){\n    this.clipBoard.copy(this.link);\n    this.buttonDispl = \"Copied Results\";\n  }\n\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        {{quizName}}\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                    {{answer.Answer}}\n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n        \n            \n                \n                    \n                        \n                            \n                            1\n                        \n                        \n                            \n                            2\n                        \n                        \n                            \n                            3\n                        \n                        \n                            \n                            4\n                        \n                        \n                            \n                            5\n                        \n                    \n                \n                Submit rating\n            \n\n            \n                {{scoreDisplay}}\n                {{link}} -->\n                {{buttonDispl}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./quiz-answer.component.scss\n                \n                .quiz-container {\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    background-size: cover;\n    margin: 0 auto;\n    text-align: center;\n    height: fit-content;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\ninput[type=\"text\"] {\n    margin-bottom: 10px;\n}\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.result{\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card{\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.quest{\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.radio{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            {{quizName}}         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                {{answer.Answer}}                                                                                                                                        Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}ubmit rating                                        {{scoreDisplay}}                {{link}} -->                {{buttonDispl}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizCreateComponent.html":{"url":"components/QuizCreateComponent.html","title":"component - QuizCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-create/quiz-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-create\n            \n\n            \n                styleUrls\n                ./quiz-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                createQuizForm\n                            \n                            \n                                questionForm\n                            \n                            \n                                questionFormText\n                            \n                            \n                                questions\n                            \n                            \n                                quiz\n                            \n                            \n                                quizSaved\n                            \n                            \n                                quizType\n                            \n                            \n                                tempQuiz\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuestion\n                            \n                            \n                                createQuestionText\n                            \n                            \n                                createQuiz\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                publishQuiz\n                            \n                            \n                                removeQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, questionService: QuestionService, answerService: AnswerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-create/quiz-create.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createQuestionText\n                        \n                    \n                \n            \n            \n                \ncreateQuestionText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishQuiz\n                        \n                    \n                \n            \n            \n                \npublishQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeQuestion\n                        \n                    \n                \n            \n            \n                \nremoveQuestion(question: NewQuestionAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestionAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    quizName: new FormControl('',[\n      Validators.required,\n    ]),\n    quizDescription: new FormControl('', [\n      Validators.required\n    ]),\n    quizCategory: new FormControl('', [\n      Validators.required\n    ]),\n    quizType: new FormControl('',[\n      Validators.required\n    ]),\n    quizTimer: new FormControl('', [\n      Validators.required\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ]),\n    truth: new FormControl('false',[\n      Validators.required,\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionFormText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NewQuestionAnswer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : new Quiz\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempQuiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateQuiz\n\n                    \n                \n                \n                    \n                        Default value : new CreateQuiz\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, getModuleFactory } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateQuiz } from '../models/quiz';\nimport { User } from '../models/user';\nimport { Quiz } from '../models/quiz';\nimport { QuizService } from '../services/quiz.service'\nimport { Category } from '../models/categories';\nimport { NewQuestion, Question } from '../models/question';\nimport { NewQuestionAnswer } from '../models/qna';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Answer, NewAnswer } from '../models/answer';\n@Component({\n  selector: 'app-quiz-create',\n  templateUrl: './quiz-create.component.html',\n  styleUrls: ['./quiz-create.component.scss']\n})\nexport class QuizCreateComponent implements OnInit {\n  constructor(private quizService: QuizService, private questionService: QuestionService, private answerService: AnswerService){}\n  user: User = new User;\n  quiz: Quiz = new Quiz;\n  quizSaved: boolean = false;\n\n  tempQuiz: CreateQuiz = new CreateQuiz;\n  categories: Category[] = [];\n  questions: NewQuestionAnswer[] = [];\n\n  quizType: string = \"\";\n\n  ngOnInit(){\n    let use = sessionStorage.getItem(\"User\");\n    this.user = JSON.parse(use!);\n    this.quizService.get_quiz_categories().subscribe((res)=>{\n      this.categories = res;\n    });\n  }\n\n  createQuizForm = new FormGroup({\n    quizName: new FormControl('',[\n      Validators.required,\n    ]),\n    quizDescription: new FormControl('', [\n      Validators.required\n    ]),\n    quizCategory: new FormControl('', [\n      Validators.required\n    ]),\n    quizType: new FormControl('',[\n      Validators.required\n    ]),\n    quizTimer: new FormControl('', [\n      Validators.required\n    ])\n  });\n\n  questionForm = new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ]),\n    truth: new FormControl('false',[\n      Validators.required,\n    ]),\n  });\n\n  questionFormText = new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ])\n  });\n//The method creates a new quiz object based on the user input from a form and saves it to a temporary variable called \"tempQuiz\"\n  createQuiz(){\n    this.quizService.get_quiz_categories().subscribe((res: Category[]) =>{\n      let qName = this.createQuizForm.get(\"quizName\")?.value!;\n      let qDescription = this.createQuizForm.get(\"quizDescription\")?.value!;\n      let qCategory = this.createQuizForm.get(\"quizCategory\")?.value!;\n      qCategory = res.find(cat => cat.Name === qCategory)?._id!;\n      let qType = this.createQuizForm.get(\"quizType\")?.value!;\n      let qTimer = Number(this.createQuizForm.get(\"quizTimer\")?.value);\n      if(!this.createQuizForm.valid){\n        alert(\"Please complete all the fields!\");\n      }else{\n        let newQuiz: CreateQuiz = {\n          Name: qName,\n          Description: qDescription,\n          CreatorID: this.user._id,\n          Category: qCategory,\n          Type: qType,\n          Plays: 0,\n          Average: 0,\n          Ordered: true,\n          Timer: qTimer,\n        }\n        this.tempQuiz = newQuiz;\n        this.quizSaved = !this.quizSaved;\n        alert(\"Quiz saved, please continue to add questions!\");\n      }\n    })\n  }\n//method creates a new question object based on the user input from a form and pushes it to an array called \"questions\".\n  createQuestion(){\n    if(this.questionForm.valid){\n      let question = this.questionForm.get(\"question\")?.value;\n      let answer = this.questionForm.get(\"answer\")?.value;\n      let correct = this.questionForm.get(\"truth\")?.value;\n      let qna: NewQuestionAnswer = {\n        QuizID: \"ReplaceID\",\n        Question: question!,\n        Answer: answer!,\n        Correct: JSON.parse(correct!)\n      }\n      console.log(qna);\n      this.questions.push(qna);\n    }else{\n      alert(\"Invalid question and answer, please fill in all the fields!\");\n    }\n  }\n\n  createQuestionText(){\n    if(this.questionFormText.valid){\n      let question = this.questionFormText.get(\"question\")?.value;\n      let answer = this.questionFormText.get(\"answer\")?.value;\n      let qna: NewQuestionAnswer = {\n        QuizID: \"ReplaceID\",\n        Question: question!,\n        Answer: answer!,\n        Correct: true\n      }\n      console.log(qna);\n      this.questions.push(qna);\n    }else{\n      alert(\"Invalid question and answer, please fill in all the fields!\");\n    }\n  }\n//This function is called when the user clicks the \"Remove\" button next to a question.\n  removeQuestion(question: NewQuestionAnswer){\n    let index = -1;\n    for(let i = 0; i {\n        if(res['CreatorID']){\n          this.quiz = res;\n        }\n        console.log(JSON.stringify(this.quiz));\n\n        let newQuestions: NewQuestion[] = [];\n        for(let i=0; i {\n          let newQ: Question[] = res;\n          let manyAns: NewAnswer[] = [];\n          for(let i = 0; i {\n            alert(\"Quiz creation completed!\");\n          });\n        });\n      });\n    }\n  }\n}\n    \n\n    \n        \n\n\n\n\n  \n    \n      \n        \n          Create a Quiz\n        \n        \n          Customize your quiz below!\n        \n      \n      \n        \n          \n            \n              \n                \n                Create Quiz\n              \n            \n            \n              \n                \n                Questions\n              \n            \n            \n              \n                \n                Options\n              \n            \n            \n                    \n                        \n                        Styles\n                    \n                 -->\n            \n              \n                \n                Tags\n              \n            \n            \n              \n                \n                Save & Finish\n              \n            \n          \n        \n        \n        \n          \n          \n            \n              Create Quiz\n              \n                Quiz Name\n                \n                  \n                \n              \n              \n                Description\n                \n                  \n                \n              \n              \n                Category\n                \n                  \n                    \n                      {{category.Name}}\n                    \n                  \n                \n              \n              \n                Quiz Type\n                \n                  \n                    \n                      Text-MCQ\n                      Text-Fill-In\n                    \n                  \n                \n              \n              \n                Quiz Timer (seconds)\n                \n                  \n                    \n                      ---\n                      60\n                      120\n                      180\n                      240\n                      300\n                      360\n                      420\n                      480\n                      540\n                      600\n                      660\n                      720\n                      780\n                      840\n                      900\n                      960\n                      1020\n                      1080\n                      1140\n                      1200\n                      1260\n                      1320\n                      1380\n                      1440\n                      1500\n                      1560\n                      1620\n                      1680\n                      1740\n                      180\n                    \n                  \n                \n              \n              \n                \n                  \n                    \n                    Save Progress\n                  \n                \n              \n            \n          \n\n          \n          \n            \n              \n                \n                  Add Question Data\n                  \n                    Question\n                    \n                      \n                    \n                  \n                  \n                    Answer\n                    \n                      \n                    \n                  \n                  \n                    Is Answer Correct?\n                    \n                      \n                        \n                          true\n                          false\n                        \n                      \n                    \n                  \n                  \n                    \n                      Questions Added\n                      Add Question\n                    \n                  \n                \n              \n              \n                \n                  Add Question Data\n                  \n                    Question\n                    \n                      \n                    \n                  \n                  \n                    Answer\n                    \n                      \n                    \n                  \n                  \n                    \n                      Questions Added\n                      Add Question\n                    \n                  \n                \n              \n            \n            {{this.questionForm.valid}}\n            {{this.questionFormText.valid}}\n            \n              \n                \n                  \n                      Questions\n                       \n                  \n                      \n                          {{question.Question}}: {{question.Answer}}\n                      \n                      \n                          \n                              \n                          \n                      \n                  \n              \n              \n            \n          \n\n          \n          \n            \n              Quiz Options\n              \n                Accept last word in answers\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Accept single character answers\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Filter default words from answers (a, an, and, the, and '&')\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Wrong Answer ends the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Hide hint text prior to starting the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Do not display correct answers at the end of the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n              \n                Answer Order\n                \n                  \n                  Randomize question order\n                \n                \n                  \n                  Force answers in order\n                \n              \n              \n                \n                  \n                    \n                      \n                    \n                    Save Options\n                  \n                  \n                    You must click 'Save Options' to save your changes.\n                  \n                \n              \n            \n          \n\n\n          \n                    \n                        Styles\n                        \n                    \n                 -->\n\n          \n          \n            \n              Tags\n              \n                \n                  Choose Tags:\n                  \n                  \n                    Tag 1\n                    Tag 2\n                    Tag 3\n                    Tag 4\n                    Tag 5\n                    Tag 6\n                    Tag 7\n                    Tag 8\n                    Tag 9\n                    \n                  \n                  \n                  Add Your Own Tag:\n                  \n                    \n                      \n                    \n                    \n                      Add Tag\n                    \n                  \n                \n                \n                  Selected Tags:\n                  \n                    \n                  \n                  \n                    \n                      \n                        \n                          \n                        \n                        Save Tags\n                      \n                    \n                    \n                      \n                        \n                          \n                        \n                        Cancel\n                      \n                    \n                  \n                  You must click 'Save Changes' to save your changes\n                \n              \n            \n          \n\n\n          \n          \n            \n              \n                \n                  Ready to show your quiz to the world, and beyond?\n                  Once published, this quiz will be viewable on your 'Published\n                    Quizzes' page, among other places. Don't forget to share your new quiz with your friends!\n                  \n                    Publish Quiz\n                  \n                  OR\n                  \n                    Publish Quiz\n                  \n                \n                \n                  Public\n                  Your quiz will be searchable by other players. We may also feature and publish your quiz.\n                  NOTE: If the quiz is published on the front page, you will lose the ability to\n                    edit this quiz. We also reserve the right to add, remove, or alter quizzes selected for featuring.\n                  \n                  \n                  Private\n                  A link to your quiz will only show up on your private profile. You can still use the link to play\n                    your quiz, send to friends, and see results. Quizzes marked as private will not be published by us.\n                  \n                \n              \n            \n          \n        \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-create.component.scss\n                \n                .main {\n  background-image: url('../../assets/images/school-supplies-7069762.jpg') !important;\n  background-color: lightblue;\n  background-blend-mode: multiply;\n  background-size: cover;\n  background-position: center center;\n  min-height: 100vh;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 400px;\n}\n\n.tabcontent {\n  display: none;\n  width: fit-content;\n  justify-content: center;\n  align-items: center;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.box {\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(5px);\n}\n\n.submit-question{\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.panel{\n  background-color: white;\n  margin-left: 2%;\n  margin-right: 2%;\n}\n\n.panel-block{\n  justify-content: space-between;\n}\n\n/* from previous raw css, still need to reintegrate */\n/*\n  .back {\n    display: grid;\n    background-image: url(\"./src/app/school-supplies-7069762.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .class {\n  background-color: #f7f7f7;\n  padding: 50px;\n  }\n  \n  .title {\n  font-size: 2.5rem;\n  margin-top: 0;\n  margin-bottom: 20px;\n  }\n  \n  .subtitle {\n  font-size: 1.5rem;\n  margin-top: 0;\n  margin-bottom: 20px;\n  }\n  \n  .box {\n  border: 1px solid #ccc;\n  background-color: #fff;\n  padding: 20px;\n  }\n  \n  .field {\n  margin-bottom: 20px;\n  }\n  \n  .label {\n  font-size: 1rem;\n  font-weight: bold;\n  margin-bottom: 5px;\n  }\n  \n  .input {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 5px;\n  }\n  \n  .select {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  margin-bottom: 10px;\n  }\n  \n  .select::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n  border-style: solid;\n  border-width: 5px 5px 0 5px;\n  border-color: #666 transparent transparent transparent;\n  }\n  \n  .select select {\n  font-size: 1rem;\n  padding: 5px 30px 5px 10px;\n  appearance: none;\n  background-color: transparent;\n  border: none;\n  border-radius: 0;\n  width: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  }\n  \n  .tabs {\n  margin-bottom: 20px;\n  }\n  \n  .tabs li {\n  display: inline-block;\n  }\n  \n  .tabs a {\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 10px 20px;\n  color: #333;\n  text-decoration: none;\n  }\n  \n  .tabs .is-active a {\n  background-color: #333;\n  color: #fff;\n  }\n  \n  .tabs .is-active a::after {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 10px 10px 10px;\n  border-color: transparent transparent #333 transparent;\n  }\n  \n  .tabs .box {\n  margin-top: 20px;\n  }\n  */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Create a Quiz                          Customize your quiz below!                                                                                                Create Quiz                                                                                    Questions                                                                                    Options                                                                                                          Styles                                     -->                                                          Tags                                                                                    Save & Finish                                                                                                          Create Quiz                              Quiz Name                                                                                              Description                                                                                              Category                                                                            {{category.Name}}                                                                                                  Quiz Type                                                                            Text-MCQ                      Text-Fill-In                                                                                                  Quiz Timer (seconds)                                                                            ---                      60                      120                      180                      240                      300                      360                      420                      480                      540                      600                      660                      720                      780                      840                      900                      960                      1020                      1080                      1140                      1200                      1260                      1320                      1380                      1440                      1500                      1560                      1620                      1680                      1740                      180                                                                                                                                                            Save Progress                                                                                                                                                      Add Question Data                                      Question                                                                                                                      Answer                                                                                                                      Is Answer Correct?                                                                                            true                          false                                                                                                                                                Questions Added                      Add Question                                                                                                                    Add Question Data                                      Question                                                                                                                      Answer                                                                                                                                            Questions Added                      Add Question                                                                                            {{this.questionForm.valid}}            {{this.questionFormText.valid}}                                                                                  Questions                                                                                         {{question.Question}}: {{question.Answer}}                                                                                                                                                                                                                                                                      Quiz Options                              Accept last word in answers                                                                          Yes                                                                              Accept single character answers                                                                          Yes                                                                              Filter default words from answers (a, an, and, the, and \\'&\\')                                                                          Yes                                                                              Wrong Answer ends the quiz                                                                          Yes                                                                              Hide hint text prior to starting the quiz                                                                          Yes                                                                              Do not display correct answers at the end of the quiz                                                                          Yes                                                                                            Answer Order                                                    Randomize question order                                                                    Force answers in order                                                                                                                                                                Save Options                                                        You must click \\'Save Options\\' to save your changes.                                                                                                                            Styles                                                             -->                                              Tags                                                Choose Tags:                                                        Tag 1                    Tag 2                    Tag 3                    Tag 4                    Tag 5                    Tag 6                    Tag 7                    Tag 8                    Tag 9                                                                          Add Your Own Tag:                                                                                                                          Add Tag                                                                                        Selected Tags:                                                                                                                                                                                                                      Save Tags                                                                                                                                                                                      Cancel                                                                              You must click \\'Save Changes\\' to save your changes                                                                                                                                    Ready to show your quiz to the world, and beyond?                  Once published, this quiz will be viewable on your \\'Published                    Quizzes\\' page, among other places. Don\\'t forget to share your new quiz with your friends!                                      Publish Quiz                                    OR                                      Publish Quiz                                                                    Public                  Your quiz will be searchable by other players. We may also feature and publish your quiz.                  NOTE: If the quiz is published on the front page, you will lose the ability to                    edit this quiz. We also reserve the right to add, remove, or alter quizzes selected for featuring.                                                      Private                  A link to your quiz will only show up on your private profile. You can still use the link to play                    your quiz, send to friends, and see results. Quizzes marked as private will not be published by us.                                                                                                "},"components/QuizInfoComponent.html":{"url":"components/QuizInfoComponent.html","title":"component - QuizInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-info/quiz-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-info\n            \n\n            \n                styleUrls\n                ./quiz-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Category\n                            \n                            \n                                Created_By\n                            \n                            \n                                Description\n                            \n                            \n                                id\n                            \n                            \n                                Name\n                            \n                            \n                                quiz\n                            \n                            \n                                Rating\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                Thumbnail\n                            \n                            \n                                timeValue\n                            \n                            \n                                Total_Played\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-info/quiz-info.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Created_By\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Total_Played\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-quiz-info',\n  templateUrl: './quiz-info.component.html',\n  styleUrls: ['./quiz-info.component.scss']\n})\n//Overall, this component is responsible for fetching and displaying information about a specific quiz based on the provided\nexport class QuizInfoComponent implements OnInit, OnDestroy {\n  id: any;\n  private sub: any;\n  constructor(private route: ActivatedRoute, private quizService: QuizService, private userService: UserService, private router: Router){}\n  quiz!: Quiz;\n\n  Name: any;\n\n  Description: any;\n\n  Rating: any;\n\n  Category: any;\n\n  Total_Played: any;\n\n  Created_By: any;\n  Thumbnail: any;\n  timeValue = 0;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params =>{\n      this.id = params['id'];\n\n      this.quizService.get_quiz_byID(this.id).subscribe((value : Quiz) =>{\n        this.quiz = value;\n        this.Name = value.Name;\n        this.Description = value.Description;\n        this.Rating = 5;\n        this.Category = value.Category;\n        this.Total_Played = value.Plays;\n        this.Created_By = value.CreatorID;\n        this.timeValue = value.Timer;\n        this.Thumbnail = value.Thumbnail;\n        this.quizService.get_category_byID(this.Category).subscribe(res =>{\n          this.Category = res;\n        });\n        this.userService.get_usernameID(this.Created_By).subscribe(res =>{\n          this.Created_By = res;\n        })\n      })\n    });\n  }\n\n  ngOnDestroy(){\n      this.sub.unsubscribe();\n  }\n\n  navigate(){\n    if(this.quiz.Type===\"Text-MCQ\"){\n      this.router.navigate(['/quiz-answer',this.id]);\n    }else{\n      this.router.navigate(['/quiz-typein',this.id]);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n                \n              \n              {{Name}}\n              {{Description}}\n            \n            \n            \n              \n                Category:\n                {{Category}}\n              \n              \n                Created By:\n                {{Created_By}}\n              \n              \n                Number of Times Played:\n                {{Total_Played}}\n              \n              \n                Rating:\n                {{Rating}}\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              Start Quiz\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-info.component.scss\n                \n                \n.Full {\n    background-image: url('../../assets/images/school-supplies-7069762.jpg') !important;\n    background-color: lightblue;\n    background-blend-mode: multiply;\n    background-size: cover;\n    background-position: center center;\n    min-height: 100vh;\n}\n\n.box {\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.button {\n    cursor: pointer;\n    font-size: 20px;\n    font-weight: bold;\n    transition: transform .2s;\n}\n\n.button:hover {\n    transform: scale(1.1);\n}\n\n.top{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{Name}}              {{Description}}                                                                  Category:                {{Category}}                                            Created By:                {{Created_By}}                                            Number of Times Played:                {{Total_Played}}                                            Rating:                {{Rating}}                                                                                                    Start Quiz                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizResultComponent.html":{"url":"components/QuizResultComponent.html","title":"component - QuizResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-result/quiz-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-result\n            \n\n            \n                styleUrls\n                ./quiz-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quizid\n                            \n                            \n                                result\n                            \n                            \n                                sub\n                            \n                            \n                                userid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-result/quiz-result.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-result/quiz-result.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        quizid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-quiz-result',\n  templateUrl: './quiz-result.component.html',\n  styleUrls: ['./quiz-result.component.scss']\n})\nexport class QuizResultComponent implements OnInit{\n  sub: any;\n  userid: any;\n  result: any;\n  quizid: any; \n  constructor(private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(params =>{\n      this.userid = params['user'];\n      this.quizid = params['quiz'];\n      this.result = params['result'];\n    });\n  }\n\n}\n\n    \n\n    \n        \n    {{userid}}\n    {{quizid}}\n    {{result}}\n\n    \n\n    \n                \n                    ./quiz-result.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userid}}    {{quizid}}    {{result}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizSearchComponent.html":{"url":"components/QuizSearchComponent.html","title":"component - QuizSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-search/quiz-search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-search\n            \n\n            \n                styleUrls\n                ./quiz-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                quizzes\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService, bookmarkService: BookmarkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-search/quiz-search.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\n\n@Component({\n  selector: 'app-quiz-search',\n  templateUrl: './quiz-search.component.html',\n  styleUrls: ['./quiz-search.component.scss']\n})\nexport class QuizSearchComponent implements OnInit{\n\n  constructor(private route: ActivatedRoute, private quizService: QuizService, private bookmarkService: BookmarkService){}\n\n  id = \"\";\n  quizzes: Quiz[]=[];\n\n  user = sessionStorage.getItem(\"User\");\n\n  ngOnInit(): void {\n      this.route.params.subscribe(params => {\n        this.id = params['id'];\n        this.quizService.search_quiz(this.id).subscribe(res => {\n          this.quizzes = res;\n          console.log(this.quizzes);\n        });\n      });\n  }\n\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            {{quiz.Name}}\n            {{quiz.CreatorID}}\n          \n        \n\n        {{quiz.Description}}\n        \n          Bookmark\n          See More\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-search.component.scss\n                \n                .cards {\n  margin-left: 10%;\n  margin-right: 10%;\n}\n\n.card{\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(5px);\n  margin-top: 2%;\n  display: flex;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{quiz.Name}}            {{quiz.CreatorID}}                          {{quiz.Description}}                  Bookmark          See More                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                create_quiz\n                            \n                            \n                                delete_quiz\n                            \n                            \n                                get_category_byID\n                            \n                            \n                                get_quiz_byID\n                            \n                            \n                                get_quiz_categories\n                            \n                            \n                                getAllQuiz\n                            \n                            \n                                search_quiz\n                            \n                            \n                                update_quiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating(rating: Number, quizID: string, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:132\n                \n            \n\n\n            \n                \n                    Adds rating to quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rating\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quizID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Rating\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_quiz\n                        \n                    \n                \n            \n            \n                \ncreate_quiz(newQuiz: CreateQuiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a new quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newQuiz\n                                    \n                                                CreateQuiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_quiz\n                        \n                    \n                \n            \n            \n                \ndelete_quiz(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:76\n                \n            \n\n\n            \n                \n                    Remove a quiz from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_category_byID\n                        \n                    \n                \n            \n            \n                \nget_category_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:108\n                \n            \n\n\n            \n                \n                    Get the Category object given it's ID;\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_byID\n                        \n                    \n                \n            \n            \n                \nget_quiz_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:97\n                \n            \n\n\n            \n                \n                    Get Quiz by QuizID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_categories\n                        \n                    \n                \n            \n            \n                \nget_quiz_categories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:86\n                \n            \n\n\n            \n                \n                    Returns all Quiz Categories available\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuiz\n                        \n                    \n                \n            \n            \n                \ngetAllQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:48\n                \n            \n\n\n            \n                \n                    Get all Quizzes from Quiz database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_quiz\n                        \n                    \n                \n            \n            \n                \nsearch_quiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:119\n                \n            \n\n\n            \n                \n                    Search for quiz by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quizzes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_quiz\n                        \n                    \n                \n            \n            \n                \nupdate_quiz(update: Quiz, id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:60\n                \n            \n\n\n            \n                \n                    Update the values of a particular quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/quiz\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/quiz.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { CreateQuiz, Quiz } from '../models/quiz';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/quiz\";\n\n  /**\n   * Creates a new quiz\n   * @param newQuiz\n   * @returns Quiz\n   */\n  create_quiz(newQuiz: CreateQuiz): Observable {\n    let nQuiz = JSON.stringify(newQuiz);\n    return this.http.post(this.base_url + \"/createQuiz\", nQuiz,\n      {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      }).pipe(\n        catchError(handleError)\n      );\n  }\n\n  /**\n   * Get all Quizzes from Quiz database\n   * @returns Quiz[]\n   */\n  getAllQuiz(): Observable {\n    return this.http.get(this.base_url + \"/getAllQuizzes\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Update the values of a particular quiz\n   * @param update\n   * @param id\n   * @returns Quiz\n   */\n  update_quiz(update : Quiz, id: String) : Observable{\n    let nupdate = JSON.stringify(update);\n    return this.http.patch(this.base_url+\"/updateQuiz/\"+ id,nupdate, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove a quiz from the database\n   * @param id\n   * @returns any\n   */\n  delete_quiz(id: String): Observable {\n    return this.http.delete(this.base_url + \"/deleteQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Returns all Quiz Categories available\n   * @returns Category[]\n   */\n  get_quiz_categories(): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getAllCategories\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get Quiz by QuizID\n   * @param id\n   * @returns Quiz\n   */\n  get_quiz_byID(id: string) : Observable{\n    return this.http.get(this.base_url+\"/getQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get the Category object given it's ID;\n   * @param id\n   * @returns Category\n   */\n  get_category_byID(id: string): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getCategory/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Search for quiz by id\n   * @param id \n   * @returns Quizzes\n   */\n  search_quiz(id: string): Observable{\n    return this.http.get(this.base_url+\"/searchQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Adds rating to quiz\n   * @param rating \n   * @param quizID \n   * @param userID \n   * @returns Rating\n   */\n  addRating(rating:Number, quizID:string,userID:string){\n    return this.http.post(\"https://clumsy-apron-ray.cyclic.app/api/rating/createRating\",{\n      \"Rating\": rating,\n      \"QuizID\": quizID,\n      \"UserID\": userID\n    });\n  }\n\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizTypeinComponent.html":{"url":"components/QuizTypeinComponent.html","title":"component - QuizTypeinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizTypeinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-typein/quiz-typein.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-typein\n            \n\n            \n                styleUrls\n                ./quiz-typein.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-typein.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-typein/quiz-typein.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:100\n                \n            \n\n\n            \n                \n                    Function to check answers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:49\n                \n            \n\n\n            \n                \n                    Run these functions when the component is initialised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:92\n                \n            \n\n\n            \n                \n                    Function to stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:26\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:34\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:30\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-quiz-typein',\n  templateUrl: './quiz-typein.component.html',\n  styleUrls: ['./quiz-typein.component.scss']\n})\nexport class QuizTypeinComponent {\n    @Input() timeLeft = 30;\n\n  quiz_id: any;\n  answer_id: any;\n\n  private sub: any;\n\n\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute) { }\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n  /**\n   * Run these functions when the component is initialised\n  */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.quiz_id = params['id'];\n\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n\n        let answer: any = {}\n\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n  /**\n   * Function to stop timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n  /**\n   * Function to check answers\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          numCorrect++;\n        }\n      });\n\n    });\n\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n  }\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        Quiz Program\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                   \n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n    \n    \n\n    \n                \n                    ./quiz-typein.component.scss\n                \n                .quiz-container {\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    background-size: cover;\n    margin: 0 auto;\n    text-align: center;\n    height: fit-content;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\ninput[type=\"text\"] {\n    margin-bottom: 10px;\n}\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.result{\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card{\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.quest{\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.text{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            Quiz Program         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                                                                                                                                                       Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizTypeinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default @Component decorator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registration_form\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n                \n                    \n                            Registration Component Contructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that will register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registration_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:27\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:85\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:91\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:97\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:103\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:109\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:115\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\nimport { Router } from '@angular/router';\n/**\n * Default @Component decorator\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\n\nexport class RegistrationComponent {\n  /**\n   * Registration Component Contructor to inject user Service and router\n   * @param userService \n   * @param router \n   */\n  constructor(public userService: UserService, public router: Router) { }\n\n  /**\n   * Create a FormGroup and setup form controls for each field along with Validators\n  */\n  registration_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Function that will register a new user\n  */\n  public registerUser() {\n    let user: CreateUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n      Plays: 0\n    }\n    // First check whether email is taken or not!\n    let result = { email_status: true };\n    this.userService.check_email_exists(user.Email).subscribe((res) => {\n      console.log(res);\n      result = res;\n      if (result['email_status'] == false) {\n        /**\n         * Calls userService to perform http request\n         */\n        this.userService.create_user(user).subscribe(\n          (response: User) => {\n            this.router.navigate(['/login']);\n          });\n        this.registration_form.reset();\n      }else{\n        alert(\"Email already exists, try another email!\");\n      }\n    });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.registration_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.registration_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.registration_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.registration_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.registration_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.registration_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Quiz Platform\n            \n            \n              Worlds Best!\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  First Name is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Surname is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Username is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              \n                \n                  Email is required.\n                \n                \n                  Invalid Email\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Password too short.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Passwords don't match.\n                \n              \n            \n            \n              \n                \n                  Register\n                \n              \n            \n            \n              \n                Already have an account? Login\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .back {\n    display: grid;\n\n    /* The image used */\n    // background-image: url(\"../../assets/pexels-ryutaro-tsukata-5220092.jpg\");\n    background-image: url(\"../../assets/images/pexels-brett-sayles-5129486.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.column {\n    padding: 0;\n}\n\n.register {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Quiz Platform                                      Worlds Best!                                                                                                                                                                                                                              First Name is required.                                                                                                                                                                                                    Surname is required.                                                                                                                                                                                                    Username is required.                                                                                                                                                                                                                                                      Email is required.                                                  Invalid Email                                                                                                                                                                                                    Password is required.                                                  Password too short.                                                                                                                                                                                                    Password is required.                                                  Passwords don\\'t match.                                                                                                      Register                                                                                    Already have an account? Login                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnswer.html":{"url":"classes/UpdateAnswer.html","title":"class - UpdateAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                UpdateAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:61\n                        \n                    \n\n            \n                \n                    The value for the Updated answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:65\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestion.html":{"url":"classes/UpdateQuestion.html","title":"class - UpdateQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Update Question Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:58\n                        \n                    \n\n            \n                \n                    Updated question value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User class, response from database in this format\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Score\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:42\n                        \n                    \n\n            \n                \n                    Unknown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n            \n                \n                    ID Genereated by Database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    List of users friends!\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:13\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_email_exists\n                            \n                            \n                                create_friends\n                            \n                            \n                                create_user\n                            \n                            \n                                delete_friend\n                            \n                            \n                                edit_user\n                            \n                            \n                                get_usernameID\n                            \n                            \n                                getFriends\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check_email_exists\n                        \n                    \n                \n            \n            \n                \ncheck_email_exists(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Check if email can be registered or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        True or false value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_friends\n                        \n                    \n                \n            \n            \n                \ncreate_friends(friendID: string, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:93\n                \n            \n\n\n            \n                \n                    Create friends\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friendID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_user\n                        \n                    \n                \n            \n            \n                \ncreate_user(user: CreateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:45\n                \n            \n\n\n            \n                \n                    Take user input and create new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_friend\n                        \n                    \n                \n            \n            \n                \ndelete_friend(friendObjID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:121\n                \n            \n\n\n            \n                \n                    Remove friends\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friendObjID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Message: true/false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit_user\n                        \n                    \n                \n            \n            \n                \nedit_user(user: EditUser, userID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:61\n                \n            \n\n\n            \n                \n                    Take new info and update current user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_usernameID\n                        \n                    \n                \n            \n            \n                \nget_usernameID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:132\n                \n            \n\n\n            \n                \n                    Get username by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        User Name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFriends\n                        \n                    \n                \n            \n            \n                \ngetFriends(userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:110\n                \n            \n\n\n            \n                \n                    Get Friends List\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Array of friends IDs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: LoginUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:77\n                \n            \n\n\n            \n                \n                    Log the user in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LoginUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        User\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/user\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n            \n                \n                    All user related requests use this base url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable } from 'rxjs';\n\nimport { CreateUser, EditUser, LoginUser, User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\nimport { FRIEND } from '../models/friend';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * All user related requests use this base url\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/user\";\n  user : User = new User();\n\n  /**\n   * Check if email can be registered or not\n   * @param email \n   * @returns True or false value\n   */\n  check_email_exists(email: string) : Observable{\n    return this.http.get(this.base_url+\"/emailExists/\"+ email).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Take user input and create new user\n   * @param user \n   * @returns \n   */\n  create_user(user: CreateUser) : Observable{\n    let userNew = JSON.stringify(user);\n    return this.http.post(this.base_url+\"/createUser\",userNew,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Take new info and update current user.\n   * @param user \n   * @param userID \n   * @returns \n   */\n  edit_user(user: EditUser, userID: String) : Observable{\n    let userUpdated = JSON.stringify(user);\n    return this.http.patch(this.base_url+\"/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Log the user in\n   * @param email \n   * @param password \n   * @returns User\n   */\n  login(user : LoginUser) : Observable{\n    let body = JSON.stringify(user)\n    return this.http.post(this.base_url+\"/login\",body,{\n      headers: new HttpHeaders({\n        'Content-Type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Create friends\n   * @param friendArray\n   * @param userID\n   */\n  create_friends(friendID: string, userID : string) {\n    let body = JSON.stringify({\n      \"UserID\": userID,\n      \"FriendID\": friendID\n    });\n    return this.http.post(\"https://clumsy-apron-ray.cyclic.app/api/friend/createFriend\",body,{\n      headers: new HttpHeaders({\n        'Content-Type' : 'application/json'\n      })\n    }).pipe(catchError(handleError));\n  }\n\n  /**\n   * Get Friends List\n   * @param userID\n   * @returns Array of friends IDs\n   */\n  getFriends(userID: string): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/friend/getFriends/\"+userID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove friends\n   * @param friendObjID \n   * @returns Message: true/false\n   */\n  delete_friend(friendObjID: string): Observable{\n    return this.http.delete(\"https://clumsy-apron-ray.cyclic.app/api/friend/deleteFriend/\"+friendObjID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get username by id\n   * @param id \n   * @returns User Name\n   */\n  get_usernameID(id:string){\n    return this.http.get(this.base_url+\"/getName/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/bookmarks/bookmarks.component.ts\n            \n            component\n            BookmarksComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/friend-info/friend-info.component.ts\n            \n            component\n            FriendInfoComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/friends/friends.component.ts\n            \n            component\n            FriendsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/guards/edit-profile.guard.ts\n            \n            guard\n            EditProfileGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/leaderboard/leaderboard.component.ts\n            \n            component\n            LeaderboardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/master-answer/master-answer.component.ts\n            \n            component\n            MasterAnswerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            Answer\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            NewAnswer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            UpdateAnswer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            AddBookmark\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            Bookmark\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/categories.ts\n            \n            class\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/friend.ts\n            \n            class\n            FRIEND\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/history.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/history.ts\n            \n            class\n            HistoryArr\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/qna.ts\n            \n            class\n            NewQuestionAnswer\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            NewQuestion\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            Question\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            UpdateQuestion\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            CreateQuiz\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            Quiz\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            CreateUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            EditUser\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            LoginUser\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pipes/book-filter.pipe.ts\n            \n            pipe\n            BookFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter-friends.pipe.ts\n            \n            pipe\n            FilterFriendsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            pipe\n            FilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/quiz-answer/quiz-answer.component.ts\n            \n            component\n            QuizAnswerComponent\n            \n                28 %\n                (7/25)\n            \n        \n        \n            \n                \n                src/app/quiz-create/quiz-create.component.ts\n            \n            component\n            QuizCreateComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/quiz-info/quiz-info.component.ts\n            \n            component\n            QuizInfoComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/quiz-result/quiz-result.component.ts\n            \n            component\n            QuizResultComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/quiz-search/quiz-search.component.ts\n            \n            component\n            QuizSearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/quiz-typein/quiz-typein.component.ts\n            \n            component\n            QuizTypeinComponent\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/bookmark.service.ts\n            \n            injectable\n            BookmarkService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/leaderboard.service.ts\n            \n            injectable\n            LeaderboardService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/utilities/errorhandler.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utilities/password.validator.ts\n            \n            variable\n            confirmPassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.8\n        \n            @angular/cdk : ^15.2.8\n        \n            @angular/common : ^15.2.8\n        \n            @angular/compiler : ^15.2.8\n        \n            @angular/core : ^15.2.8\n        \n            @angular/forms : ^15.2.8\n        \n            @angular/platform-browser : ^15.2.8\n        \n            @angular/platform-browser-dynamic : ^15.2.8\n        \n            @angular/router : ^15.2.8\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bulma : ^0.9.4\n        \n            clipboard : ^2.0.11\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleError   (src/.../errorhandler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/errorhandler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                    handleError function called when an HttpError occurs in API call\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nService\nStatus\n\n\n\n\nContinuous Integration\n\n\n\nCode Coverage\n\n\n\nDocumentation\nhttps://aksharnana.github.io/QuizPlatform-Docs/\n\n\n\nQuiz Platform\nThis project involves creating and executing a quiz platform similar to Sporcle or Jetpunk, where users can both create and take quizzes. Additionally, users can share their quiz results with friends, and even create groups for competitions. Various types of questions should be available, such as simple question-answer, image-based, and matching questions. Quizzes should also be categorized and rated by users.\nInstallation\nInstall node_modules with npm:\n  cd Quiz_Platform\n  npm installRun Locally\nGo to the project directory\n  cd Quiz_PlatformStart the server\n  ng serve --openRunning Tests\nTo run tests, run the following command\n  npm run testAuto Documentation\nTo generate local documentation, run the following command\n  npm run compodocTo serve the genereated documentation, run the command\n  npm run compodoc-serveContinuous Integration / Continuous Deployment\nQuiz Platform is using Circle CI for running tests, building and pushing to firebase hosting as well as updating the codecov page on every commit.\nDeployment\nThe live project link is:\nhttps://quiz-platform-28fcb.web.app/\nTech Stack\nClient: Angular, BulmaIO\nServer: Node, Express, MongoDB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterFriendsPipe\n\nFilterFriendsPipe\n\nAppModule -->\n\nFilterFriendsPipe->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nFriendInfoComponent\n\nFriendInfoComponent\n\nAppModule -->\n\nFriendInfoComponent->AppModule\n\n\n\n\n\nFriendsComponent\n\nFriendsComponent\n\nAppModule -->\n\nFriendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizResultComponent\n\nQuizResultComponent\n\nAppModule -->\n\nQuizResultComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nQuizTypeinComponent\n\nQuizTypeinComponent\n\nAppModule -->\n\nQuizTypeinComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmPassword   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n    const ctrl = control.get(\"password\");\n    const match_ctrl = control.get(\"confirm_password\");\n    return ctrl && match_ctrl && ctrl.value !== match_ctrl.value ? { confirmPassword: false } : null;\n}\n                    \n                \n\n            \n                \n                    Validator Function to validate password and confirm password fields.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
