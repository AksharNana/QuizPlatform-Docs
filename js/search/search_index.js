var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddBookmark.html",[0,0.139,1,2.131]],["body/classes/AddBookmark.html",[0,0.236,1,3.612,2,1.545,3,0.24,4,0.24,5,0.213,6,4.049,7,0.849,8,3.032,9,3.97,10,2.253,11,0.296,12,0.468,13,2.546,14,2.666,15,0.259,16,0.018,17,0.785,18,0.544,19,0.544,20,0.326,21,5.249,22,1.059,23,5.309,24,5.934,25,5.249,26,4.47,27,0.292,28,0.892,29,1.616,30,1.69,31,2.246,32,1.769,33,1.078,34,0.982,35,0.014,36,0.014]],["title/classes/Answer.html",[0,0.139,37,1.269]],["body/classes/Answer.html",[0,0.238,2,1.334,3,0.207,4,0.207,5,0.184,7,0.733,10,2.272,11,0.256,12,0.427,15,0.311,16,0.018,17,0.795,18,0.612,19,0.643,20,0.367,26,4.182,27,0.294,28,0.99,29,1.794,30,2.073,31,2.493,32,2.17,33,1.197,34,1.09,35,0.013,36,0.013,37,2.651,38,3.19,39,3.983,40,4.781,41,4.535,42,4.535,43,4.535,44,2.766,45,2.398,46,4.535,47,4.107,48,5.242,49,4.535,50,2.539,51,2.272,52,4.535,53,2.74,54,3.521,55,2.276]],["title/injectables/AnswerService.html",[56,1.269,57,2.131]],["body/injectables/AnswerService.html",[0,0.131,3,0.161,4,0.161,5,0.143,7,1.083,11,0.199,12,0.361,15,0.292,16,0.018,17,0.74,18,0.301,19,0.301,20,0.357,27,0.161,28,1.225,29,1.517,35,0.011,36,0.011,37,2.624,40,3.467,50,2.168,53,4.15,54,3.43,55,3.083,56,1.661,57,2.788,58,1.879,59,3.045,60,2.382,61,1.213,62,4.249,63,4.505,64,3.211,65,0.922,66,4.929,67,4.929,68,4.929,69,4.929,70,6.143,71,4.929,72,1.336,73,1.998,74,3.475,75,3.532,76,2.34,77,3.437,78,2.788,79,1.194,80,0.831,81,1.194,82,4.929,83,3.532,84,2.917,85,2.292,86,2.766,87,2.766,88,1.311,89,3.488,90,3.267,91,4.929,92,3.532,93,3.802,94,4.929,95,2.997,96,3.467,97,4.929,98,3.532,99,4.929,100,4.249,101,4.249,102,2.621,103,4.929,104,3.532,105,2.382,106,3.802,107,3.532,108,2.219,109,3.532,110,3.532,111,2.621,112,1.822,113,2.788,114,2.788,115,4.929,116,3.532,117,2.788,118,2.219,119,2.788,120,2.006,121,1.098,122,2.294,123,3.712,124,1.879,125,0.571,126,1.998,127,2.485,128,1.677,129,2.294,130,1.773,131,1.998,132,1.773,133,1.677,134,1.617,135,0.909,136,6.462,137,4.929,138,2.362,139,2.724,140,3.532,141,3.211,142,1.528,143,3.43,144,2.006,145,3.655,146,3.532,147,3.532,148,3.532,149,3.532,150,3.532,151,3.532,152,3.532,153,3.532]],["title/components/AppComponent.html",[154,0.468,155,1.014]],["body/components/AppComponent.html",[0,0.136,3,0.168,4,0.168,5,0.149,7,0.595,11,0.207,12,0.371,15,0.253,16,0.018,17,0.382,18,0.494,19,0.591,20,0.361,22,1.129,27,0.168,28,0.986,35,0.011,36,0.011,44,2.064,45,1.298,60,2.424,61,0.906,65,0.948,72,0.866,79,0.656,80,0.72,81,0.656,87,2.283,88,0.904,121,0.861,125,0.595,133,2.407,135,0.947,142,1.365,154,0.863,155,1.683,156,1.56,157,1.185,158,1.185,159,1.185,160,1.185,161,3.172,162,3.91,163,5.07,164,1.035,165,2.481,166,2.372,167,1.632,168,5.801,169,1.632,170,5.07,171,5.801,172,5.801,173,5.058,174,6.945,175,1.392,176,4.505,177,6.778,178,3.679,179,3.834,180,5.07,181,3.679,182,2.9,183,5.07,184,1.966,185,2.064,186,3.91,187,4.371,188,2.868,189,1.632,190,3.679,191,5.07,192,6.252,193,6.778,194,6.557,195,6.252,196,5.07,197,5.07,198,3.679,199,5.801,200,4.371,201,5.07,202,3.679,203,4.371,204,5.07,205,2.815,206,3.679,207,2.064,208,3.679,209,1.185,210,2.081,211,2.081,212,3.679,213,1.497,214,3.679,215,3.679,216,5.07,217,5.07,218,3.679,219,3.679,220,3.679,221,3.679,222,2.838,223,3.91,224,3.91,225,4.822,226,3.567,227,2.283,228,1.707,229,5.07,230,2.868,231,4.371,232,2.838,233,1.36,234,1.957,235,1.789,236,1.966,237,3.679,238,1.298,239,1.298,240,3.679,241,1.185,242,1.632,243,1.632,244,2.013,245,1.185,246,1.185,247,0.947,248,1.185,249,0.947,250,1.185,251,0.947,252,1.185,253,0.947,254,1.193,255,1.632,256,0.947,257,1.185,258,0.947,259,1.185,260,0.947,261,1.185,262,0.947,263,1.185,264,0.947,265,1.185,266,0.947,267,1.083,268,1.632,269,0.947,270,0.99,271,1.185,272,0.947,273,1.185,274,0.947,275,0.947,276,1.185,277,0.947,278,1.185,279,0.947,280,1.185,281,0.947,282,1.185,283,1.185,284,1.185]],["title/modules/AppModule.html",[285,2.906,286,2.65]],["body/modules/AppModule.html",[0,0.141,3,0.175,4,0.175,5,0.155,16,0.018,22,1.079,27,0.175,35,0.012,36,0.012,121,1.329,124,2.031,125,0.618,155,2.005,166,1.176,228,1.124,247,1.765,249,1.765,251,1.765,253,1.765,254,1.224,256,1.765,258,1.765,260,1.765,262,1.765,264,1.765,266,1.765,267,1.124,269,1.765,270,1.845,272,1.765,274,1.765,275,1.765,277,1.765,279,1.765,281,1.765,286,5.61,287,2.48,288,2.767,289,3.293,290,3.293,291,3.293,292,3.293,293,4.452,294,4.452,295,4.555,296,4.452,297,4.485,298,3.293,299,2.48,300,3.819,301,5.202,302,4.485,303,5.202,304,4.485,305,5.202,306,3.293,307,2.946,308,5.202,309,1.814,310,5.202,311,3.819,312,3.819,313,3.293,314,2.687,315,3.293,316,3.293,317,2.687,318,4.485,319,3.293,320,2.687,321,4.485,322,3.293,323,3.819,324,2.687,325,2.946,326,3.293,327,2.687,328,3.293,329,3.819,330,3.819,331,2.687,332,3.293,333,3.293,334,2.687,335,2.687,336,3.293,337,3.819,338,3.819,339,3.293,340,2.687,341,3.293,342,2.687,343,3.293,344,3.293,345,3.819]],["title/modules/AppRoutingModule.html",[285,2.906,296,2.446]],["body/modules/AppRoutingModule.html",[0,0.16,3,0.197,4,0.197,5,0.175,8,2.048,16,0.018,20,0.22,22,1.179,27,0.258,35,0.013,36,0.013,60,1.673,87,1.943,121,1.331,125,0.698,154,0.959,162,3.327,179,2.44,209,1.389,223,4.352,224,3.327,225,3.327,226,3.035,227,1.943,228,1.66,247,1.452,249,1.452,251,1.452,253,1.452,254,1.57,256,1.452,258,1.452,260,1.452,262,1.452,264,1.452,266,1.452,267,1.27,269,1.452,270,1.519,272,1.452,274,1.111,275,1.452,277,1.452,279,1.452,281,1.452,285,3.327,287,2.801,296,3.664,302,3.719,304,4.864,313,3.719,314,3.035,315,3.719,316,3.719,317,3.035,318,4.864,319,3.719,320,3.035,321,4.864,322,3.719,324,3.035,325,3.327,326,3.719,327,3.035,328,3.719,331,3.035,332,3.719,333,3.719,334,3.035,335,3.035,336,3.719,339,3.719,340,3.035,341,3.719,342,3.035,343,3.719,344,3.719,346,4.314,347,4.314,348,5.642,349,4.33,350,4.994,351,4.314,352,4.314,353,4.423,354,4.314,355,7.805,356,4.314,357,3.327,358,3.327,359,5.579,360,2.801,361,4.314,362,5.642,363,4.314,364,4.314,365,4.314,366,4.314,367,4.314,368,4.314,369,4.314,370,4.314,371,4.314,372,4.314,373,3.327,374,3.719,375,4.314,376,4.314,377,4.314]],["title/pipes/BookFilterPipe.html",[144,1.533,293,2.446]],["body/pipes/BookFilterPipe.html",[0,0.188,3,0.232,4,0.232,5,0.206,7,0.821,15,0.206,16,0.018,17,0.705,20,0.259,22,1.182,27,0.232,35,0.014,36,0.014,65,0.95,79,0.906,80,0.903,81,0.906,88,1.263,95,3.288,96,4.981,108,3.379,121,1.063,125,0.821,134,1.473,138,2.208,144,2.547,164,1.429,293,4.064,378,3.573,379,5.395,380,4.378,381,6.258,382,2.701,383,5.395,384,6.104,385,5.078,386,5.461,387,3.362,388,4.403,389,3.413,390,4.279,391,4.827,392,2.618,393,4.827,394,4.827,395,2.067,396,1.969,397,4.378,398,4.378,399,5.078]],["title/classes/Bookmark.html",[0,0.139,9,2.004]],["body/classes/Bookmark.html",[0,0.232,1,2.876,2,1.496,3,0.232,4,0.232,5,0.206,6,3.922,7,0.822,8,2.414,9,3.992,10,2.21,11,0.287,12,0.459,13,2.529,14,2.648,15,0.287,16,0.018,17,0.788,18,0.603,19,0.603,20,0.361,22,1.044,23,5.235,24,5.852,26,4.407,27,0.286,28,1.064,29,1.928,30,2.185,31,2.679,32,2.287,33,1.286,34,1.172,35,0.014,36,0.014,400,5.085,401,5.085,402,5.085,403,5.085]],["title/injectables/BookmarkService.html",[56,1.269,404,2.276]],["body/injectables/BookmarkService.html",[0,0.156,1,3.74,3,0.193,4,0.193,5,0.171,7,1.069,9,4.143,11,0.238,12,0.407,14,1.962,15,0.286,16,0.018,17,0.687,18,0.359,19,0.359,20,0.35,27,0.193,28,0.945,29,1.712,35,0.012,36,0.012,56,1.874,58,2.245,60,2.156,61,1.369,62,4.795,64,3.519,65,1.04,72,1.464,73,2.387,74,3.74,76,2.641,77,3.655,78,3.146,79,1.179,80,0.821,81,1.179,84,2.641,85,2.003,86,2.977,87,2.504,88,1.259,89,3.425,90,2.958,95,2.379,100,4.795,101,4.795,102,2.958,105,2.156,113,3.146,114,3.146,117,3.146,118,2.504,119,3.146,120,2.264,121,1.168,123,3.361,124,2.245,125,0.683,126,2.387,127,2.969,128,2.004,130,2.118,131,2.387,132,2.118,133,2.004,134,1.556,135,1.086,138,2.195,141,2.387,142,1.136,143,2.55,144,1.718,145,3.519,175,1.449,226,4.964,404,3.361,405,3.639,406,4.29,407,5.562,408,5.562,409,4.22,410,5.562,411,4.22,412,5.562,413,4.22,414,4.795,415,5.562,416,4.22,417,4.795,418,5.562,419,4.22,420,2.969,421,4.22,422,5.562,423,4.22,424,4.22,425,4.22]],["title/components/BookmarksComponent.html",[154,0.468,247,0.97]],["body/components/BookmarksComponent.html",[0,0.114,3,0.141,4,0.141,5,0.125,9,3.813,11,0.252,12,0.328,15,0.267,16,0.018,17,0.665,18,0.492,19,0.545,20,0.345,22,1.173,27,0.141,33,1.081,34,0.985,35,0.01,36,0.01,61,0.759,65,0.837,72,1.239,79,0.939,80,0.82,81,0.939,88,0.939,90,2.379,95,2.737,108,3.045,112,1.14,121,1.087,125,0.499,134,1.36,135,0.794,142,1.204,154,0.82,155,0.83,156,1.377,157,0.993,158,0.993,159,0.993,160,0.993,164,0.868,165,2.434,166,2.327,167,1.44,169,1.44,175,1.486,176,3.491,182,1.914,184,1.735,185,1.821,189,1.695,210,2.53,211,2.53,226,5.2,228,0.907,230,2.53,233,1.654,235,1.579,236,2.24,238,2.47,239,1.858,241,0.993,242,1.44,243,1.44,244,1.86,245,0.993,246,0.993,247,1.487,248,0.993,249,0.794,250,0.993,251,0.794,252,0.993,253,0.794,254,1.053,255,1.44,256,0.794,257,0.993,258,0.794,259,0.993,260,0.794,261,0.993,262,0.794,263,0.993,264,0.794,265,0.993,266,0.794,267,0.907,268,1.44,269,0.794,270,0.83,271,0.993,272,0.794,273,0.993,274,0.794,275,0.794,276,0.993,277,0.794,278,0.993,279,0.794,280,0.993,281,0.794,282,0.993,283,0.993,284,0.993,390,2.703,395,1.255,396,1.735,404,3.989,420,2.169,426,2.658,427,2.371,428,5.265,429,4.473,430,4.456,431,2.24,432,4.473,433,3.083,434,2.752,435,4.473,436,3.451,437,3.451,438,2.703,439,4.473,440,3.083,441,4.473,442,4.473,443,2.905,444,4.473,445,5.777,446,5.777,447,4.473,448,4.98,449,3.083,450,4.064,451,3.451,452,2.53,453,2.378,454,3.083,455,5.265,456,1.64,457,1.744,458,3.083,459,1.947,460,2.5,461,3.083,462,4.473,463,2.53,464,2.53,465,4.473,466,4.473,467,3.083,468,3.451,469,2.014,470,3.451,471,4.473,472,3.857,473,3.857,474,2.378,475,1.464,476,1.088,477,1.255,478,2.703,479,1.464,480,3.083,481,3.083,482,1.255,483,3.083,484,2.002,485,3.083,486,3.083,487,3.083,488,3.083,489,3.083,490,1.735,491,3.083,492,4.473,493,4.473,494,3.451,495,1.464,496,3.263,497,3.263,498,3.263,499,1.388,500,3.263,501,1.547,502,1.735,503,2.042,504,2.601,505,3.073,506,2.042,507,1.579,508,1.735,509,2.379,510,1.64,511,1.464,512,1.914,513,3.083,514,1.547,515,1.64,516,1.64,517,1.64,518,1.64,519,1.64,520,1.388,521,2.379,522,1.547,523,1.14,524,1.14,525,1.255,526,1.255,527,3.451,528,2.002,529,2.014,530,1.547,531,2.378,532,2.378]],["title/classes/Category.html",[0,0.139,389,1.696]],["body/classes/Category.html",[0,0.204,2,1.621,3,0.252,4,0.252,5,0.223,7,0.891,10,1.944,11,0.311,12,0.482,15,0.285,16,0.018,17,0.757,18,0.598,19,0.633,20,0.358,27,0.252,28,1.117,29,2.024,30,2.263,31,2.813,32,2.368,33,1.35,34,1.23,35,0.015,36,0.015,80,0.873,389,3.349,533,4.749,534,5.509,535,5.509,536,5.509]],["title/components/ChallengeComponent.html",[154,0.468,249,0.97]],["body/components/ChallengeComponent.html",[0,0.076,3,0.094,4,0.094,5,0.083,8,0.973,11,0.116,12,0.24,13,0.691,14,0.723,15,0.281,16,0.018,17,0.341,18,0.506,19,0.535,20,0.368,22,1.104,27,0.094,28,0.695,33,0.421,34,0.956,35,0.01,36,0.007,37,1.927,39,2.486,44,1.902,45,1.156,50,1.803,51,1.156,55,1.029,57,3.361,61,0.505,63,4.227,65,0.613,72,0.963,78,1.853,79,0.73,80,0.508,81,0.366,85,1.754,88,0.834,90,1.742,95,1.999,102,1.742,105,1.27,111,1.742,112,1.211,121,1.156,125,0.332,129,1.331,134,1.346,135,0.528,142,0.882,154,0.797,155,0.552,156,1.008,157,0.66,158,0.66,159,0.66,160,0.66,164,0.577,165,2.299,166,2.198,167,1.055,169,1.055,175,1.397,182,1.999,185,2.218,188,1.16,189,1.505,205,2.454,207,1.333,209,0.66,210,2.315,211,2.315,213,0.834,228,0.603,230,3.082,233,2.265,234,1.742,235,0.723,236,1.812,238,1.649,239,1.444,241,0.66,242,1.055,243,1.055,244,1.645,245,0.66,246,0.66,247,0.528,248,0.66,249,1.203,250,0.66,251,0.528,252,0.66,253,0.528,254,1.283,255,1.055,256,0.528,257,0.66,258,0.528,259,0.66,260,0.528,261,0.66,262,0.528,263,0.66,264,0.528,265,0.66,266,0.528,267,0.603,268,1.055,269,0.528,270,0.552,271,0.66,272,0.528,273,0.66,274,0.528,275,0.528,276,0.66,277,0.528,278,0.66,279,0.528,280,0.66,281,0.528,282,0.66,283,0.66,284,0.66,309,0.973,390,1.98,392,0.758,395,0.834,427,0.923,431,2.304,434,2.418,438,2.824,452,1.16,457,1.853,459,1.889,464,2.315,468,2.527,469,1.843,475,0.973,476,0.723,477,2.493,479,2.219,482,0.834,484,2.127,490,1.981,502,1.587,503,2.113,506,0.795,507,1.444,508,1.812,523,1.211,524,0.758,525,1.666,526,0.834,528,1.331,537,1.767,538,3.605,539,4.092,540,3.276,541,2.879,542,2.879,543,2.879,544,2.879,545,3.595,546,4.092,547,2.675,548,3.702,549,2.879,550,3.088,551,2.879,552,3.595,553,2.315,554,3.595,555,5.11,556,3.833,557,3.538,558,3.288,559,2.305,560,3.595,561,1.239,562,2.447,563,3.361,564,2.331,565,2.219,566,2.982,567,3.361,568,3.276,569,2.527,570,3.035,571,2.305,572,2.305,573,2.127,574,2.05,575,2.05,576,2.218,577,3.629,578,2.527,579,3.288,580,3.947,581,2.305,582,2.824,583,2.824,584,2.218,585,2.127,586,2.05,587,2.305,588,2.824,589,2.527,590,2.05,591,1.98,592,2.527,593,1.475,594,1.98,595,3.276,596,3.595,597,2.879,598,2.05,599,2.879,600,2.718,601,5.449,602,2.331,603,2.824,604,3.276,605,2.05,606,2.05,607,2.05,608,1.98,609,2.05,610,2.05,611,2.05,612,2.486,613,2.05,614,2.05,615,2.05,616,2.657,617,2.05,618,2.824,619,2.486,620,2.05,621,3.276,622,3.276,623,3.276,624,2.05,625,2.05,626,2.05,627,2.305,628,2.05,629,3.276,630,2.05,631,2.127,632,1.442,633,1.442,634,1.442,635,1.331,636,1.16,637,1.239,638,1.239,639,1.331,640,1.029,641,1.16,642,1.029,643,1.581,644,1.16,645,1.767,646,1.029,647,2.05,648,1.581,649,2.05,650,1.442,651,1.442,652,2.05,653,1.442,654,1.442,655,2.305,656,1.442,657,1.442,658,1.442,659,1.442,660,1.442,661,1.442,662,2.05,663,2.05,664,1.442,665,1.442,666,2.879,667,2.305,668,1.442,669,1.442,670,1.442,671,1.331,672,2.305,673,3.595,674,1.442,675,1.442,676,1.442,677,1.581,678,1.442,679,1.767,680,1.442,681,1.442,682,2.305,683,3.288,684,3.288,685,4.092,686,2.05,687,3.276,688,2.05,689,2.05,690,2.05,691,2.05,692,2.05,693,1.442,694,1.442,695,1.442,696,1.442,697,1.442,698,1.16,699,1.442,700,1.442,701,1.442,702,1.442,703,1.98,704,0.834,705,2.05,706,2.05,707,2.127,708,1.581,709,1.767,710,1.853,711,2.305,712,2.305,713,2.824,714,2.879,715,1.331,716,1.581,717,2.527,718,2.527,719,1.16,720,1.16,721,1.581,722,1.581,723,1.239,724,1.09,725,1.581,726,1.239,727,0.877,728,1.239,729,1.09,730,1.09,731,1.331,732,1.442,733,2.89,734,2.305,735,2.315,736,1.442,737,1.442,738,1.581,739,1.09,740,1.556,741,1.581,742,1.75,743,1.239,744,1.644,745,1.442,746,1.442,747,2.176,748,1.644,749,1.331,750,1.239,751,1.16,752,1.98,753,0.877,754,1.401,755,0.877,756,0.877,757,0.973,758,1.442,759,1.442,760,1.442,761,1.442,762,1.239,763,1.331,764,0.877,765,1.442]],["title/classes/CreateQuiz.html",[0,0.139,766,2.446]],["body/classes/CreateQuiz.html",[0,0.198,2,1.17,3,0.182,4,0.182,5,0.161,7,1.165,10,1.886,11,0.224,12,0.391,15,0.31,16,0.018,17,0.798,18,0.621,19,0.621,20,0.372,22,1.208,27,0.244,28,0.675,29,1.223,30,1.28,31,1.701,32,1.34,33,1.515,34,1.326,35,0.012,36,0.012,44,2.457,45,2.13,51,2.13,80,0.88,87,1.79,93,4.657,118,1.79,389,3.192,577,3.415,580,3.901,584,2.341,704,2.628,766,3.47,767,3.066,768,6.111,769,4.542,770,6.111,771,3.975,772,3.975,773,3.975,774,3.92,775,3.975,776,3.975,777,3.975,778,3.975,779,4.657,780,4.247,781,4.247,782,5.205,783,3.975,784,5.205,785,3.975,786,5.205,787,5.205,788,3.47]],["title/classes/CreateUser.html",[0,0.139,789,2.004]],["body/classes/CreateUser.html",[0,0.262,2,1.165,3,0.181,4,0.181,5,0.16,7,0.64,10,1.397,11,0.223,12,0.39,15,0.281,16,0.018,17,0.81,18,0.59,19,0.59,20,0.353,27,0.294,28,0.673,29,1.219,30,1.275,32,1.334,33,1.478,34,1.258,35,0.012,36,0.012,80,0.801,175,1.527,184,2.336,227,1.783,456,2.106,460,1.88,584,1.535,602,2.577,704,2.882,789,3.428,790,2.571,791,4.239,792,3.024,793,3.461,794,3.955,795,4.065,796,3.732,797,4.407,798,2.969,799,3.959,800,4.368,801,4.733,802,3.959,803,3.895,804,3.959,805,3.959,806,4.239,807,3.959,808,3.959,809,2.785,810,2.785,811,2.835,812,2.835]],["title/components/EditProfileComponent.html",[154,0.468,251,0.97]],["body/components/EditProfileComponent.html",[0,0.096,3,0.119,4,0.119,5,0.106,7,0.422,11,0.147,12,0.289,14,0.92,15,0.193,16,0.018,18,0.222,19,0.222,20,0.348,22,0.962,27,0.119,35,0.009,36,0.009,55,3.232,60,1.532,61,1.174,65,0.739,72,1.123,76,1.876,79,0.465,80,0.71,81,0.465,85,2.279,86,1.779,87,1.779,88,1.249,112,2.114,119,1.474,121,0.972,125,0.422,138,2.124,142,0.702,154,0.592,155,0.702,156,1.216,157,0.839,158,0.839,159,0.839,160,0.839,164,0.734,165,2.383,166,2.278,167,1.272,169,1.272,175,1.466,189,0.839,207,1.061,210,2.234,211,2.234,225,4.105,228,1.94,232,3.047,233,1.968,234,2.101,235,0.92,236,2.063,238,2.41,239,2.018,241,0.839,242,1.272,243,1.272,244,1.713,245,0.839,246,0.839,247,0.671,248,0.839,249,0.671,250,0.839,251,1.37,252,0.839,253,0.671,254,0.93,255,1.272,256,0.671,257,0.839,258,0.671,259,0.839,260,0.671,261,0.839,262,0.671,263,0.839,264,0.671,265,0.839,266,0.671,267,0.767,268,1.272,269,0.671,270,0.702,271,0.839,272,0.671,273,0.839,274,0.671,275,0.671,276,0.839,277,0.671,278,0.839,279,0.671,280,0.839,281,0.671,282,0.839,283,0.839,284,0.839,309,1.238,314,4.871,357,2.01,392,0.964,456,2.101,457,2.234,459,1.46,463,2.234,469,2.396,476,0.92,478,2.387,479,2.527,490,1.011,495,1.238,496,3.042,497,3.042,498,3.042,499,1.174,500,3.042,501,1.308,502,2.063,503,2.217,504,2.396,505,2.83,506,1.849,507,1.394,508,1.532,509,2.101,510,1.386,511,1.238,512,1.69,514,1.308,515,1.386,516,1.386,517,1.386,518,1.386,519,1.386,520,1.174,521,2.101,522,1.308,523,0.964,524,0.964,525,1.061,526,1.061,529,1.779,530,1.308,561,1.575,562,2.997,570,4.496,576,2.166,600,3.042,602,3.078,619,3.726,640,1.308,643,3.047,708,2.01,727,1.115,740,1.876,742,1.69,753,1.115,754,1.69,755,1.115,756,1.115,757,1.238,764,1.115,794,3.683,795,1.575,796,3.551,797,4.062,798,2.736,800,2.234,803,2.387,811,2.101,813,5.97,814,2.247,815,4.769,816,3.95,817,4.769,818,2.882,819,4.411,820,6.018,821,3.047,822,5.39,823,5.39,824,2.606,825,3.95,826,4.642,827,2.606,828,2.101,829,3.95,830,3.95,831,3.744,832,2.779,833,3.355,834,3.405,835,3.405,836,3.405,837,3.679,838,4.871,839,3.047,840,3.047,841,3.713,842,3.355,843,2.606,844,3.405,845,3.405,846,2.606,847,3.95,848,2.606,849,2.247,850,2.606,851,3.917,852,2.247,853,2.606,854,2.247,855,2.606,856,2.01,857,2.606,858,2.01,859,2.606,860,2.247,861,2.606,862,2.247,863,2.247,864,2.606,865,2.606,866,2.606,867,2.606,868,2.606,869,2.606,870,2.606,871,2.606,872,2.606,873,2.247,874,2.247,875,2.247,876,2.247,877,2.247,878,2.606,879,2.606,880,2.606,881,2.606,882,2.606,883,2.606,884,2.606,885,2.606,886,2.606,887,3.047,888,3.047,889,3.405,890,1.834,891,3.047,892,2.606,893,1.693,894,3.355,895,2.01,896,2.01,897,2.565,898,2.01,899,1.834,900,2.01,901,2.01,902,2.01,903,1.386,904,2.01,905,2.01,906,2.01,907,2.779,908,2.01,909,3.047,910,1.834,911,2.01]],["title/guards/EditProfileGuard.html",[350,2.65,912,2.906]],["body/guards/EditProfileGuard.html",[0,0.191,3,0.236,4,0.236,5,0.209,7,0.834,11,0.291,15,0.209,16,0.018,20,0.263,27,0.236,35,0.014,36,0.014,44,2.572,45,1.82,47,3.818,56,2.129,60,2.45,61,1.556,65,1.182,79,0.92,80,0.641,81,0.92,88,1.127,89,3.076,121,1.161,125,0.834,128,2.45,132,2.589,133,2.45,134,1.487,138,2.23,175,1.403,182,2.703,205,2.323,207,2.1,209,1.661,213,2.1,350,4.445,359,5.634,396,2,469,2.845,470,3.979,472,4.448,473,4.448,564,2.922,913,3.979,914,5.448,915,4.448,916,4.448,917,6.138,918,6.138,919,6.138,920,5.159,921,6.319,922,6.319,923,5.448,924,5.889,925,4.448,926,3.35,927,4.448,928,5.159]],["title/classes/EditUser.html",[0,0.139,811,2.004]],["body/classes/EditUser.html",[0,0.263,2,1.183,3,0.184,4,0.184,5,0.163,7,0.65,10,1.419,11,0.227,12,0.394,15,0.274,16,0.018,17,0.811,18,0.576,19,0.576,20,0.345,27,0.296,28,0.683,29,1.237,30,1.294,32,1.355,33,1.429,34,1.213,35,0.012,36,0.012,80,0.806,175,1.518,184,2.354,227,1.81,456,2.864,460,1.909,584,1.559,602,2.598,704,2.64,789,2.864,790,2.611,791,4.272,792,3.047,793,2.611,794,3.965,795,4.086,796,3.742,797,4.421,798,2.978,800,4.375,801,4.757,803,3.919,806,3.788,809,2.828,810,2.828,811,3.45,812,2.864,929,4.02,930,4.02,931,4.02,932,4.02,933,4.02]],["title/classes/FRIEND.html",[0,0.139,254,0.887]],["body/classes/FRIEND.html",[0,0.2,2,1.594,3,0.247,4,0.247,5,0.219,11,0.305,12,0.477,15,0.283,16,0.018,17,0.782,18,0.594,19,0.594,20,0.356,27,0.247,28,1.186,30,2.247,35,0.014,36,0.014,86,3.334,175,1.112,254,1.817,798,3.142,934,4.67,935,6.978,936,5.417,937,5.417,938,5.417,939,3.933,940,5.417,941,2.718,942,5.417]],["title/pipes/FilterFriendsPipe.html",[144,1.533,294,2.446]],["body/pipes/FilterFriendsPipe.html",[0,0.185,3,0.229,4,0.229,5,0.203,7,0.811,15,0.203,16,0.018,17,0.701,20,0.256,27,0.229,35,0.014,36,0.014,65,0.938,79,0.894,80,0.958,81,0.894,88,1.257,95,3.282,96,4.959,121,1.055,125,0.811,134,1.461,138,2.191,144,2.527,164,1.411,227,3.369,254,1.863,294,4.031,378,3.527,382,2.666,386,5.437,387,3.347,388,4.367,390,4.259,391,4.789,392,2.606,393,4.789,394,4.789,396,1.944,639,3.255,798,2.527,943,5.352,944,4.322,945,6.208,946,6.208,947,5.013,948,5.352,949,5.013,950,5.013,951,3.867]],["title/pipes/FilterPipe.html",[144,1.533,295,2.446]],["body/pipes/FilterPipe.html",[0,0.186,3,0.23,4,0.23,5,0.204,7,0.813,15,0.204,16,0.018,17,0.754,20,0.256,22,1.18,27,0.23,35,0.014,36,0.014,65,0.94,79,0.896,80,0.839,81,0.896,88,1.258,95,3.283,96,4.963,108,3.371,121,1.057,125,0.813,134,1.464,138,2.194,144,2.531,164,1.414,295,4.038,378,3.536,382,2.673,383,5.361,384,6.368,386,5.442,387,3.35,388,4.374,389,3.456,390,4.263,391,4.796,392,2.731,393,4.796,394,4.796,395,2.046,396,1.949,397,4.333,398,4.333,952,4.333,953,5.026,954,5.442,955,5.026,956,5.026]],["title/components/FriendInfoComponent.html",[154,0.468,253,0.97]],["body/components/FriendInfoComponent.html",[0,0.187,3,0.231,4,0.131,5,0.116,11,0.162,12,0.409,15,0.268,16,0.018,18,0.475,19,0.475,20,0.351,22,1.117,27,0.131,28,1.15,35,0.009,36,0.009,51,1.012,61,0.706,65,0.794,72,1.189,76,2.016,79,0.901,80,0.867,81,0.512,85,1.367,86,2.514,88,0.512,90,2.258,105,1.646,108,1.911,121,1.097,125,0.464,134,1.189,135,0.739,142,1.142,154,0.802,155,0.772,156,1.306,157,0.924,158,0.924,159,0.924,160,0.924,164,0.807,165,2.413,166,2.307,167,1.367,169,1.367,173,2.213,175,1.526,184,1.646,185,1.728,189,0.924,207,1.728,209,0.924,210,2.401,211,2.401,213,1.168,228,0.844,233,2.203,235,1.498,236,2.503,238,2.338,239,2.102,241,0.924,242,1.367,243,1.367,244,1.797,245,0.924,246,0.924,247,0.739,248,0.924,249,0.739,250,0.924,251,0.739,252,0.924,253,1.437,254,1.696,255,1.367,256,0.739,257,0.924,258,0.739,259,0.924,260,0.739,261,0.924,262,0.739,263,0.924,264,0.739,265,0.924,266,0.739,267,0.844,268,1.367,269,0.739,270,0.772,271,0.924,272,0.739,273,0.924,274,0.739,275,0.739,276,0.924,277,0.739,278,0.924,279,0.739,280,0.924,281,0.739,282,0.924,283,0.924,284,0.924,288,2.258,334,4.913,373,2.213,382,2.969,392,1.061,395,1.168,431,2.419,434,2.697,436,2.213,459,1.569,469,2.514,475,1.362,476,1.012,477,2.425,479,2.016,482,1.168,490,1.113,495,1.362,496,3.169,497,3.169,498,3.169,499,2.275,500,3.169,501,1.44,502,1.646,503,1.959,504,2.514,505,2.969,506,1.959,507,1.97,508,2.165,509,2.258,510,1.526,511,1.362,512,1.816,514,1.44,518,1.526,519,1.526,520,1.292,521,2.258,522,1.44,523,1.868,524,1.061,525,2.056,526,1.728,529,1.292,547,3.047,553,3.37,564,2.549,565,2.962,566,3.455,576,1.728,584,1.646,591,2.565,593,1.911,612,2.969,616,1.863,636,1.623,637,1.734,641,1.623,642,1.44,646,1.44,648,2.213,671,1.863,696,2.019,698,1.623,704,1.728,727,1.227,733,3.158,735,1.623,739,1.526,742,1.227,744,1.44,747,1.526,748,1.44,751,1.623,753,1.227,754,1.816,755,1.227,756,1.227,757,1.362,762,2.565,764,2.161,780,3.554,818,1.734,948,5.713,957,5.386,958,2.213,959,4.355,960,3.659,961,5.958,962,2.019,963,4.245,964,2.474,965,2.13,966,2.869,967,2.474,968,2.474,969,2.869,970,2.474,971,2.869,972,3.274,973,3.274,974,3.659,975,7.311,976,3.659,977,3.897,978,3.554,979,2.474,980,2.474,981,2.869,982,3.897,983,1.734,984,2.869,985,2.869,986,3.274,987,4.245,988,4.245,989,4.245,990,4.245,991,4.245,992,3.274,993,3.274,994,2.869,995,2.869,996,2.869,997,3.659,998,3.659,999,2.869,1000,2.869,1001,3.554,1002,2.869,1003,2.869,1004,2.869,1005,2.869,1006,2.869,1007,2.869,1008,2.869,1009,2.474,1010,2.213]],["title/components/FriendSelectComponent.html",[154,0.468,258,0.97]],["body/components/FriendSelectComponent.html",[0,0.106,3,0.131,4,0.131,5,0.116,11,0.161,12,0.31,15,0.261,16,0.018,17,0.648,18,0.474,19,0.594,20,0.351,22,0.992,27,0.131,28,1.059,34,1.042,35,0.009,36,0.009,61,0.704,65,0.792,72,1.187,76,2.01,79,0.994,80,0.692,81,0.755,84,2.01,86,1.906,88,0.899,90,2.251,105,1.641,111,2.251,112,1.057,120,1.723,121,1.125,125,0.462,134,1.4,135,0.736,142,1.139,154,0.739,155,0.769,156,1.303,157,0.92,158,0.92,159,0.92,160,0.92,164,0.805,165,2.412,166,2.306,167,1.363,169,1.363,175,1.49,176,4,179,2.851,184,2.161,185,2.268,189,1.794,207,1.723,209,0.92,210,2.394,211,2.394,213,1.164,227,3.18,228,0.841,233,1.565,235,1.494,236,2.161,238,2.427,239,1.779,241,0.92,242,1.363,243,1.363,244,1.794,245,0.92,246,0.92,247,0.736,248,0.92,249,0.736,250,0.92,251,0.736,252,0.92,253,0.736,254,1.748,255,1.363,256,0.736,257,0.92,258,1.434,259,0.92,260,0.736,261,0.92,262,0.736,263,0.92,264,0.736,265,0.92,266,0.736,267,0.841,268,1.363,269,0.736,270,0.769,271,0.92,272,0.736,273,0.92,274,0.736,275,0.736,276,0.92,277,0.736,278,0.92,279,0.736,280,0.92,281,0.736,282,0.92,283,0.92,284,0.92,288,2.251,342,4.909,387,2.01,430,4.589,431,2.415,443,2.749,453,3.265,459,1.057,476,1.009,477,2.052,478,4,479,2.01,482,1.164,490,1.108,495,1.357,496,3.164,497,3.164,498,3.164,499,1.287,500,3.164,501,1.435,502,1.641,503,1.954,504,2.509,505,2.964,506,1.954,507,1.494,508,1.641,509,2.251,510,1.52,511,1.357,512,1.811,514,1.435,515,1.52,516,1.52,517,1.52,518,1.52,519,1.52,520,1.287,521,2.251,522,1.435,523,1.057,524,1.057,525,1.164,526,1.164,527,3.265,530,1.435,531,2.205,532,2.205,538,5.106,547,2.509,561,1.727,562,2.985,564,1.811,565,2.825,566,3.452,567,4.104,576,2.694,585,2.749,593,1.906,612,1.52,636,1.617,637,1.727,638,1.727,639,1.856,640,1.435,646,1.435,696,2.011,798,1.723,818,3.046,903,2.251,910,2.978,951,3.265,957,5.382,965,2.124,977,3.265,1011,2.465,1012,5.041,1013,4.233,1014,3.273,1015,4.346,1016,5.041,1017,6.229,1018,4.233,1019,2.859,1020,4.233,1021,4.186,1022,2.978,1023,2.124,1024,3.265,1025,4.233,1026,3.273,1027,2.859,1028,3.126,1029,3.649,1030,3.265,1031,4.233,1032,2.859,1033,2.978,1034,2.394,1035,3.265,1036,2.859,1037,2.859,1038,2.859,1039,2.859,1040,2.859,1041,2.859,1042,2.465,1043,2.465,1044,2.465,1045,2.465,1046,2.859,1047,4.233,1048,2.465,1049,2.465,1050,2.859,1051,2.859,1052,2.205,1053,1.856,1054,1.856,1055,2.859,1056,2.859,1057,2.859,1058,4.233,1059,2.465,1060,2.465]],["title/components/FriendsComponent.html",[154,0.468,256,0.97]],["body/components/FriendsComponent.html",[0,0.102,3,0.126,4,0.126,5,0.111,8,2.596,11,0.155,12,0.301,15,0.258,16,0.018,17,0.638,18,0.498,19,0.58,20,0.357,22,0.979,27,0.126,28,1.082,33,1.012,34,1.023,35,0.009,36,0.009,45,1.451,60,1.595,61,0.677,65,0.769,72,0.647,79,0.879,80,0.727,81,0.879,85,1.76,88,1.044,95,1.759,105,2.12,112,1.017,120,2.225,121,1.044,125,0.445,134,1.16,135,0.708,142,1.107,154,0.612,155,0.74,156,1.266,157,0.885,158,0.885,159,0.885,160,0.885,164,0.774,165,2.4,166,2.294,167,1.324,169,1.324,175,1.454,176,3.711,185,1.674,189,1.977,207,1.674,210,2.326,211,2.326,213,1.119,227,3.37,228,0.809,233,1.521,235,1.451,236,2.12,238,2.404,239,1.738,241,0.885,242,1.324,243,1.324,244,1.76,245,0.885,246,0.885,247,0.708,248,0.885,249,0.708,250,0.885,251,0.708,252,0.885,253,0.708,254,1.808,255,1.324,256,1.407,257,0.885,258,0.708,259,0.885,260,0.708,261,0.885,262,0.708,263,0.885,264,0.708,265,0.885,266,0.708,267,0.809,268,1.324,269,0.708,270,0.74,271,0.885,272,0.708,273,0.885,274,0.708,275,0.708,276,0.885,277,0.708,278,0.885,279,0.708,280,0.885,281,0.708,282,0.885,283,0.885,284,0.885,309,1.306,387,1.953,396,1.595,427,2.218,430,3.8,431,2.381,448,4.713,450,3.846,452,2.326,453,3.172,459,1.017,460,1.953,470,2.121,476,0.97,477,1.119,478,3.304,479,2.596,482,1.119,484,2.67,490,1.595,495,1.306,496,3.113,497,3.113,498,3.113,499,1.238,500,3.113,501,1.38,502,1.595,503,1.91,504,2.462,505,2.908,506,1.91,507,1.451,508,1.595,509,2.187,510,1.463,511,1.306,512,1.759,514,1.38,515,1.463,516,1.463,517,1.463,518,1.463,519,1.463,520,1.238,521,2.187,522,1.38,523,1.017,524,1.017,525,1.119,526,1.119,527,3.172,530,1.38,531,2.121,532,2.121,561,1.662,562,2.997,567,3.912,576,2.91,591,2.485,593,2.462,600,2.62,602,1.759,619,2.62,638,1.662,639,1.786,640,1.38,696,1.935,697,2.893,703,1.662,792,2.064,818,2.977,828,2.187,838,2.893,841,1.786,851,2.326,903,2.62,926,1.786,941,2.064,951,3.172,1014,3.8,1015,4.247,1022,2.893,1023,2.064,1026,1.786,1028,2.064,1033,2.893,1034,2.326,1035,3.172,1042,2.371,1043,2.371,1044,2.371,1045,2.371,1048,2.371,1049,2.371,1059,2.371,1060,2.371,1061,2.371,1062,4.926,1063,4.112,1064,4.926,1065,6.141,1066,6.141,1067,5.467,1068,4.112,1069,2.75,1070,4.112,1071,3.546,1072,3.8,1073,4.247,1074,3.546,1075,3.172,1076,2.75,1077,3.546,1078,2.75,1079,3.172,1080,4.112,1081,2.75,1082,4.112,1083,3.546,1084,3.546,1085,2.75,1086,4.112,1087,2.75,1088,2.75,1089,4.112,1090,2.75,1091,2.75,1092,2.75,1093,2.371,1094,2.75,1095,4.112,1096,2.75,1097,2.75,1098,2.75,1099,2.75,1100,2.75,1101,2.75,1102,2.75,1103,2.75,1104,2.75,1105,2.75,1106,2.75,1107,2.75,1108,2.75,1109,2.75,1110,2.121,1111,2.75,1112,1.935,1113,4.112,1114,3.546]],["title/classes/History.html",[0,0.139,547,1.696]],["body/classes/History.html",[0,0.237,2,1.557,3,0.242,4,0.242,5,0.214,7,0.856,11,0.298,12,0.47,13,2.42,14,2.534,15,0.28,16,0.018,17,0.804,18,0.588,19,0.588,20,0.352,22,0.987,27,0.293,30,1.704,32,1.783,33,1.475,34,1.343,35,0.014,36,0.014,95,2.264,106,4.082,479,2.513,547,3.234,550,3.198,584,2.785,612,2.815,788,3.436,939,3.878,1115,4.082,1116,4.562,1117,5.292,1118,5.292,1119,5.292,1120,4.562,1121,4.562]],["title/classes/HistoryArr.html",[0,0.139,612,2.004]],["body/classes/HistoryArr.html",[0,0.227,2,1.451,3,0.225,4,0.225,5,0.2,7,0.797,11,0.278,12,0.45,13,2.361,14,2.473,15,0.305,16,0.018,17,0.81,18,0.641,19,0.641,20,0.384,22,0.945,27,0.281,30,2.155,32,2.256,33,1.481,34,1.349,35,0.014,36,0.014,95,2.629,547,3.014,550,4.045,584,2.717,612,3.268,788,4.347,939,3.713,1115,3.803,1120,5.297,1121,5.771,1122,4.93,1123,4.93,1124,4.93,1125,4.93,1126,4.93,1127,4.93,1128,4.93,1129,4.93]],["title/injectables/HistoryService.html",[56,1.269,566,1.891]],["body/injectables/HistoryService.html",[0,0.171,3,0.212,4,0.212,5,0.188,11,0.261,12,0.433,14,2.417,15,0.301,16,0.018,17,0.788,18,0.394,19,0.394,20,0.369,22,0.909,27,0.212,33,1.336,35,0.013,36,0.013,56,1.991,58,2.463,64,3.679,65,1.105,72,1.09,73,2.62,74,3.875,77,3.142,79,1.262,80,0.879,81,1.262,85,1.902,88,1.222,89,3.385,113,3.341,114,3.679,117,3.341,118,2.66,120,2.404,121,1.202,123,3.93,124,2.463,125,0.749,126,2.62,128,2.199,130,2.324,131,2.62,132,2.324,133,2.199,135,1.192,138,2.417,141,3.341,142,1.59,143,3.569,144,2.404,145,3.341,547,3.186,566,2.965,636,2.62,645,3.993,1130,3.993,1131,5.093,1132,5.907,1133,5.907,1134,5.093,1135,4.632,1136,5.907,1137,4.632,1138,5.907,1139,4.632,1140,5.907,1141,4.632,1142,5.907,1143,4.632,1144,4.632,1145,5.907,1146,4.632,1147,4.632,1148,4.632,1149,4.632,1150,3.993,1151,4.632,1152,4.632,1153,4.632,1154,4.632]],["title/components/HomeComponent.html",[154,0.468,260,0.97]],["body/components/HomeComponent.html",[0,0.074,1,1.821,3,0.092,4,0.092,5,0.081,8,1.915,9,3.391,11,0.113,12,0.338,13,0.676,14,0.708,15,0.239,16,0.018,17,0.632,18,0.43,19,0.561,20,0.325,22,1.172,27,0.092,28,0.917,34,1.103,35,0.007,36,0.007,37,1.085,61,0.494,65,0.602,72,0.949,79,0.823,80,0.67,81,0.823,84,2.192,86,2.078,88,0.901,95,1.377,105,1.248,108,2.971,111,1.712,118,2.078,119,1.821,120,1.879,121,1.033,125,0.324,134,1.335,135,0.516,142,0.54,154,0.775,155,0.54,156,0.991,157,1.037,158,0.646,159,0.646,160,0.646,164,0.564,165,2.291,166,2.19,167,1.037,169,1.037,175,1.39,179,3.673,189,1.627,207,1.31,209,0.646,213,0.816,222,1.547,223,3.899,228,0.59,233,1.995,235,0.708,238,2.573,239,0.708,241,0.646,242,1.037,243,1.037,244,1.486,245,0.646,246,0.646,247,0.516,248,0.646,249,0.516,250,0.646,251,0.516,252,0.646,253,0.516,254,0.758,255,1.037,256,0.516,257,0.646,258,0.516,259,0.646,260,1.188,261,0.646,262,0.516,263,0.646,264,0.516,265,0.646,266,0.516,267,0.59,268,1.037,269,0.516,270,0.54,271,0.646,272,0.516,273,0.646,274,0.516,275,0.516,276,0.646,277,0.516,278,0.646,279,0.516,280,0.646,281,0.516,282,0.646,283,0.646,284,0.646,382,1.712,387,2.799,389,2.276,390,1.945,392,0.742,395,0.816,396,1.248,404,3.924,406,2.483,420,1.411,427,1.816,431,2.092,434,2.475,438,1.945,457,1.821,459,1.491,460,0.952,463,1.821,464,2.611,469,2.553,474,1.547,475,0.952,476,0.708,477,1.641,482,1.641,484,1.302,490,0.778,494,2.483,495,2.192,499,1.45,502,2.758,503,2.789,506,1.248,507,1.423,508,0.778,511,1.529,512,1.377,520,1.45,523,2.707,524,1.19,529,0.903,530,1.007,562,2.669,576,2.643,581,2.265,593,2.43,594,1.945,608,1.212,640,1.007,654,3.247,698,1.135,710,3.207,719,1.821,720,1.135,723,1.212,724,1.712,726,1.212,727,1.377,728,1.945,729,1.067,730,1.712,735,1.135,739,1.712,740,1.915,742,1.725,743,1.212,744,2.024,747,1.067,748,1.007,751,1.821,752,1.945,753,1.377,754,1.975,755,0.858,756,0.858,757,0.952,764,3.132,769,2.265,774,2.09,798,1.31,818,1.945,826,2.483,832,2.265,903,1.712,926,1.302,939,1.212,954,4.918,973,2.483,977,3.56,983,1.212,992,2.483,993,2.483,1001,3.247,1010,1.547,1023,2.316,1028,2.708,1034,1.821,1074,2.775,1075,2.483,1110,1.547,1155,1.729,1156,4.033,1157,3.219,1158,4.033,1159,5.67,1160,5.67,1161,3.979,1162,4.616,1163,5.396,1164,4.616,1165,1.729,1166,2.006,1167,1.945,1168,2.775,1169,2.006,1170,4.616,1171,3.219,1172,2.775,1173,2.775,1174,3.219,1175,3.219,1176,2.006,1177,3.979,1178,4.616,1179,2.006,1180,2.483,1181,3.56,1182,2.265,1183,2.997,1184,2.006,1185,3.219,1186,4.616,1187,3.219,1188,2.006,1189,3.219,1190,2.006,1191,2.006,1192,2.006,1193,2.006,1194,2.006,1195,1.547,1196,2.006,1197,2.006,1198,2.006,1199,2.006,1200,2.006,1201,2.006,1202,1.729,1203,1.729,1204,1.729,1205,3.477,1206,1.729,1207,1.729,1208,1.729,1209,1.729,1210,1.729,1211,1.729,1212,2.775,1213,1.729,1214,2.006,1215,2.006,1216,3.219,1217,2.006,1218,2.006,1219,2.006,1220,2.006,1221,2.006,1222,2.006,1223,2.006,1224,2.006,1225,2.006,1226,3.219,1227,2.775,1228,2.006,1229,1.411,1230,1.411,1231,1.411,1232,1.411,1233,1.729,1234,2.006,1235,1.729,1236,1.729,1237,1.547,1238,1.729,1239,1.729,1240,1.729,1241,1.729,1242,2.483,1243,2.483,1244,1.547,1245,2.483,1246,1.547,1247,1.547,1248,1.547,1249,1.547,1250,1.547,1251,1.547,1252,1.547,1253,1.547,1254,1.547,1255,1.547,1256,1.547,1257,1.547,1258,1.547,1259,5.487,1260,1.547,1261,1.547,1262,5.452,1263,1.547,1264,1.547,1265,4.162,1266,5.452,1267,2.483,1268,1.547,1269,3.111,1270,1.547,1271,1.547,1272,1.411,1273,3.111,1274,2.483,1275,1.547,1276,1.411,1277,3.111,1278,1.547,1279,1.547,1280,1.547,1281,3.111,1282,1.547,1283,1.547,1284,1.411,1285,3.111,1286,2.483,1287,1.547,1288,1.547,1289,4.162,1290,1.547,1291,1.547,1292,1.547,1293,3.111,1294,1.547,1295,1.411,1296,3.111,1297,1.547,1298,1.547,1299,3.111,1300,1.547,1301,1.547,1302,1.547,1303,3.111,1304,1.547,1305,1.547,1306,2.483,1307,3.111,1308,1.547,1309,1.547,1310,1.547,1311,1.547,1312,1.547,1313,1.547,1314,1.547,1315,1.547,1316,3.111,1317,1.547,1318,1.547,1319,3.111,1320,1.547,1321,1.411,1322,3.111,1323,1.547,1324,1.547,1325,1.547,1326,3.111,1327,1.547,1328,1.547,1329,1.547,1330,3.111,1331,1.547,1332,1.547,1333,1.547,1334,3.111,1335,1.547]],["title/components/LeaderboardComponent.html",[154,0.468,262,0.97]],["body/components/LeaderboardComponent.html",[0,0.081,3,0.1,4,0.1,5,0.088,11,0.123,12,0.252,15,0.196,16,0.018,18,0.293,19,0.293,20,0.268,22,0.901,27,0.1,33,0.706,34,1.302,35,0.008,36,0.008,51,1.858,61,0.537,65,0.643,72,1.003,79,0.389,80,0.529,81,0.389,88,0.613,108,1.549,119,1.946,121,0.724,125,0.353,134,0.513,135,0.561,141,1.233,142,1.417,154,0.728,155,0.587,156,1.059,157,0.702,158,0.702,159,0.702,160,0.702,164,0.613,165,2.322,166,2.219,167,1.107,169,1.107,173,2.653,175,0.994,182,1.471,189,1.107,224,4.82,228,0.641,233,2.454,235,0.769,236,2.423,238,2.711,239,2.342,241,0.702,242,1.107,243,1.107,244,1.558,245,0.702,246,0.702,247,0.561,248,0.702,249,0.561,250,0.702,251,0.561,252,0.702,253,0.561,254,0.81,255,1.107,256,0.561,257,0.702,258,0.561,259,0.702,260,0.561,261,0.702,262,1.245,263,0.702,264,0.561,265,0.702,266,0.561,267,0.641,268,1.107,269,0.561,270,0.587,271,0.702,272,0.561,273,0.702,274,0.561,275,0.561,276,0.702,277,0.561,278,0.702,279,0.561,280,0.702,281,0.561,282,0.702,283,0.702,284,0.702,382,1.829,392,0.806,396,1.334,427,1.918,431,2.17,459,2.069,460,1.035,476,0.769,482,0.887,490,2.042,495,1.633,496,2.801,497,2.801,498,2.801,499,0.981,500,2.801,501,1.094,502,2.859,503,2.879,504,2.178,505,2.573,506,1.876,507,1.975,508,1.876,509,1.829,510,1.159,511,2.023,512,1.471,514,1.094,515,1.159,516,1.159,517,1.159,518,1.159,519,1.159,520,1.918,521,1.829,522,1.094,523,2.727,524,1.575,525,2.544,526,1.969,528,2.233,530,1.094,576,2.278,584,2.042,704,2.143,707,3.141,715,1.415,719,2.41,720,1.946,723,1.317,724,2.266,726,1.317,727,1.823,729,3.116,730,2.573,731,2.766,733,2.41,735,2.41,739,3.116,740,2.5,742,2.598,743,1.317,744,2.643,747,1.159,748,2.138,753,2.07,754,2.598,755,1.823,756,0.932,764,3.22,781,2.42,792,2.808,798,2.143,800,3.435,828,1.829,832,2.42,833,2.42,893,1.415,897,2.233,907,1.533,1001,3.937,1028,2.428,1052,2.653,1114,4.171,1167,2.078,1180,2.653,1181,2.653,1229,2.42,1230,2.42,1231,2.42,1232,2.42,1244,1.681,1245,2.653,1246,1.681,1247,1.681,1248,1.681,1249,1.681,1250,1.681,1251,1.681,1252,1.681,1253,1.681,1254,1.681,1255,1.681,1256,1.681,1257,1.681,1258,1.681,1259,5.562,1260,1.681,1261,1.681,1262,5.53,1263,1.681,1264,1.681,1265,4.316,1266,5.53,1267,2.653,1268,1.681,1269,3.286,1270,1.681,1271,1.681,1272,1.533,1273,3.286,1274,2.653,1275,1.681,1276,1.533,1277,3.286,1278,1.681,1279,1.681,1280,1.681,1281,3.286,1282,1.681,1283,1.681,1284,1.533,1285,3.286,1286,2.653,1287,1.681,1288,1.681,1289,4.316,1290,1.681,1291,1.681,1292,1.681,1293,3.286,1294,1.681,1295,1.533,1296,3.286,1297,1.681,1298,1.681,1299,3.286,1300,1.681,1301,1.681,1302,1.681,1303,3.286,1304,1.681,1305,1.681,1306,2.653,1307,3.286,1308,1.681,1309,1.681,1310,1.681,1311,1.681,1312,1.681,1313,1.681,1314,1.681,1315,1.681,1316,3.286,1317,1.681,1318,1.681,1319,3.286,1320,1.681,1321,1.533,1322,3.286,1323,1.681,1324,1.681,1325,1.681,1326,3.286,1327,1.681,1328,1.681,1329,1.681,1330,3.286,1331,1.681,1332,1.681,1333,1.681,1334,3.286,1335,1.681,1336,1.879,1337,4.26,1338,3.439,1339,5.596,1340,2.179,1341,4.591,1342,3.439,1343,2.965,1344,2.179,1345,2.965,1346,2.653,1347,2.179,1348,2.965,1349,2.965,1350,2.179,1351,2.179,1352,2.179,1353,2.179,1354,2.179,1355,3.439,1356,4.838,1357,2.965,1358,4.26,1359,2.179,1360,3.439,1361,2.179,1362,2.179,1363,2.179,1364,2.179,1365,2.179,1366,1.879,1367,1.879,1368,1.879,1369,1.879,1370,2.179,1371,1.879,1372,2.179,1373,2.179,1374,2.179,1375,4.171,1376,3.439,1377,2.179,1378,2.179,1379,2.179,1380,2.179,1381,2.179,1382,2.179,1383,2.179,1384,2.179,1385,2.179,1386,4.26,1387,4.26,1388,2.179,1389,2.179,1390,2.179,1391,2.179,1392,2.179,1393,2.179,1394,2.179,1395,2.179,1396,2.179,1397,2.179,1398,2.179,1399,2.179,1400,4.26,1401,2.179,1402,2.179,1403,3.439]],["title/injectables/LeaderboardService.html",[56,1.269,1341,2.65]],["body/injectables/LeaderboardService.html",[0,0.197,3,0.243,4,0.243,5,0.215,11,0.3,12,0.472,15,0.261,16,0.018,17,0.553,18,0.453,19,0.453,20,0.353,27,0.243,35,0.014,36,0.014,56,2.17,58,2.83,64,3.916,65,1.204,72,1.252,73,3.01,74,4.07,77,3.425,79,0.949,80,0.661,81,0.949,88,0.949,89,3.118,113,3.642,114,3.642,117,3.642,118,2.899,120,2.621,121,1.252,124,2.83,125,0.861,126,3.01,128,2.527,130,2.67,131,3.01,132,2.67,133,2.527,135,1.37,138,1.877,145,3.01,175,1.093,476,1.877,1341,4.53,1348,6.203,1404,4.587,1405,5.321,1406,5.321,1407,6.439,1408,5.321,1409,5.321]],["title/components/LoginComponent.html",[154,0.468,264,0.97]],["body/components/LoginComponent.html",[0,0.19,3,0.135,4,0.135,5,0.119,7,0.477,11,0.166,12,0.317,15,0.208,16,0.018,17,0.45,18,0.251,19,0.251,20,0.307,22,1.001,27,0.135,35,0.01,36,0.01,60,1.679,61,1.263,65,0.81,72,1.208,79,0.526,80,0.637,81,0.526,84,2.056,85,2.028,86,1.95,88,1.074,105,1.679,112,1.09,121,1.024,125,0.477,134,1.019,135,0.759,138,1.528,142,0.793,154,0.748,155,0.793,156,1.333,157,0.949,158,0.949,159,0.949,160,0.949,164,0.829,165,2.421,166,2.314,167,1.394,169,1.394,175,1.237,179,4.02,184,1.679,185,1.762,187,3.733,189,0.949,209,0.949,228,0.867,230,2.449,233,2.091,234,2.303,235,1.04,236,2.193,238,2.508,239,2.126,241,0.949,242,1.394,243,1.394,244,1.821,245,0.949,246,0.949,247,0.759,248,0.949,249,0.759,250,0.949,251,0.759,252,0.949,253,0.759,254,1.019,255,1.394,256,0.759,257,0.949,258,0.759,259,0.949,260,0.759,261,0.949,262,0.759,263,0.949,264,1.621,265,0.949,266,0.759,267,0.867,268,1.394,269,0.759,270,0.793,271,0.949,272,0.759,273,0.949,274,0.759,275,0.759,276,0.949,277,0.759,278,0.949,279,0.759,280,0.949,281,0.759,282,0.949,283,0.949,284,0.949,309,1.4,349,2.811,358,3.339,360,4.701,392,1.09,459,1.601,464,2.449,476,1.04,477,1.2,482,1.2,490,1.143,495,1.4,496,3.204,497,3.204,498,3.204,499,1.327,500,3.204,501,1.479,502,2.193,503,2.336,504,2.547,505,3.008,506,1.99,507,1.528,508,1.679,509,2.303,510,1.568,511,1.4,512,2.195,514,1.479,515,1.568,516,1.568,517,1.568,518,1.568,519,1.568,520,1.327,521,2.303,522,1.479,523,1.09,524,1.09,525,1.2,526,1.2,529,1.95,530,1.479,561,1.781,562,3.005,569,3.339,570,4.09,576,1.762,600,3.462,602,3.097,619,3.204,640,1.479,644,3.199,708,2.273,727,1.261,740,2.056,742,1.852,753,1.261,754,1.852,755,1.261,756,1.261,757,1.4,764,1.261,794,3.984,796,3.726,812,3.008,819,3.958,821,3.339,828,2.303,831,4.431,838,3.979,839,3.339,840,3.339,841,3.332,851,3.199,856,2.273,858,2.273,887,3.339,888,3.339,890,2.073,893,1.914,894,3.61,895,2.273,896,2.273,897,2.811,898,2.273,899,2.073,900,2.273,901,2.273,902,2.273,903,1.568,904,2.273,905,2.273,906,2.273,907,3.046,908,2.273,909,3.339,910,2.073,911,2.273,939,2.616,972,4.362,1028,2.173,1034,2.449,1167,2.616,1366,2.541,1367,2.541,1368,2.541,1369,2.541,1410,2.541,1411,5.131,1412,4.329,1413,6.024,1414,2.947,1415,4.329,1416,3.733,1417,4.329,1418,4.329,1419,4.329,1420,2.947,1421,4.329,1422,2.947,1423,4.329,1424,4.329,1425,4.329,1426,3.733,1427,4.329,1428,3.733,1429,4.329,1430,4.329,1431,4.329,1432,4.329,1433,2.947,1434,2.947,1435,2.947,1436,2.947,1437,2.541,1438,2.947,1439,2.947,1440,2.947,1441,2.947,1442,2.947,1443,2.947,1444,2.947,1445,2.947,1446,3.733,1447,2.947]],["title/guards/LoginGuard.html",[353,2.65,912,2.906]],["body/guards/LoginGuard.html",[0,0.191,3,0.235,4,0.235,5,0.209,11,0.29,15,0.209,16,0.018,20,0.263,27,0.235,35,0.014,36,0.014,44,2.57,45,2.409,56,2.128,65,1.181,79,0.919,80,0.64,81,0.919,88,1.126,89,3.074,121,1.16,125,0.833,128,2.446,132,2.586,133,2.446,134,1.486,138,2.228,175,1.5,205,3.074,207,2.097,209,1.659,213,2.097,353,4.442,359,5.632,360,4.1,387,2.998,396,1.998,469,3.204,564,2.92,710,3.571,913,3.974,916,4.442,917,6.135,918,6.135,919,6.135,923,5.443,924,5.886,925,4.442,926,3.345,1052,3.974,1072,5.266,1448,4.442,1449,5.152,1450,6.314,1451,6.314,1452,5.443]],["title/classes/LoginUser.html",[0,0.139,812,2.004]],["body/classes/LoginUser.html",[0,0.261,2,1.242,3,0.193,4,0.193,5,0.171,7,0.683,10,1.962,11,0.238,12,0.407,15,0.225,16,0.018,17,0.81,18,0.473,19,0.473,20,0.284,27,0.302,28,0.717,29,1.299,30,1.359,32,1.422,33,1.449,34,1.237,35,0.012,36,0.012,80,0.773,175,1.5,184,2.156,227,1.9,456,2.245,460,2.004,584,1.636,602,2.379,704,2.691,789,2.958,790,2.741,791,3.913,792,2.791,793,2.741,794,3.997,795,3.759,796,3.772,797,4.264,798,2.872,800,4.372,801,4.834,803,3.759,806,3.913,809,2.969,810,2.969,811,2.958,812,3.517,1453,4.22,1454,4.22]],["title/components/MasterAnswerComponent.html",[154,0.468,266,0.97]],["body/components/MasterAnswerComponent.html",[0,0.144,3,0.178,4,0.178,5,0.158,11,0.22,12,0.386,13,2.254,15,0.271,16,0.018,17,0.621,18,0.545,19,0.545,20,0.352,22,1.178,27,0.178,33,0.8,35,0.012,36,0.012,37,1.777,51,2.109,61,0.959,65,0.986,72,1.407,79,1.258,80,0.742,81,0.695,85,1.698,88,0.695,105,2.044,121,1.088,125,0.63,134,1.241,135,1.003,154,0.876,155,1.049,156,1.623,157,1.254,158,1.254,159,1.254,160,1.254,164,1.096,165,2.495,166,2.385,167,1.698,169,1.698,189,1.254,209,1.254,228,1.146,241,1.254,242,1.698,243,1.698,244,2.062,245,1.254,246,1.254,247,1.003,248,1.254,249,1.003,250,1.254,251,1.003,252,1.254,253,1.003,254,1.241,255,1.698,256,1.003,257,1.254,258,1.003,259,1.254,260,1.003,261,1.254,262,1.003,263,1.254,264,1.003,265,1.254,266,1.648,267,2.111,268,1.698,269,1.003,270,1.049,271,1.254,272,1.003,273,1.254,274,1.003,275,1.003,276,1.254,277,1.003,278,1.254,279,1.003,280,1.254,281,1.003,282,1.254,283,1.254,284,1.254,324,4.961,395,1.586,396,2.044,427,2.691,431,2.674,434,3.018,475,1.85,477,1.586,482,1.586,499,2.374,564,3.068,565,3.406,576,2.146,577,2.204,642,1.955,646,1.955,792,2.646,828,2.804,927,4.545,965,2.646,1165,3.359,1167,3.186,1343,4.545,1455,6.079,1456,3.005,1457,5.152,1458,4.545,1459,5.976,1460,5.976,1461,3.896,1462,5.272,1463,3.359,1464,3.896,1465,3.896,1466,3.896,1467,3.896,1468,3.359,1469,3.896,1470,3.359,1471,5.272,1472,3.896,1473,3.896,1474,5.272,1475,3.896]],["title/classes/NewAnswer.html",[0,0.139,53,2.276]],["body/classes/NewAnswer.html",[0,0.242,2,1.376,3,0.214,4,0.214,5,0.189,7,0.756,10,2.305,11,0.264,12,0.435,15,0.309,16,0.018,17,0.794,18,0.585,19,0.635,20,0.35,26,4.242,27,0.298,28,0.795,29,1.439,30,1.506,31,2,32,1.576,33,0.96,34,0.875,35,0.013,36,0.013,37,2.644,38,3.29,39,4.005,40,4.836,44,2.798,45,2.426,47,4.154,48,5.302,50,2.559,51,2.305,53,3.948,54,3.591,55,2.347,1476,4.676,1477,4.676,1478,4.676,1479,4.676]],["title/classes/NewQuestion.html",[0,0.139,1480,2.276]],["body/classes/NewQuestion.html",[0,0.246,2,1.436,3,0.223,4,0.223,5,0.198,7,0.789,10,2.351,11,0.275,12,0.447,13,2.507,15,0.309,16,0.018,17,0.799,18,0.567,19,0.594,20,0.34,27,0.304,28,0.829,29,1.502,30,1.572,31,2.088,32,1.645,33,1.002,34,0.913,35,0.014,36,0.014,37,2.245,50,2.779,51,2.351,55,2.45,85,1.572,112,1.805,941,3.344,1480,3.69,1481,3.434,1482,4.881,1483,4.688,1484,4.881,1485,4.881,1486,5.14,1487,5.14,1488,2.949]],["title/classes/NewQuestionAnswer.html",[0,0.139,1489,2.906]],["body/classes/NewQuestionAnswer.html",[0,0.198,2,1.572,3,0.244,4,0.244,5,0.216,7,0.864,10,1.885,11,0.301,12,0.473,13,2.486,15,0.292,16,0.018,17,0.749,18,0.59,19,0.59,20,0.367,27,0.244,35,0.014,36,0.014,37,2.555,39,3.923,44,2.627,47,3.9,50,2.718,205,2.907,941,3.239,1483,4.541,1489,4.979,1490,4.606,1491,5.343,1492,5.343,1493,5.343,1494,6.455,1495,5.343,1496,5.343]],["title/classes/Question.html",[0,0.139,50,1.329]],["body/classes/Question.html",[0,0.243,2,1.395,3,0.216,4,0.216,5,0.192,7,0.766,10,2.32,11,0.267,12,0.439,13,2.491,15,0.311,16,0.018,17,0.799,18,0.606,19,0.619,20,0.363,27,0.3,28,1.018,29,1.845,30,2.117,31,2.564,32,2.215,33,1.231,34,1.121,35,0.013,36,0.013,37,2.215,50,2.777,51,2.32,55,2.378,112,1.752,941,3.299,1480,2.863,1481,3.334,1483,4.625,1486,5.07,1487,5.07,1488,2.863,1497,4.739,1498,4.739,1499,4.739,1500,4.739,1501,4.739]],["title/injectables/QuestionService.html",[56,1.269,563,2.131]],["body/injectables/QuestionService.html",[0,0.136,3,0.168,4,0.168,5,0.206,7,0.596,11,0.208,12,0.372,15,0.294,16,0.018,17,0.705,18,0.494,19,0.314,20,0.366,22,0.962,27,0.168,28,1.063,29,1.562,35,0.011,36,0.011,50,2.761,56,1.711,58,1.96,60,1.968,61,1.25,63,3.067,64,3.285,65,0.95,72,1.367,73,2.085,74,3.539,76,2.41,77,3.49,78,2.871,79,1.239,80,0.863,81,1.239,84,2.41,85,1.87,87,2.286,88,1.33,89,3.396,108,2.286,111,2.7,113,2.871,114,3.285,117,2.871,118,2.286,120,2.066,121,1.152,122,2.393,123,3.781,124,1.96,125,0.596,126,2.085,127,2.593,128,1.75,130,1.85,131,2.085,132,1.85,133,1.75,134,1.636,135,0.949,138,2.452,139,2.843,141,3.285,142,1.563,143,3.067,144,2.066,145,3.712,389,1.66,414,4.377,417,4.377,468,3.916,548,4.278,563,2.871,635,2.393,644,2.871,779,3.916,941,2.548,1195,2.843,1480,4.199,1488,3.509,1502,3.178,1503,5.076,1504,5.076,1505,5.076,1506,5.076,1507,4.377,1508,6.257,1509,5.076,1510,3.686,1511,5.076,1512,5.807,1513,3.686,1514,5.076,1515,3.686,1516,5.076,1517,3.686,1518,5.076,1519,3.686,1520,5.076,1521,3.686,1522,5.076,1523,3.686,1524,3.686,1525,3.686,1526,5.076,1527,3.686,1528,6.257,1529,5.076,1530,3.686,1531,3.686,1532,3.686,1533,3.686,1534,3.686,1535,3.686,1536,3.686,1537,3.686,1538,3.686,1539,3.686,1540,3.686,1541,2.843,1542,3.686]],["title/classes/Quiz.html",[0,0.139,22,0.579]],["body/classes/Quiz.html",[0,0.193,2,1.126,3,0.175,4,0.175,5,0.155,7,1.155,10,1.838,11,0.216,12,0.382,15,0.312,16,0.018,17,0.8,18,0.634,19,0.634,20,0.38,22,1.208,27,0.238,28,0.885,29,1.603,30,1.907,31,2.228,32,1.995,33,1.518,34,1.336,35,0.012,36,0.012,44,2.41,45,2.089,51,2.089,80,0.872,93,4.567,118,2.345,389,3.16,577,3.349,580,3.841,584,2.296,704,2.587,766,2.485,767,2.952,768,6.051,769,4.472,770,6.051,774,3.845,779,4.567,780,4.166,781,4.166,782,5.105,784,5.105,786,5.105,787,5.105,788,4.318,1543,3.827,1544,3.827,1545,3.827,1546,3.827,1547,3.827,1548,3.827,1549,3.827,1550,3.827,1551,3.827,1552,3.827,1553,3.827,1554,3.827]],["title/components/QuizAnswerComponent.html",[154,0.468,269,0.97]],["body/components/QuizAnswerComponent.html",[0,0.067,3,0.083,4,0.083,5,0.074,7,0.294,8,2.281,11,0.102,12,0.319,13,0.613,14,0.641,15,0.277,16,0.018,17,0.392,18,0.515,19,0.538,20,0.366,22,1.134,23,2.293,27,0.083,28,0.309,33,0.373,34,1.131,35,0.011,36,0.007,37,2.086,39,2.317,44,2.099,45,2.074,50,1.92,51,1.049,57,3.42,60,1.153,61,0.928,63,3.653,65,0.556,72,0.888,79,0.673,80,0.597,81,0.324,84,1.412,85,1.66,88,0.92,102,2.006,105,1.153,111,2.743,112,1.099,119,1.681,120,1.21,121,1.092,125,0.294,129,1.18,134,1.214,135,0.468,142,0.8,154,0.73,155,0.489,156,0.915,157,0.585,158,0.585,159,0.585,160,0.585,164,0.512,165,2.251,166,2.152,167,0.957,169,0.957,175,1.403,184,1.153,188,1.028,189,1.66,205,2.451,207,1.21,209,0.585,213,1.773,228,0.535,230,3.079,233,2.173,234,1.581,235,0.641,236,1.689,238,1.537,239,1.331,241,0.585,242,0.957,243,0.957,244,1.547,245,0.585,246,0.585,247,0.468,248,0.585,249,0.468,250,0.585,251,0.468,252,0.585,253,0.468,254,0.7,255,0.957,256,0.468,257,0.585,258,0.468,259,0.585,260,0.468,261,0.585,262,0.468,263,0.585,264,0.468,265,0.585,266,0.468,267,0.535,268,0.957,269,1.121,270,0.489,271,0.585,272,0.468,273,0.585,274,0.468,275,0.468,276,0.585,277,0.468,278,0.585,279,0.468,280,0.585,281,0.468,282,0.585,283,0.585,284,0.585,299,1.93,309,0.863,317,5.079,392,0.672,395,0.74,396,1.153,427,1.698,431,2,434,2.657,436,1.402,438,1.796,443,3.687,452,2.133,457,1.028,459,2.173,463,1.681,464,2.464,469,1.339,475,0.863,476,0.641,477,2.311,478,1.098,479,3.179,482,0.74,490,2.11,502,1.462,503,2,504,1.339,506,0.705,507,1.331,508,1.689,523,1.099,524,0.672,525,1.535,526,0.74,528,1.18,529,1.339,538,2.293,541,3.38,542,2.653,543,3.38,544,2.653,545,3.38,547,2.646,548,3.551,549,3.38,550,3.289,551,3.38,552,3.829,553,2.133,554,3.829,556,3.995,557,3.349,558,3.628,559,2.091,560,3.829,563,3.502,564,2.206,565,2.449,566,3.034,567,3.692,569,3.36,573,1.93,576,2.657,577,3.573,579,3.065,580,3.944,584,2.202,587,2.091,589,2.293,591,2.633,593,2.322,594,1.796,596,3.38,597,2.653,599,2.653,600,2.555,602,1.272,608,1.098,612,2.317,616,1.93,618,3.817,619,2.317,627,2.091,631,1.93,632,2.653,633,1.279,634,1.279,635,1.18,636,1.028,637,1.098,638,1.098,641,1.028,642,0.912,643,1.402,644,1.028,646,0.912,648,1.402,650,1.279,651,1.279,653,1.279,654,1.279,655,2.091,656,1.279,657,1.279,658,1.279,659,1.279,660,1.279,661,1.279,664,1.279,665,1.279,666,2.653,667,2.091,668,1.279,669,1.279,670,1.279,671,1.18,672,2.091,673,4.134,674,1.279,675,1.279,676,1.279,677,1.402,678,1.279,679,1.567,680,1.279,681,1.279,682,2.653,683,2.091,684,2.091,693,1.279,694,2.653,695,2.091,698,1.681,699,1.279,700,2.091,701,1.279,702,1.279,703,2.279,704,0.74,707,1.93,710,1.681,711,2.091,712,2.091,713,2.563,714,3.38,715,1.18,716,1.402,717,2.293,718,2.293,719,1.028,720,1.028,721,1.402,722,1.402,723,1.098,724,0.967,725,1.402,726,1.098,727,0.778,728,1.098,729,0.967,730,0.967,731,1.18,732,1.279,733,2.717,734,2.091,735,2.133,736,1.279,737,1.279,738,1.402,739,0.967,740,1.412,741,1.402,742,1.613,743,1.098,744,1.492,745,1.279,746,1.279,747,2.006,748,1.492,749,1.18,750,1.098,751,1.028,752,1.796,753,0.778,754,1.272,755,0.778,756,0.778,757,0.863,758,1.279,759,1.279,760,1.279,761,1.279,762,1.098,763,1.18,764,0.778,765,1.279,792,1.492,828,1.581,831,2.091,832,2.091,833,2.091,836,2.563,941,1.492,965,1.492,973,2.293,974,2.563,978,2.653,983,2.279,1014,3.119,1021,3.816,1022,2.091,1023,1.492,1026,1.18,1028,2.186,1034,1.681,1053,1.18,1054,1.18,1079,2.293,1112,1.279,1116,2.563,1167,1.796,1180,2.293,1346,2.293,1456,1.402,1457,3.251,1458,2.563,1463,1.567,1555,4.084,1556,3.628,1557,3.628,1558,3.978,1559,1.402,1560,2.973,1561,1.818,1562,1.818,1563,5.157,1564,1.818,1565,2.563,1566,2.973,1567,2.563,1568,2.563,1569,2.293,1570,2.973,1571,2.563,1572,1.818,1573,2.973,1574,1.818,1575,2.973,1576,2.973,1577,2.293,1578,2.293,1579,1.818,1580,2.973,1581,2.973,1582,2.563,1583,2.973,1584,1.818,1585,2.563,1586,1.818,1587,1.818,1588,1.818,1589,2.091,1590,1.818,1591,1.818,1592,1.818,1593,1.818,1594,1.818,1595,1.818,1596,1.818,1597,1.818,1598,1.818,1599,1.818,1600,1.818,1601,1.818,1602,1.818,1603,1.402,1604,1.402,1605,1.402,1606,1.402,1607,1.402,1608,1.402,1609,1.402,1610,1.402,1611,1.402,1612,1.402,1613,1.402,1614,1.402,1615,1.402,1616,2.091,1617,2.293]],["title/components/QuizImageComponent.html",[154,0.468,272,0.97]],["body/components/QuizImageComponent.html",[0,0.072,3,0.089,4,0.089,5,0.079,8,1.876,11,0.11,12,0.23,13,0.656,14,0.687,15,0.278,16,0.018,17,0.202,18,0.512,19,0.548,20,0.369,22,1.143,27,0.089,28,0.534,33,0.4,34,0.931,35,0.014,36,0.007,37,1.887,39,1.671,44,2.166,45,1.756,50,1.756,51,1.394,57,3.297,60,1.218,61,0.479,63,3.637,65,0.588,72,0.458,76,1.492,79,0.705,80,0.491,81,0.347,85,1.714,88,0.949,102,2.647,105,1.218,111,2.831,112,1.162,121,1.112,125,0.315,129,1.263,134,1.253,135,0.501,142,0.846,154,0.696,155,0.524,156,0.967,157,0.626,158,0.626,159,0.626,160,0.626,164,0.548,165,2.279,166,2.178,167,1.012,169,1.012,175,1.444,184,1.218,185,2.516,189,1.714,205,2.397,207,1.279,209,0.626,213,1.846,228,0.573,230,3.011,233,2.155,234,1.035,235,0.687,236,1.758,238,1.394,239,0.687,241,0.626,242,1.012,243,1.012,244,1.602,245,0.626,246,0.626,247,0.501,248,0.626,249,0.501,250,0.626,251,0.501,252,0.626,253,0.501,254,0.739,255,1.012,256,0.501,257,0.626,258,0.501,259,0.626,260,0.501,261,0.626,262,0.501,263,0.626,264,0.501,265,0.626,266,0.501,267,0.573,268,1.012,269,0.501,270,0.524,271,0.626,272,1.167,273,0.626,274,0.501,275,0.501,276,0.626,277,0.501,278,0.626,279,0.501,280,0.626,281,0.501,282,0.626,283,0.626,284,0.626,288,1.671,299,2.04,309,0.924,340,5.108,392,0.719,395,0.792,431,2.26,434,2.45,438,1.898,443,2.04,451,2.423,452,2.235,456,1.671,459,1.461,464,1.777,469,1.415,475,0.924,476,0.687,477,2.279,479,2.858,490,1.532,502,1.532,503,1.758,504,1.415,506,0.754,507,1.109,508,2.171,512,1.69,523,1.84,524,0.719,525,1.608,526,0.792,529,1.415,541,2.78,542,2.78,543,2.78,544,2.78,545,3.501,547,2.397,548,3.007,549,2.78,550,3.007,551,2.78,552,3.94,553,2.235,554,3.501,556,3.744,557,3.784,558,3.744,559,2.21,560,3.94,563,3.168,564,2.277,565,2.154,566,2.671,567,3.643,573,2.04,576,2.372,577,3.011,578,3.498,579,2.21,580,3.892,581,2.21,582,2.708,583,2.708,584,1.93,585,2.04,587,2.21,588,2.708,589,2.423,591,1.898,592,2.423,593,1.415,594,1.898,596,3.94,597,2.78,599,2.78,600,2.647,602,1.344,618,3.892,619,2.412,627,2.21,631,2.04,633,1.369,634,1.369,635,1.263,636,1.101,637,1.176,638,1.176,641,1.101,642,0.976,646,0.976,650,1.369,651,1.369,653,1.369,655,2.21,656,1.369,657,1.369,658,1.369,659,1.369,660,1.369,661,1.369,664,1.369,665,1.369,666,2.78,667,2.21,668,1.369,669,1.369,670,1.369,671,1.263,672,2.21,673,3.501,675,1.369,676,1.369,677,1.501,678,1.369,680,1.369,681,1.369,682,2.78,683,2.21,684,2.21,693,1.369,694,2.78,695,2.21,698,1.777,699,1.369,700,2.21,701,1.369,702,1.369,703,2.387,704,1.608,707,2.04,710,1.777,711,2.21,712,2.21,714,3.191,715,1.263,719,1.101,720,1.101,724,1.035,727,0.832,728,2.387,729,1.035,730,1.671,731,1.263,732,1.369,733,3.011,734,2.21,735,1.777,736,1.369,737,1.369,740,0.924,742,1.344,744,0.976,747,2.101,748,1.577,749,1.263,750,1.176,751,1.101,752,1.898,753,0.832,754,1.344,755,0.832,756,0.832,757,0.924,758,1.369,759,1.369,760,1.369,761,1.369,762,1.176,763,1.263,764,1.94,765,2.78,851,1.101,897,1.263,899,1.369,965,1.577,978,1.369,980,1.677,983,2.387,1014,3.636,1021,3.908,1022,2.21,1023,1.577,1026,2.566,1028,2.925,1053,1.263,1054,1.263,1077,2.708,1112,1.369,1229,1.369,1230,1.369,1231,1.369,1232,1.369,1242,2.423,1243,2.423,1555,4.107,1556,4.1,1557,3.744,1558,4.105,1559,1.501,1577,2.423,1578,2.423,1585,2.708,1589,3.744,1603,1.501,1604,1.501,1605,1.501,1606,1.501,1607,1.501,1608,1.501,1609,1.501,1610,1.501,1611,1.501,1612,1.501,1613,1.501,1614,1.501,1615,1.501,1616,2.21,1617,2.423,1618,1.677,1619,3.951,1620,3.141,1621,3.141,1622,1.946,1623,1.946,1624,3.141,1625,2.708,1626,3.91,1627,1.946,1628,3.141,1629,3.141,1630,3.141,1631,3.141,1632,3.141,1633,1.946,1634,1.946,1635,2.945,1636,2.945,1637,2.708,1638,1.946,1639,2.04,1640,1.946,1641,1.946,1642,1.946,1643,1.946,1644,1.946,1645,1.946,1646,1.946,1647,1.946,1648,1.946,1649,1.946,1650,1.946,1651,1.946,1652,1.946,1653,1.946,1654,1.946,1655,1.946,1656,1.946,1657,1.677,1658,1.946,1659,1.946,1660,1.946,1661,1.946,1662,1.946]],["title/components/QuizInfoComponent.html",[154,0.468,274,0.97]],["body/components/QuizInfoComponent.html",[0,0.102,3,0.226,4,0.127,5,0.112,7,0.95,11,0.156,12,0.402,15,0.29,16,0.018,18,0.236,19,0.352,20,0.368,22,1.186,27,0.127,28,1.084,33,1.016,34,0.774,35,0.009,36,0.009,51,0.978,60,1.604,61,0.682,65,0.774,72,1.382,79,0.883,80,0.815,81,0.494,88,0.883,90,2.2,105,1.604,106,2.138,121,0.998,125,0.448,134,1.292,135,0.713,142,0.746,154,0.871,155,0.746,156,1.273,157,0.892,158,0.892,159,0.892,160,0.892,164,0.78,165,2.403,166,2.297,167,1.332,169,1.332,175,0.849,179,3.861,182,1.77,184,1.604,185,2.507,188,2.34,189,1.594,209,0.892,222,3.817,228,0.816,235,0.978,236,2.128,238,2.173,239,1.46,241,0.892,242,1.332,243,1.332,244,1.767,245,0.892,246,0.892,247,0.713,248,0.892,249,0.713,250,0.892,251,0.713,252,0.892,253,0.713,254,0.974,255,1.332,256,0.713,257,0.892,258,0.713,259,0.892,260,0.713,261,0.892,262,0.713,263,0.892,264,0.713,265,0.892,266,0.713,267,0.816,268,1.332,269,0.713,270,0.746,271,0.892,272,0.713,273,0.892,274,1.413,275,0.713,276,0.892,277,0.713,278,0.892,279,0.713,280,0.892,281,0.713,282,0.892,283,0.892,284,0.892,320,5.114,373,2.138,382,2.2,387,2.788,389,3.019,392,1.025,395,1.128,396,1.604,427,2.229,431,2.544,434,2.856,438,2.5,451,3.191,452,2.799,459,1.83,464,2.34,475,1.316,477,2.507,482,1.684,507,0.978,508,1.919,512,2.117,514,1.391,515,1.474,516,1.474,517,1.474,520,1.248,522,1.391,523,2.029,524,1.025,525,1.128,526,1.128,529,1.863,553,2.799,557,4.26,562,2.92,564,2.73,565,2.606,571,2.91,572,2.91,587,2.91,591,2.5,592,3.191,593,1.863,608,3.316,618,3.856,632,3.482,640,1.391,641,1.568,642,1.391,646,1.391,654,2.91,728,2.5,729,1.474,730,2.2,733,2.34,739,2.2,742,1.186,744,1.391,745,1.95,746,1.95,748,2.076,749,1.8,750,1.675,753,1.186,754,1.77,755,1.186,756,1.186,762,1.675,763,1.8,764,2.117,774,2.686,780,2.91,781,2.91,788,3.214,792,2.076,826,3.817,828,1.474,893,1.8,958,2.138,959,4.267,960,3.566,962,1.95,964,2.389,965,2.076,967,3.566,968,2.389,970,2.389,976,3.566,979,2.389,982,2.138,997,2.389,998,2.389,1009,2.389,1023,2.076,1034,2.799,1177,3.566,1182,2.91,1183,2.686,1237,2.138,1241,2.389,1242,3.191,1243,3.191,1470,2.389,1555,4.112,1577,3.191,1578,3.191,1625,3.566,1635,3.564,1636,3.564,1637,3.566,1639,2.686,1663,5.872,1664,4.949,1665,5.872,1666,6.159,1667,4.136,1668,3.566,1669,2.771,1670,4.136,1671,4.136,1672,4.136,1673,2.771,1674,4.136,1675,3.191,1676,4.136,1677,4.136,1678,3.566,1679,2.771,1680,2.771,1681,2.771,1682,2.771,1683,2.771,1684,2.771,1685,2.771,1686,2.771,1687,2.771,1688,2.771,1689,2.771,1690,2.771,1691,2.771,1692,2.771,1693,2.771,1694,2.771,1695,2.771,1696,4.136,1697,2.771,1698,2.771,1699,2.771,1700,4.136,1701,2.771,1702,2.771,1703,2.771,1704,2.771,1705,2.771,1706,2.771,1707,2.771,1708,2.771,1709,2.771,1710,4.136,1711,2.771,1712,4.136,1713,2.771,1714,2.771,1715,2.771,1716,2.771,1717,2.771,1718,2.771,1719,2.771,1720,2.771,1721,2.771]],["title/components/QuizResultComponent.html",[154,0.468,275,0.97]],["body/components/QuizResultComponent.html",[0,0.148,3,0.183,4,0.183,5,0.162,11,0.225,12,0.474,13,2.392,14,2.505,15,0.273,16,0.018,20,0.354,22,1.167,27,0.183,35,0.012,36,0.012,61,0.985,65,1.004,72,1.589,79,1.204,80,0.752,81,0.713,88,0.713,102,3.887,118,2.416,121,0.912,125,0.647,134,0.941,135,1.03,154,0.908,155,1.077,156,1.652,157,1.288,158,1.288,159,1.288,160,1.288,164,1.126,165,2.501,166,2.391,167,1.728,169,1.728,184,2.081,185,2.184,188,3.035,189,1.728,209,1.288,228,1.177,241,1.288,242,1.728,243,1.728,244,2.084,245,1.288,246,1.288,247,1.03,248,1.288,249,1.03,250,1.288,251,1.03,252,1.288,253,1.03,254,1.263,255,1.728,256,1.03,257,1.288,258,1.03,259,1.288,260,1.03,261,1.288,262,1.03,263,1.288,264,1.03,265,1.288,266,1.03,267,1.177,268,1.728,269,1.03,270,1.077,271,1.288,272,1.03,273,1.288,274,1.03,275,1.666,276,1.288,277,1.03,278,1.288,279,1.03,280,1.288,281,1.03,282,1.288,283,1.288,284,1.288,335,4.994,396,2.081,427,2.727,431,2.798,437,4.139,553,3.426,564,3.037,565,3.3,571,3.775,572,3.775,594,3.243,641,2.262,642,2.007,644,3.035,962,2.814,965,2.693,1079,4.139,1183,3.485,1468,3.448,1555,4.016,1635,3.485,1636,3.485,1639,3.485,1668,4.627,1722,3.448,1723,6.056,1724,5.366,1725,5.366,1726,5.366,1727,4,1728,5.366,1729,5.366,1730,5.366,1731,5.366,1732,5.366,1733,4,1734,4,1735,4,1736,4,1737,4,1738,4,1739,4,1740,4]],["title/components/QuizSearchComponent.html",[154,0.468,277,0.97]],["body/components/QuizSearchComponent.html",[0,0.156,1,2.706,3,0.098,4,0.098,5,0.087,8,1.997,9,3.651,11,0.12,12,0.248,13,1.417,14,1.484,15,0.244,16,0.018,17,0.222,18,0.358,19,0.444,20,0.283,22,1.167,27,0.098,28,1.103,34,1.128,35,0.011,36,0.008,61,0.526,65,0.633,72,1.228,79,0.853,80,0.594,81,0.604,84,1.608,86,2.154,87,1.525,88,0.604,89,2.154,90,1.801,105,1.855,108,2.796,120,2.258,121,1.025,125,0.346,134,1.228,135,0.55,142,0.575,154,0.806,155,0.575,156,1.042,157,1.09,158,0.688,159,0.688,160,0.688,164,0.601,165,2.315,166,2.212,167,1.09,169,1.09,175,1.458,176,2.046,182,2.579,185,1.947,188,2.706,189,1.354,207,1.378,209,0.688,213,0.87,228,0.629,233,2.051,235,0.754,238,2.595,239,0.754,241,0.688,242,1.09,243,1.09,244,1.54,245,0.688,246,0.688,247,0.55,248,0.688,249,0.55,250,0.688,251,0.55,252,0.688,253,0.55,254,0.797,255,1.09,256,0.55,257,0.688,258,0.55,259,0.688,260,0.55,261,0.688,262,0.55,263,0.688,264,0.55,265,0.688,266,0.55,267,0.629,268,1.09,269,0.55,270,0.575,271,0.688,272,0.55,273,0.688,274,0.55,275,0.55,276,0.688,277,1.428,278,0.688,279,0.55,280,0.688,281,0.55,282,0.688,283,0.688,284,0.688,288,1.801,327,4.09,382,1.801,387,1.608,392,0.79,395,0.87,396,1.313,404,3.99,406,2.611,420,1.503,427,1.894,431,2.151,434,2.687,459,1.555,460,1.015,463,1.915,469,2.796,474,1.648,475,1.015,476,0.754,477,1.712,482,0.87,484,2.731,490,0.828,494,2.611,495,2.272,499,1.525,502,2.787,503,2.816,506,1.313,507,1.195,511,1.608,520,1.525,523,2.698,524,0.79,529,0.962,530,1.072,562,2.825,564,2.487,565,2.863,570,2.198,571,2.382,572,2.382,576,2.258,581,2.382,585,3.603,593,2.154,608,1.291,640,1.072,642,1.072,646,1.072,697,2.382,698,1.209,719,1.915,720,1.209,723,1.291,724,1.801,726,1.291,727,1.448,729,1.136,730,1.801,739,1.801,740,1.997,742,1.799,743,1.291,744,2.11,747,1.136,748,1.072,751,1.915,752,2.046,753,1.448,754,2.047,755,0.914,756,0.914,757,1.015,764,3.107,769,2.382,774,2.198,798,1.947,818,2.046,828,1.801,903,2.951,926,1.387,939,2.046,941,1.699,962,1.503,965,2.401,972,2.611,982,1.648,983,1.291,992,2.611,993,2.611,1001,1.503,1010,1.648,1024,4.28,1028,3.026,1030,3.69,1033,2.382,1034,1.915,1075,2.611,1110,1.648,1161,2.919,1167,2.046,1168,4.125,1173,2.919,1181,2.611,1183,2.198,1202,1.842,1203,1.842,1204,1.842,1205,3.625,1206,1.842,1207,1.842,1208,1.842,1209,1.842,1210,1.842,1211,1.842,1212,2.919,1213,1.842,1227,2.919,1229,1.503,1230,1.503,1231,1.503,1232,1.503,1233,1.842,1235,1.842,1236,1.842,1237,1.648,1238,1.842,1239,1.842,1240,1.842,1244,1.648,1245,2.611,1246,1.648,1247,1.648,1248,1.648,1249,1.648,1250,1.648,1251,1.648,1252,1.648,1253,1.648,1254,1.648,1255,1.648,1256,1.648,1257,1.648,1258,1.648,1259,5.544,1260,1.648,1261,1.648,1262,5.512,1263,1.648,1264,1.648,1265,4.28,1266,5.512,1267,2.611,1268,1.648,1269,3.244,1270,1.648,1271,1.648,1272,1.503,1273,3.244,1274,2.611,1275,1.648,1276,1.503,1277,3.244,1278,1.648,1279,1.648,1280,1.648,1281,3.244,1282,1.648,1283,1.648,1284,1.503,1285,3.244,1286,2.611,1287,1.648,1288,1.648,1289,4.28,1290,1.648,1291,1.648,1292,1.648,1293,3.244,1294,1.648,1295,1.503,1296,3.244,1297,1.648,1298,1.648,1299,3.244,1300,1.648,1301,1.648,1302,1.648,1303,3.244,1304,1.648,1305,1.648,1306,2.611,1307,3.244,1308,1.648,1309,1.648,1310,1.648,1311,1.648,1312,1.648,1313,1.648,1314,1.648,1315,1.648,1316,3.244,1317,1.648,1318,1.648,1319,3.244,1320,1.648,1321,1.503,1322,3.244,1323,1.648,1324,1.648,1325,1.648,1326,3.244,1327,1.648,1328,1.648,1329,1.648,1330,3.244,1331,1.648,1332,1.648,1333,1.648,1334,3.244,1335,1.648,1349,2.919,1371,1.842,1555,3.288,1565,2.919,1635,2.198,1636,2.198,1639,2.198,1675,3.69,1741,1.842,1742,4.205,1743,3.386,1744,2.136,1745,3.386,1746,2.919,1747,2.136,1748,3.386,1749,3.386,1750,3.386,1751,4.125,1752,3.386,1753,3.386,1754,2.919,1755,3.386,1756,3.386,1757,3.386,1758,2.136,1759,2.919,1760,2.919,1761,2.919,1762,2.136,1763,2.136,1764,2.136,1765,2.136,1766,2.136,1767,2.136,1768,2.136,1769,2.136]],["title/injectables/QuizService.html",[56,1.269,434,1.533]],["body/injectables/QuizService.html",[0,0.122,3,0.15,4,0.15,5,0.133,7,0.532,11,0.185,12,0.343,13,2.268,14,2.22,15,0.294,16,0.018,17,0.796,18,0.28,19,0.28,20,0.37,22,1.195,27,0.15,28,1.274,29,1.832,33,0.962,35,0.01,36,0.01,56,1.579,58,1.749,60,1.817,61,1.154,64,3.088,65,0.877,72,1.285,73,1.86,74,3.366,76,2.225,77,3.346,78,2.651,79,1.249,80,0.87,81,1.249,84,2.225,85,1.916,86,2.11,88,1.358,89,3.406,108,2.68,112,2.2,113,2.651,114,3.558,117,2.651,118,2.11,120,1.907,121,1.111,122,2.135,123,3.299,124,1.749,125,0.532,126,1.86,127,2.313,128,1.561,130,1.65,131,1.86,132,1.65,133,1.561,134,1.691,135,0.846,138,2.506,139,2.536,141,2.651,142,1.261,143,2.832,144,1.907,145,3.96,176,2.832,388,3.297,389,3.03,395,1.338,434,1.907,450,3.297,618,4.157,644,2.651,766,4.085,954,3.614,1083,4.04,1195,2.536,1541,2.536,1557,3.297,1569,3.614,1760,4.04,1770,2.835,1771,4.686,1772,4.686,1773,4.686,1774,4.04,1775,5.951,1776,4.686,1777,5.951,1778,4.686,1779,3.288,1780,3.288,1781,3.288,1782,4.686,1783,3.288,1784,4.686,1785,4.686,1786,3.288,1787,4.686,1788,3.288,1789,4.686,1790,4.686,1791,3.288,1792,3.288,1793,3.614,1794,4.686,1795,3.288,1796,3.288,1797,4.686,1798,3.288,1799,4.686,1800,3.288,1801,4.686,1802,3.288,1803,4.686,1804,3.288,1805,3.288,1806,3.288,1807,3.288,1808,3.288,1809,3.288,1810,3.288,1811,3.288,1812,3.288,1813,4.04,1814,3.288,1815,3.288,1816,3.288,1817,3.288,1818,3.288,1819,3.288,1820,3.288,1821,3.288]],["title/components/QuizTypeinComponent.html",[154,0.468,279,0.97]],["body/components/QuizTypeinComponent.html",[0,0.067,3,0.083,4,0.083,5,0.074,8,1.794,11,0.103,12,0.218,13,0.614,14,0.643,15,0.274,16,0.018,17,0.189,18,0.501,19,0.538,20,0.365,22,1.128,27,0.083,28,0.506,33,0.374,34,1.063,35,0.013,36,0.007,37,2.231,39,2.321,44,2.102,45,1.923,50,2.076,51,1.051,57,3.082,61,0.449,63,3.555,65,0.557,72,0.429,79,0.674,80,0.677,81,0.325,84,2.072,85,1.83,86,1.965,88,0.921,89,1.342,102,2.01,105,2.346,111,3.218,112,1.102,120,1.776,121,1.093,125,0.295,129,1.184,135,0.469,142,0.802,154,0.77,155,0.491,156,0.917,157,0.587,158,0.587,159,0.587,160,0.587,164,0.513,165,2.252,166,2.153,167,0.959,169,0.959,175,1.477,182,2.705,185,2.314,188,1.685,189,1.663,205,2.325,207,1.213,209,0.587,213,1.776,228,0.536,230,2.921,233,2.175,234,1.585,235,0.643,236,1.692,238,1.54,239,1.333,241,0.587,242,0.959,243,0.959,244,1.549,245,0.587,246,0.587,247,0.469,248,0.587,249,0.469,250,0.587,251,0.469,252,0.587,253,0.469,254,0.701,255,0.959,256,0.469,257,0.587,258,0.469,259,0.587,260,0.469,261,0.587,262,0.469,263,0.587,264,0.469,265,0.587,266,0.469,267,0.536,268,0.959,269,0.469,270,0.491,271,0.587,272,0.469,273,0.587,274,0.469,275,0.469,276,0.587,277,0.469,278,0.587,279,1.123,280,0.587,281,0.469,282,0.587,283,0.587,284,0.587,299,1.935,309,0.866,331,5.059,392,0.674,395,0.742,427,0.821,431,2.002,434,2.463,443,3.353,452,1.031,457,2.468,459,1.397,463,2.468,469,1.965,475,0.866,476,0.643,477,2.218,479,3.055,490,2.113,502,1.465,503,1.692,504,1.342,506,0.707,507,1.333,508,1.692,523,1.102,524,0.674,525,1.538,526,0.742,528,1.184,529,1.342,541,3.385,542,2.658,543,2.658,544,2.658,545,3.385,547,2.325,548,3.555,549,3.385,550,3.293,551,3.833,552,4.359,553,2.137,554,3.833,556,3.633,557,2.834,558,3.633,559,2.096,560,3.833,563,3.216,564,2.331,565,2.452,566,3.11,567,3.639,573,1.935,576,2.463,577,3.216,578,2.298,579,2.096,580,3.656,584,2.113,585,1.935,593,2.725,594,1.8,596,2.658,597,2.658,599,2.658,600,2.559,602,1.275,603,2.569,618,3.947,619,2.321,627,2.096,631,1.935,632,1.282,633,1.282,634,1.282,635,1.184,636,1.031,637,1.101,638,2.283,641,1.031,642,0.915,646,0.915,650,1.282,651,1.282,653,1.282,655,2.096,656,1.282,657,1.282,658,1.282,659,1.282,660,1.282,661,1.282,664,1.282,665,2.658,666,2.658,667,2.096,668,1.282,669,1.282,670,1.282,671,1.184,672,2.096,673,3.833,675,1.282,676,1.282,678,1.282,680,1.282,681,1.282,682,2.658,683,2.096,684,2.096,693,1.282,694,2.658,695,2.096,697,3.07,698,1.685,699,1.282,700,2.096,701,1.282,702,1.282,703,2.283,704,0.742,707,1.935,710,1.685,711,2.096,712,2.096,714,3.385,715,1.184,716,1.406,717,2.298,718,2.298,719,1.031,720,1.031,721,1.406,722,1.406,723,1.101,724,0.97,725,1.406,726,1.101,727,0.78,728,1.101,729,0.97,730,0.97,731,1.184,732,1.282,733,2.721,734,2.096,735,2.137,736,1.282,737,1.282,738,1.406,739,0.97,740,1.415,741,1.406,742,1.616,743,1.101,744,1.495,745,1.282,746,1.282,747,2.01,748,1.495,749,1.184,750,1.101,751,1.031,752,1.8,753,0.78,754,1.275,755,0.78,756,0.78,757,0.866,758,1.282,759,1.282,760,1.282,761,1.282,762,1.101,763,1.184,764,0.78,765,1.282,841,1.184,851,1.685,903,1.585,965,1.495,978,2.658,983,2.283,1014,3.538,1021,4.023,1023,1.495,1026,2.454,1028,3.574,1030,2.298,1035,3.366,1053,1.184,1054,1.184,1112,1.282,1131,2.569,1134,2.569,1172,2.569,1182,2.096,1183,3.353,1346,2.298,1507,2.569,1555,4.068,1556,3.633,1557,3.999,1558,3.983,1559,1.406,1567,2.569,1568,2.569,1569,3.983,1571,2.569,1582,2.569,1589,2.096,1603,1.406,1604,1.406,1605,1.406,1606,1.406,1607,1.406,1608,1.406,1609,1.406,1610,1.406,1611,1.406,1612,1.406,1613,1.406,1614,1.406,1615,1.406,1616,2.096,1617,2.298,1626,2.569,1635,1.935,1636,1.935,1639,1.935,1657,1.572,1675,2.298,1751,3.762,1754,2.569,1759,2.569,1774,2.569,1822,1.572,1823,2.979,1824,3.779,1825,2.979,1826,2.979,1827,1.823,1828,1.823,1829,1.823,1830,2.979,1831,2.979,1832,2.979,1833,2.979,1834,2.979,1835,2.979,1836,1.823,1837,2.979,1838,1.823,1839,1.823,1840,2.979,1841,2.979,1842,1.823,1843,1.823,1844,1.823,1845,1.823,1846,1.823,1847,1.823,1848,1.823,1849,1.823,1850,1.823,1851,1.823,1852,1.823,1853,1.823,1854,1.823,1855,1.823,1856,1.823,1857,1.823,1858,1.823,1859,1.823,1860,1.823]],["title/components/RegistrationComponent.html",[154,0.468,281,0.97]],["body/components/RegistrationComponent.html",[0,0.097,3,0.119,4,0.119,5,0.106,7,0.422,11,0.147,12,0.29,15,0.193,16,0.018,18,0.406,19,0.222,20,0.348,22,0.962,27,0.119,34,0.74,35,0.009,36,0.009,45,0.921,47,1.577,61,0.643,65,0.74,72,0.614,76,1.878,77,1.388,79,0.465,80,0.711,81,0.465,85,2.317,87,1.78,88,1.25,102,2.103,120,1.062,121,1.023,125,0.422,134,0.931,138,2.125,142,1.064,154,0.777,155,0.702,156,1.217,157,0.84,158,0.84,159,0.84,160,0.84,164,0.735,165,2.384,166,2.279,167,1.273,169,1.273,175,1.284,179,3.964,182,1.691,184,1.012,189,0.84,200,3.409,205,1.175,209,0.84,228,0.768,232,3.05,233,1.969,234,2.103,235,1.395,236,2.498,238,2.573,239,2.125,241,0.84,242,1.273,243,1.273,244,1.715,245,0.84,246,0.84,247,0.672,248,0.84,249,0.672,250,0.84,251,0.672,252,0.84,253,0.672,254,0.931,255,1.273,256,0.672,257,0.84,258,0.672,259,0.84,260,0.672,261,0.84,262,0.672,263,0.84,264,0.672,265,0.84,266,0.672,267,0.768,268,1.273,269,0.672,270,0.702,271,0.84,272,0.672,273,0.84,274,0.672,275,0.672,276,0.84,277,0.672,278,0.84,279,0.672,280,0.84,281,1.371,282,1.842,283,0.84,284,0.84,309,1.239,358,4.414,360,2.568,392,0.965,459,1.765,463,2.237,476,0.921,482,1.062,490,1.012,495,1.878,496,3.043,497,3.043,498,3.043,499,2.149,500,3.043,501,1.31,502,2.065,503,2.219,504,2.398,505,2.832,506,1.851,507,1.395,508,1.851,509,2.103,510,1.388,511,1.239,512,2.576,514,1.984,515,2.103,516,2.103,517,2.103,518,2.103,519,2.103,520,1.78,521,2.832,522,1.984,523,1.462,524,1.462,525,1.609,526,1.609,530,1.31,561,1.577,562,2.923,570,4.498,600,3.043,602,3.028,619,3.727,640,1.31,674,1.836,703,1.577,704,1.062,727,1.117,740,2.267,742,1.691,750,1.577,753,1.117,754,1.691,755,1.117,756,1.117,757,1.239,764,1.117,789,2.103,794,3.765,795,1.577,796,3.552,797,4.063,798,2.737,803,2.884,819,4.969,821,3.05,822,5.392,823,5.392,831,2.782,837,2.013,838,4.873,839,3.05,840,3.05,841,3.716,842,3.358,844,3.409,845,3.409,849,2.25,851,3.918,852,2.25,854,2.25,856,2.013,858,2.013,860,2.25,862,2.25,863,2.25,873,2.25,874,2.25,875,2.25,876,2.25,877,2.25,887,3.05,888,3.05,889,3.409,890,1.836,891,3.05,893,1.695,894,3.358,895,2.013,896,2.013,897,2.568,898,2.013,899,1.836,900,2.013,901,2.013,902,2.013,903,1.388,904,2.013,905,2.013,906,2.013,907,2.782,908,2.013,909,3.05,910,1.836,911,2.013,986,2.013,1023,1.984,1033,1.836,1072,3.682,1073,2.25,1357,3.409,1446,3.409,1861,2.25,1862,4.773,1863,3.954,1864,4.773,1865,5.325,1866,2.61,1867,3.954,1868,2.61,1869,2.61,1870,3.954,1871,2.61,1872,2.61,1873,2.61,1874,2.61,1875,2.61,1876,2.61,1877,2.61,1878,2.61,1879,2.61,1880,2.61,1881,2.61,1882,2.61,1883,2.61,1884,2.61,1885,2.61,1886,2.61,1887,2.61,1888,2.61,1889,2.61,1890,2.61,1891,2.61,1892,2.61,1893,2.61,1894,3.954,1895,3.954,1896,2.61,1897,2.61,1898,2.61,1899,2.61,1900,2.61,1901,2.61]],["title/classes/UpdateAnswer.html",[0,0.139,54,2.276]],["body/classes/UpdateAnswer.html",[0,0.245,2,1.42,3,0.221,4,0.221,5,0.195,7,0.781,10,2.339,11,0.272,12,0.444,15,0.296,16,0.018,17,0.787,18,0.516,19,0.622,20,0.309,26,3.937,27,0.303,28,0.82,29,1.486,30,1.554,31,2.065,32,1.627,33,0.991,34,0.903,35,0.013,36,0.013,37,2.646,38,3.396,39,4.027,40,4.266,44,2.83,45,2.454,47,4.202,48,5.364,50,2.454,51,2.14,53,2.917,54,4.202,55,3.043,1902,4.827,1903,4.827]],["title/classes/UpdateQuestion.html",[0,0.139,1488,2.276]],["body/classes/UpdateQuestion.html",[0,0.251,2,1.492,3,0.232,4,0.232,5,0.205,7,0.82,10,2.392,11,0.286,12,0.458,13,2.385,15,0.294,16,0.018,17,0.794,18,0.432,19,0.577,20,0.259,27,0.31,28,0.862,29,1.561,30,1.633,31,2.17,32,1.709,33,1.042,34,0.949,35,0.014,36,0.014,37,2.107,50,2.777,51,2.206,55,3.138,112,2.312,941,3.138,1480,3.065,1481,3.568,1483,4.399,1486,4.823,1487,4.823,1488,3.778,1904,5.072]],["title/classes/User.html",[0,0.139,175,0.774]],["body/classes/User.html",[0,0.259,2,1.123,3,0.174,4,0.174,5,0.155,7,0.617,10,1.346,11,0.215,12,0.381,15,0.293,16,0.018,17,0.809,18,0.616,19,0.616,20,0.369,27,0.29,28,0.883,29,1.82,30,1.904,32,1.992,33,1.503,34,1.312,35,0.012,36,0.012,80,0.788,175,1.529,184,2.016,227,2.341,456,2.029,460,2.468,584,2.292,602,2.224,704,2.855,789,2.765,790,2.478,791,3.657,792,2.609,793,2.478,794,3.93,795,4.014,796,3.708,797,4.374,798,2.946,800,4.363,801,4.673,803,3.836,806,4.159,809,3.657,810,3.657,811,2.765,812,2.765,837,2.943,1428,3.29,1905,3.816,1906,3.816,1907,3.816,1908,3.816,1909,3.816,1910,3.816,1911,3.816,1912,3.816,1913,3.816]],["title/injectables/UserService.html",[56,1.269,562,1.612]],["body/injectables/UserService.html",[0,0.123,3,0.25,4,0.151,5,0.134,7,0.536,11,0.187,12,0.345,14,2.539,15,0.301,16,0.018,17,0.792,18,0.401,19,0.508,20,0.367,27,0.151,28,1.015,35,0.01,36,0.01,45,1.662,56,1.588,58,1.762,60,1.827,61,1.16,64,3.101,65,0.881,72,1.291,73,1.874,74,3.378,76,2.237,77,3.356,78,2.665,79,1.251,80,0.894,81,1.251,85,2.29,87,2.689,88,1.325,89,3.3,95,2.015,112,1.742,113,2.665,114,3.569,117,2.665,118,2.121,121,1.114,122,2.151,123,3.812,124,1.762,125,0.536,126,1.874,128,1.573,130,1.663,131,1.874,132,1.663,133,1.573,134,1.711,135,0.853,138,2.432,141,3.378,142,1.607,143,3.608,144,2.232,145,3.815,175,1.588,186,4.606,205,2.121,227,3.104,231,4.062,254,1.109,360,3.059,437,3.634,450,3.314,460,2.237,476,1.169,478,2.847,562,2.015,631,3.059,639,2.151,674,3.314,709,4.727,789,3.176,794,3.356,796,1.663,798,2.232,811,3.176,812,3.176,834,4.062,1024,3.634,1029,4.062,1071,4.062,1084,4.062,1093,4.062,1150,2.856,1416,4.062,1437,4.062,1541,2.555,1678,4.062,1761,4.062,1813,2.856,1914,2.856,1915,4.711,1916,4.711,1917,3.313,1918,4.711,1919,3.313,1920,4.711,1921,4.711,1922,3.313,1923,4.711,1924,3.313,1925,4.711,1926,3.313,1927,4.711,1928,4.711,1929,4.711,1930,3.313,1931,3.313,1932,3.313,1933,4.711,1934,3.313,1935,4.711,1936,4.711,1937,3.313,1938,4.711,1939,3.313,1940,3.313,1941,3.313,1942,3.313,1943,3.313,1944,3.313,1945,3.313,1946,3.313,1947,3.313,1948,3.313,1949,3.313,1950,3.313,1951,3.313,1952,3.313,1953,3.313,1954,3.313,1955,3.313]],["title/coverage.html",[1956,3.975]],["body/coverage.html",[0,0.286,1,2.265,5,0.162,6,4.142,9,2.129,15,0.162,16,0.018,22,0.616,34,1.133,35,0.012,36,0.012,37,1.349,38,4.263,50,1.413,53,2.419,54,2.419,56,2.393,57,2.265,59,3.452,85,1.289,130,2.009,144,2.466,154,0.96,155,1.078,161,3.452,175,0.822,182,1.713,247,1.031,249,1.031,251,1.031,253,1.031,254,0.942,256,1.031,258,1.031,260,1.031,262,1.031,264,1.031,266,1.031,269,1.031,270,1.078,272,1.031,274,1.031,275,1.031,277,1.031,279,1.031,281,1.031,293,2.6,294,2.6,295,2.6,314,2.817,317,2.817,320,2.817,324,2.817,325,3.088,327,2.817,331,2.817,334,2.817,335,2.817,340,2.817,342,2.817,350,2.817,353,2.817,379,3.452,380,3.452,389,1.803,404,2.419,405,3.452,426,3.452,434,1.63,457,2.265,501,2.009,533,3.452,537,3.452,547,1.803,562,1.713,563,2.265,566,2.009,573,2.6,612,2.129,724,3.223,727,3.33,766,2.6,767,4.142,789,2.129,790,4.204,811,2.129,812,2.129,813,3.452,814,3.452,842,2.817,912,4.142,914,3.452,915,3.452,934,3.452,943,3.452,944,3.452,952,3.452,957,4.142,958,4.142,1011,3.452,1061,3.452,1115,4.142,1130,3.452,1155,3.452,1272,2.817,1276,2.817,1284,2.817,1295,2.817,1321,4.555,1336,3.452,1341,2.817,1375,3.452,1404,3.452,1410,3.452,1448,3.452,1455,3.452,1456,4.142,1480,2.419,1481,4.263,1488,2.419,1489,3.088,1490,3.452,1502,3.452,1555,4.017,1618,3.452,1722,3.452,1741,3.452,1770,3.452,1822,3.452,1861,3.452,1914,3.452,1956,3.088,1957,3.452,1958,4.004,1959,4.004,1960,5.37,1961,4.004,1962,4.004,1963,4.004,1964,4.004,1965,4.004,1966,4.004,1967,4.004,1968,4.004,1969,4.004,1970,5.37,1971,4.004,1972,5.37,1973,4.004,1974,4.004,1975,4.004,1976,6.059,1977,5.37,1978,5.37,1979,5.37,1980,6.059,1981,6.059,1982,6.059,1983,4.004,1984,6.059,1985,5.37,1986,4.004,1987,6.059,1988,5.37,1989,4.004,1990,4.004,1991,4.004,1992,4.004,1993,4.004,1994,4.004,1995,4.004,1996,4.004,1997,4.004,1998,4.004,1999,4.004,2000,4.004,2001,4.004,2002,4.004,2003,4.004,2004,4.004,2005,3.452,2006,5.37,2007,3.452,2008,4.004]],["title/dependencies.html",[288,2.411,2009,2.707]],["body/dependencies.html",[16,0.018,35,0.015,36,0.015,125,0.932,128,2.736,209,1.855,288,3.064,306,5.82,307,5.207,309,2.736,567,3.259,2010,5.761,2011,7.793,2012,5.761,2013,5.761,2014,5.761,2015,5.761,2016,5.761,2017,5.761,2018,5.761,2019,5.761,2020,5.761,2021,5.761,2022,5.761,2023,5.761,2024,5.761,2025,5.761]],["title/miscellaneous/functions.html",[2026,2.209,2027,3.909]],["body/miscellaneous/functions.html",[11,0.338,15,0.243,16,0.016,35,0.015,36,0.015,79,1.069,80,0.744,81,1.069,119,3.389,122,4.485,130,3.652,182,2.563,185,2.439,833,4.215,2005,5.165,2026,4.215,2027,5.165,2028,5.991,2029,5.991,2030,5.991,2031,5.991,2032,5.991]],["title/index.html",[11,0.177,2033,2.707,2034,2.707]],["body/index.html",[16,0.015,22,1.044,35,0.015,36,0.015,37,1.713,50,1.794,78,2.876,87,2.82,108,2.82,162,3.922,186,3.922,203,5.4,227,2.29,374,4.384,387,2.414,456,2.704,507,2.395,512,2.175,548,3.785,593,2.29,608,3.073,710,2.876,793,3.302,800,3.839,835,5.4,894,3.577,986,4.831,1021,3.302,1023,3.143,1053,3.302,1054,4.407,1182,3.577,1345,4.384,1452,4.384,1556,3.577,1589,3.577,1746,4.384,1793,3.922,1956,3.922,1957,6.107,2033,4.384,2034,4.384,2035,5.085,2036,6.787,2037,6.263,2038,5.085,2039,5.085,2040,7.084,2041,5.085,2042,5.085,2043,5.085,2044,5.085,2045,5.085,2046,5.085,2047,5.085,2048,5.085,2049,5.085,2050,5.085,2051,5.085,2052,5.085,2053,5.085,2054,5.085,2055,6.263,2056,5.085,2057,5.085,2058,7.274,2059,5.085,2060,6.263,2061,5.085,2062,5.085,2063,5.085,2064,5.085,2065,6.263,2066,5.085,2067,7.505,2068,6.263,2069,6.263,2070,6.787,2071,5.085,2072,5.085,2073,5.085,2074,5.085,2075,5.085,2076,5.085,2077,6.263,2078,5.085,2079,5.085,2080,5.085,2081,5.085,2082,5.085,2083,5.085,2084,5.085,2085,5.085,2086,5.085,2087,5.085,2088,5.085,2089,5.085]],["title/modules.html",[287,3.346]],["body/modules.html",[16,0.016,35,0.016,36,0.016,286,4.301,287,3.97,296,3.97,307,4.715,1793,4.715,2090,6.113,2091,6.113,2092,6.987,2093,6.113]],["title/overview.html",[2094,4.443]],["body/overview.html",[2,1.436,16,0.018,35,0.014,36,0.014,58,2.596,155,2.002,156,1.502,247,1.715,249,1.715,251,1.715,253,1.715,256,1.715,258,1.715,260,1.715,262,1.715,264,1.715,266,1.715,269,1.715,270,1.794,272,1.715,274,1.715,275,1.715,277,1.715,279,1.715,281,1.715,286,5.658,287,3.17,288,3.248,289,4.208,290,4.208,291,4.208,292,4.208,293,4.327,294,4.327,295,4.327,296,4.327,297,5.264,298,4.208,299,3.17,349,3.17,378,3.434,529,2.75,913,3.765,1616,3.434,2094,4.208,2095,6.663,2096,4.881]],["title/properties.html",[12,0.332,2009,2.707]],["body/properties.html",[12,0.452,16,0.016,31,2.64,35,0.016,36,0.016,2097,6.171]],["title/routes.html",[349,3.346]],["body/routes.html",[16,0.016,35,0.016,36,0.016,349,4.027]],["title/miscellaneous/variables.html",[616,2.944,2026,2.209]],["body/miscellaneous/variables.html",[11,0.317,15,0.228,16,0.018,18,0.479,19,0.479,35,0.015,36,0.016,45,1.986,88,1.004,138,1.986,182,2.408,205,2.534,213,2.71,357,5.136,616,3.655,644,3.183,796,3.559,842,4.989,851,3.183,890,3.959,891,4.341,1426,4.852,2007,4.852,2026,3.959,2098,5.628,2099,5.628,2100,5.628,2101,5.628,2102,6.659,2103,5.628,2104,6.659,2105,5.628,2106,5.628,2107,6.659,2108,5.628,2109,5.628,2110,5.628,2111,5.628,2112,5.628,2113,5.628]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":34,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2097,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":1385,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["0.2",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["0.9.4",{"_index":2019,"title":{},"body":{"dependencies.html":{}}}],["0.9em",{"_index":1378,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["0/1",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1002,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["009879",{"_index":1396,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["012e58",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["052d55",{"_index":1373,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["0px",{"_index":1397,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["1",{"_index":490,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["1.1.19",{"_index":2017,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1234,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":499,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["10/10",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["10/26",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":727,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":671,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["10000",{"_index":1003,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["10000px",{"_index":1659,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["1000px",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["1001682.jpg",{"_index":1369,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{}}}],["100vh",{"_index":524,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["100vw",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["101px",{"_index":1289,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["106px",{"_index":1269,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["107px",{"_index":1326,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["10px",{"_index":735,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["10rem",{"_index":1400,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["10s",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["11",{"_index":501,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["11/12",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":1374,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["114px",{"_index":1299,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["11px",{"_index":1662,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["12/13",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":1273,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["122px",{"_index":1334,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["123px",{"_index":1330,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["128px",{"_index":1265,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["13/13",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["137",{"_index":718,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["13s",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["14",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["143px",{"_index":1296,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["149px",{"_index":1293,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["14s",{"_index":1317,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["15",{"_index":755,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["15.2.8",{"_index":2011,"title":{},"body":{"dependencies.html":{}}}],["15/24",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["151px",{"_index":1307,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["153px",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["15px",{"_index":747,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["15rem",{"_index":1401,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["15s",{"_index":1304,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["16",{"_index":1329,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["167px",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["16px",{"_index":737,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["16s",{"_index":1260,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["174px",{"_index":1322,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["18",{"_index":1292,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["182px",{"_index":1316,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["188px",{"_index":1303,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["18s",{"_index":1300,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["19",{"_index":2095,"title":{},"body":{"overview.html":{}}}],["191px",{"_index":1319,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["194px",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["1fr",{"_index":1239,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["1px",{"_index":1389,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["1rem",{"_index":907,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["1s",{"_index":1267,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["2",{"_index":529,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"overview.html":{}}}],["2.0.11",{"_index":2020,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2023,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1767,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["2/2",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":752,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["20px",{"_index":739,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["20rem",{"_index":1403,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["24",{"_index":1312,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["242325",{"_index":510,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["24px",{"_index":734,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["25",{"_index":1321,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["250px",{"_index":1720,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["255",{"_index":754,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["25px",{"_index":1377,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["265px",{"_index":1768,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["27",{"_index":1272,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["28",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["28fcb.web.app",{"_index":2089,"title":{},"body":{"index.html":{}}}],["28fcb.web.app/challenge",{"_index":1055,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["28fcb.web.app/quiz",{"_index":1607,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["28s",{"_index":1323,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["2px",{"_index":1395,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["2s",{"_index":998,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["3",{"_index":1616,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"overview.html":{}}}],["3.2",{"_index":996,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["3/11",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":573,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["300px",{"_index":765,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["30s",{"_index":1290,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["31",{"_index":1325,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["34",{"_index":1302,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["34s",{"_index":1313,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["35",{"_index":1309,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["35px",{"_index":758,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["35s",{"_index":1297,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["36",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["3c887e",{"_index":498,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["3rem",{"_index":1766,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["3s",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["4",{"_index":1617,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["4/11",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1382,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["40px",{"_index":999,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["42",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["42a948",{"_index":898,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["43",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["43s",{"_index":1331,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["450px",{"_index":1233,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["4caf50",{"_index":741,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["4rem",{"_index":1363,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["4s",{"_index":1270,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["5",{"_index":504,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["5/13",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":724,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["50px",{"_index":1001,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["50rem",{"_index":1370,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["5220092.jpg",{"_index":1899,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["55px",{"_index":1241,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["56",{"_index":1288,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["59s",{"_index":1310,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["5px",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":909,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["5vh",{"_index":1364,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["6",{"_index":505,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6/12",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":782,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["61",{"_index":1333,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["62",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":726,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["66",{"_index":1960,"title":{},"body":{"coverage.html":{}}}],["66s",{"_index":1327,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["68",{"_index":1264,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["6em",{"_index":509,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["7",{"_index":2096,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":2021,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":1000,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["73",{"_index":1306,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["7s",{"_index":1286,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["8",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{}}}],["8/20",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["8/26",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["80vh",{"_index":1769,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["82",{"_index":717,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["820000",{"_index":906,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["83",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":723,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["88",{"_index":1295,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["9",{"_index":1315,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["9/10",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["95vh",{"_index":1362,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["9s",{"_index":1335,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["__v",{"_index":32,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["_id",{"_index":30,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["a94442",{"_index":901,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["absolute",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["abstractcontrol",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":1051,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["access",{"_index":927,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/MasterAnswerComponent.html":{}}}],["accessed",{"_index":471,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["accessors",{"_index":821,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["accordingly",{"_index":1573,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["account",{"_index":1446,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["action",{"_index":1757,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["actions",{"_index":1629,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["activate",{"_index":921,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["activated",{"_index":1451,"title":{},"body":{"guards/LoginGuard.html":{}}}],["activatedroute",{"_index":565,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["activatedroutesnapshot",{"_index":917,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["active",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["add",{"_index":8,"title":{},"body":{"classes/AddBookmark.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["add_bookmark",{"_index":406,"title":{},"body":{"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["add_bookmark(bookmark",{"_index":410,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["addbookmark",{"_index":1,"title":{"classes/AddBookmark.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["added",{"_index":484,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["addfriend",{"_index":1065,"title":{},"body":{"components/FriendsComponent.html":{}}}],["adding",{"_index":1070,"title":{},"body":{"components/FriendsComponent.html":{}}}],["additional",{"_index":1677,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["additionally",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["addrating",{"_index":1557,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["addrating(rating",{"_index":1780,"title":{},"body":{"injectables/QuizService.html":{}}}],["addrating(rating:number",{"_index":1818,"title":{},"body":{"injectables/QuizService.html":{}}}],["address",{"_index":801,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["adds",{"_index":1569,"title":{},"body":{"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["against",{"_index":582,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizImageComponent.html":{}}}],["alert",{"_index":903,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["alert(\"bookmark",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["alert(\"challenge",{"_index":1057,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["alert(\"delete",{"_index":1109,"title":{},"body":{"components/FriendsComponent.html":{}}}],["alert(\"email",{"_index":1885,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["alert(\"friend",{"_index":1100,"title":{},"body":{"components/FriendsComponent.html":{}}}],["alert(\"invalid",{"_index":1097,"title":{},"body":{"components/FriendsComponent.html":{}}}],["alert(\"successfully",{"_index":1613,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["alert(\"time",{"_index":669,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["alert(\"you",{"_index":926,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizSearchComponent.html":{}}}],["alert(res['message",{"_index":1440,"title":{},"body":{"components/LoginComponent.html":{}}}],["alerts",{"_index":1583,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["align",{"_index":525,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["allowance",{"_index":784,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["along",{"_index":845,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["already",{"_index":1072,"title":{},"body":{"components/FriendsComponent.html":{},"guards/LoginGuard.html":{},"components/RegistrationComponent.html":{}}}],["angular",{"_index":60,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["angular/animations",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2012,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":638,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["angular/common",{"_index":2013,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":124,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2014,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":125,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1245,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["animation",{"_index":1259,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["another",{"_index":1887,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["ans",{"_index":694,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answer",{"_index":37,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["answer',this.id",{"_index":1711,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["answer'},{'name",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["answer.answer",{"_index":713,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["answer.component.html",{"_index":1458,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.scss",{"_index":1457,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts",{"_index":1456,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer.component.ts:12",{"_index":1461,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:133",{"_index":1574,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:140",{"_index":1584,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:150",{"_index":1564,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:203",{"_index":1562,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:21",{"_index":1465,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:22",{"_index":1464,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:223",{"_index":1572,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:23",{"_index":1467,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:24",{"_index":1466,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:26",{"_index":1561,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:29",{"_index":1463,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:30",{"_index":1586,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:31",{"_index":1592,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:32",{"_index":1597,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:33",{"_index":1600,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:34",{"_index":1594,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:38",{"_index":1591,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:42",{"_index":1601,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:46",{"_index":1599,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:48",{"_index":1590,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:51",{"_index":1588,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:53",{"_index":1560,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:66",{"_index":1593,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:68",{"_index":1595,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:70",{"_index":1587,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:74",{"_index":1602,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:76",{"_index":1598,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:80",{"_index":1596,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:89",{"_index":1579,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer/'+quiz._id.tostring",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{}}}],["answer/:id",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answer/master",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["answer/quiz",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer:updateanswer",{"_index":151,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer[element._id",{"_index":656,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answer_form",{"_index":541,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answer_id",{"_index":542,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answerarr",{"_index":94,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answerquiz",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answers",{"_index":63,"title":{},"body":{"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["answerservice",{"_index":57,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["api",{"_index":119,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"miscellaneous/functions.html":{}}}],["app",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["app.component",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":155,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["application/json",{"_index":143,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":286,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1670,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["approutingmodule",{"_index":296,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apron",{"_index":114,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["aquamarine",{"_index":1402,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["array",{"_index":95,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/HomeComponent.html":{},"injectables/UserService.html":{}}}],["assigned",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["assigns",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["associated",{"_index":941,"title":{},"body":{"classes/FRIEND.html":{},"components/FriendsComponent.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"classes/UpdateQuestion.html":{}}}],["auto",{"_index":728,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["available",{"_index":1793,"title":{},"body":{"injectables/QuizService.html":{},"index.html":{},"modules.html":{}}}],["average",{"_index":768,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["back",{"_index":986,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["backdrop",{"_index":756,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["background",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["bar",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":117,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["base_url",{"_index":64,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":387,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"index.html":{}}}],["baseline",{"_index":1360,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["battle",{"_index":692,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["being",{"_index":23,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"components/QuizAnswerComponent.html":{}}}],["belonging",{"_index":417,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{}}}],["belongs",{"_index":26,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["best",{"_index":1895,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["between",{"_index":532,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["blend",{"_index":515,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["block",{"_index":530,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["blur(15px",{"_index":1398,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["blur(25px",{"_index":1718,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["blur(5px",{"_index":757,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["body",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["bold",{"_index":763,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["bookfilter",{"_index":381,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["bookfilterpipe",{"_index":293,"title":{"pipes/BookFilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/BookFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["bookmark",{"_index":9,"title":{"classes/Bookmark.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["bookmarked",{"_index":24,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["bookmarks",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{}}}],["bookmarks'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["bookmarks.component.html",{"_index":429,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks.component.scss",{"_index":428,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks/bookmarks.component",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bookmarkscomponent",{"_index":247,"title":{"components/BookmarksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookmarkservice",{"_index":404,"title":{"injectables/BookmarkService.html":{}},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{}}}],["booltimesup",{"_index":543,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["bootstrap",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":742,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["both",{"_index":2046,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":502,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["box",{"_index":893,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["browse",{"_index":2092,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":738,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["building",{"_index":2081,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":2018,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":452,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["button:hover",{"_index":1719,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["buttonback",{"_index":1004,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["buttonback:hover",{"_index":1008,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["buttondispl",{"_index":1014,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["buttons",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["cadetblue",{"_index":1372,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["calculates",{"_index":583,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizImageComponent.html":{}}}],["calculating",{"_index":1566,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["call",{"_index":833,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1830,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["calls",{"_index":120,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["can't",{"_index":470,"title":{},"body":{"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{}}}],["canactivate",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["canactivate(route",{"_index":916,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["card",{"_index":751,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["cards",{"_index":1010,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["cat",{"_index":384,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["catagories",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["catagory.name",{"_index":1226,"title":{},"body":{"components/HomeComponent.html":{}}}],["catcherror",{"_index":126,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["catcherror(handleerror",{"_index":145,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":954,"title":{},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"injectables/QuizService.html":{}}}],["categorized",{"_index":2052,"title":{},"body":{"index.html":{}}}],["category",{"_index":389,"title":{"classes/Category.html":{}},"body":{"pipes/BookFilterPipe.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["catergories",{"_index":955,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["cd",{"_index":2060,"title":{},"body":{"index.html":{}}}],["cdk",{"_index":1077,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizImageComponent.html":{}}}],["center",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["challenge",{"_index":538,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["challenge'},{'name",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["challenge.component.html",{"_index":540,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["challenge.component.scss",{"_index":539,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["challenge/:id",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["challenge/challenge.component",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["challengecomponent",{"_index":249,"title":{"components/ChallengeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["challenged",{"_index":1050,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["challengefriend",{"_index":1017,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["characters",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":674,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["check_email_exists",{"_index":1915,"title":{},"body":{"injectables/UserService.html":{}}}],["check_email_exists(email",{"_index":1918,"title":{},"body":{"injectables/UserService.html":{}}}],["checkanswers",{"_index":556,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["checking",{"_index":1565,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{}}}],["checks",{"_index":581,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(0",{"_index":1263,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(1",{"_index":1268,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(10",{"_index":1301,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(11",{"_index":1305,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(12",{"_index":1308,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(13",{"_index":1311,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(14",{"_index":1314,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(15",{"_index":1318,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(16",{"_index":1320,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(17",{"_index":1324,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(18",{"_index":1328,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(19",{"_index":1332,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(2",{"_index":1271,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(3",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(4",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(5",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(6",{"_index":1287,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(7",{"_index":1291,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(8",{"_index":1294,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["child(9",{"_index":1298,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["choice",{"_index":787,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["choose",{"_index":1058,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["churchman",{"_index":1368,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{}}}],["ci",{"_index":2079,"title":{},"body":{"index.html":{}}}],["circle",{"_index":2078,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"overview.html":{}}}],["clearing",{"_index":588,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizImageComponent.html":{}}}],["clearinterval(this.countdowntimer",{"_index":667,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["clears",{"_index":1585,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{}}}],["cli",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["clicked",{"_index":1082,"title":{},"body":{"components/FriendsComponent.html":{}}}],["clicks",{"_index":451,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["client",{"_index":78,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["clipboard",{"_index":567,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["codecov",{"_index":2086,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":1376,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["color",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["column",{"_index":750,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["columns",{"_index":1235,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["command",{"_index":2070,"title":{},"body":{"index.html":{}}}],["commit",{"_index":2087,"title":{},"body":{"index.html":{}}}],["compares",{"_index":1831,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["competitions",{"_index":2049,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":2075,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2016,"title":{},"body":{"dependencies.html":{}}}],["compodocto",{"_index":2074,"title":{},"body":{"index.html":{}}}],["component",{"_index":154,"title":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["component's",{"_index":1625,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["component:quizinfocomponent",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["configuration",{"_index":1731,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["confirm",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_password",{"_index":823,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirming",{"_index":1025,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["confirmpassword",{"_index":842,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["congratulations",{"_index":689,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["console.log(\"quiz",{"_index":1475,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["console.log(\"toggled",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`searched",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(json.stringify(quiz",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(res",{"_index":703,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["console.log(response",{"_index":879,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["console.log(this.friends",{"_index":1102,"title":{},"body":{"components/FriendsComponent.html":{}}}],["const",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["constructed",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":72,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["constructor(bookmarkservice",{"_index":433,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["constructor(http",{"_index":73,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(leaderboardservice",{"_index":1340,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["constructor(private",{"_index":135,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":863,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(questionservice",{"_index":1559,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["constructor(quizservice",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{}}}],["constructor(route",{"_index":962,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["constructor(router",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":561,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["container",{"_index":715,"title":{},"body":{"components/ChallengeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["contains",{"_index":972,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{}}}],["content",{"_index":142,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["contents",{"_index":1399,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["continuous",{"_index":2036,"title":{},"body":{"index.html":{}}}],["control",{"_index":851,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get(\"confirm_password",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get(\"password",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":831,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["contructor",{"_index":1867,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["copied",{"_index":1026,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["copies",{"_index":1022,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{}}}],["copy",{"_index":1035,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["copyid",{"_index":1066,"title":{},"body":{"components/FriendsComponent.html":{}}}],["copyresults",{"_index":1558,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["correct",{"_index":39,"title":{},"body":{"classes/Answer.html":{},"components/ChallengeComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{}}}],["corresponding",{"_index":594,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["corresponds",{"_index":462,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["count",{"_index":1571,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["countdown",{"_index":596,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["countdowntimer",{"_index":544,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["cover",{"_index":522,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["coverage",{"_index":1956,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":87,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"injectables/QuestionService.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create'},{'name",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["create.component",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.ts",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["create/quiz",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["create_answer",{"_index":66,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_answer(answer",{"_index":82,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_friends",{"_index":1071,"title":{},"body":{"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["create_friends(friendid",{"_index":1921,"title":{},"body":{"injectables/UserService.html":{}}}],["create_history",{"_index":1131,"title":{},"body":{"injectables/HistoryService.html":{},"components/QuizTypeinComponent.html":{}}}],["create_history(history",{"_index":1136,"title":{},"body":{"injectables/HistoryService.html":{}}}],["create_image",{"_index":1503,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_image(file",{"_index":1511,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_many_answers",{"_index":67,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_answers(answerarr",{"_index":91,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_questions",{"_index":1504,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_many_questions(questions",{"_index":1514,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question",{"_index":1505,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question(question",{"_index":1516,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_quiz",{"_index":1771,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_quiz(newquiz",{"_index":1782,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_user",{"_index":1916,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user(user",{"_index":1923,"title":{},"body":{"injectables/UserService.html":{}}}],["createanswer",{"_index":140,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createbookmark",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["createbookmark(quiz",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["created",{"_index":90,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["created_by",{"_index":1663,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["createquestion",{"_index":1530,"title":{},"body":{"injectables/QuestionService.html":{}}}],["createquiz",{"_index":766,"title":{"classes/CreateQuiz.html":{}},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["creates",{"_index":84,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["createuser",{"_index":789,"title":{"classes/CreateUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":793,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["creation",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["creator",{"_index":774,"title":{},"body":{"classes/CreateQuiz.html":{},"components/HomeComponent.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["creatorid",{"_index":769,"title":{},"body":{"classes/CreateQuiz.html":{},"components/HomeComponent.html":{},"classes/Quiz.html":{},"components/QuizSearchComponent.html":{}}}],["ctrl",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl.value",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":478,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"injectables/UserService.html":{}}}],["current_user",{"_index":1015,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["currplays",{"_index":1144,"title":{},"body":{"injectables/HistoryService.html":{}}}],["currplays+1",{"_index":1152,"title":{},"body":{"injectables/HistoryService.html":{}}}],["cursor",{"_index":745,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["data",{"_index":792,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"classes/User.html":{}}}],["database",{"_index":29,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["date",{"_index":1121,"title":{},"body":{"classes/History.html":{},"classes/HistoryArr.html":{}}}],["dddddd",{"_index":1390,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["declarations",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["declare",{"_index":601,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["declares",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["decorator",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{}}}],["decorators",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["decrease",{"_index":1581,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["decrement",{"_index":1840,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1266,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["delete",{"_index":100,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{}}}],["delete_answer",{"_index":68,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer(id",{"_index":97,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_bookmark",{"_index":407,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_bookmark(bookmark",{"_index":412,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_friend",{"_index":1084,"title":{},"body":{"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["delete_friend(friendobjid",{"_index":1925,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_question",{"_index":1506,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_question(question",{"_index":1518,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_quiz",{"_index":1772,"title":{},"body":{"injectables/QuizService.html":{}}}],["delete_quiz(id",{"_index":1785,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletequiz/\"+id).pipe",{"_index":1812,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletes",{"_index":99,"title":{},"body":{"injectables/AnswerService.html":{}}}],["deletion",{"_index":101,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{}}}],["dependencies",{"_index":288,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":571,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["deployment",{"_index":2077,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["desired",{"_index":1242,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["destroyed",{"_index":587,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["details",{"_index":592,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["determine",{"_index":1450,"title":{},"body":{"guards/LoginGuard.html":{}}}],["different",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["diplay",{"_index":444,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["direction",{"_index":749,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["directive",{"_index":61,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["directives",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["directory",{"_index":2064,"title":{},"body":{"index.html":{}}}],["display",{"_index":459,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["displayed",{"_index":1074,"title":{},"body":{"components/FriendsComponent.html":{},"components/HomeComponent.html":{}}}],["displaying",{"_index":1688,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["displays",{"_index":585,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["div",{"_index":904,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["docs",{"_index":2039,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1957,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["don't",{"_index":890,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["don\\'t",{"_index":911,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["done",{"_index":545,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["drew",{"_index":690,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["dynamic",{"_index":2015,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":604,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["e.g",{"_index":786,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["each",{"_index":463,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit_user",{"_index":834,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/UserService.html":{}}}],["edit_user(user",{"_index":1929,"title":{},"body":{"injectables/UserService.html":{}}}],["editprofilecomponent",{"_index":251,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editprofileguard",{"_index":350,"title":{"guards/EditProfileGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["edituser",{"_index":811,"title":{"classes/EditUser.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["element",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["element._id",{"_index":677,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{}}}],["element.answer",{"_index":1860,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["element.correct",{"_index":678,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["elementref",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":794,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email).pipe",{"_index":1942,"title":{},"body":{"injectables/UserService.html":{}}}],["email_status",{"_index":1878,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["empty",{"_index":390,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{}}}],["end",{"_index":446,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["enforce",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["entries",{"_index":1120,"title":{},"body":{"classes/History.html":{},"classes/HistoryArr.html":{}}}],["entry",{"_index":1834,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["equal",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["error",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":1487,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["even",{"_index":2047,"title":{},"body":{"index.html":{}}}],["executing",{"_index":2042,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1073,"title":{},"body":{"components/FriendsComponent.html":{},"components/RegistrationComponent.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["f3f3f3",{"_index":1393,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["failed",{"_index":1110,"title":{},"body":{"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["fails",{"_index":1107,"title":{},"body":{"components/FriendsComponent.html":{}}}],["failure",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["false",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1379,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["favourite",{"_index":493,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["feature",{"_index":928,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["fed3d3",{"_index":905,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fetch",{"_index":1030,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["fetched",{"_index":1675,"title":{},"body":{"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["fetches",{"_index":591,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["fetching",{"_index":1687,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["fff",{"_index":1005,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["field",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["fields",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fill",{"_index":1237,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["filter",{"_index":392,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["filter.pipe",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["filter.pipe.ts",{"_index":380,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:21",{"_index":385,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["filtered",{"_index":393,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["filterfriends",{"_index":945,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["filterfriendspipe",{"_index":294,"title":{"pipes/FilterFriendsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterFriendsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["filterpipe",{"_index":295,"title":{"pipes/FilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["filters",{"_index":386,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["finally",{"_index":1835,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["find",{"_index":492,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["finds",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["firebase",{"_index":2083,"title":{},"body":{"index.html":{}}}],["first",{"_index":803,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["first_name",{"_index":822,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["firstname",{"_index":795,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["fit",{"_index":731,"title":{},"body":{"components/ChallengeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["fixed",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["flag",{"_index":1563,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["flex",{"_index":748,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["following",{"_index":2069,"title":{},"body":{"index.html":{}}}],["font",{"_index":733,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["for(let",{"_index":491,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["form",{"_index":602,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["form's",{"_index":830,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["format",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["formbuilder",{"_index":1859,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["formcontrol",{"_index":619,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["formdata",{"_index":1512,"title":{},"body":{"injectables/QuestionService.html":{}}}],["formgroup",{"_index":600,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup(answer",{"_index":661,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["friend",{"_index":254,"title":{"classes/FRIEND.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["friend's",{"_index":948,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"components/FriendInfoComponent.html":{}}}],["friend.friendusername",{"_index":951,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["friend_form",{"_index":1064,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friend_id",{"_index":1089,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friendarray",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{}}}],["friendid",{"_index":1093,"title":{},"body":{"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["friendinfocomponent",{"_index":253,"title":{"components/FriendInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friendname",{"_index":546,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["friendobjid",{"_index":1927,"title":{},"body":{"injectables/UserService.html":{}}}],["friends",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["friends'},{'name",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["friends.component.html",{"_index":1063,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friends.component.scss",{"_index":1062,"title":{},"body":{"components/FriendsComponent.html":{}}}],["friends.filter(friend",{"_index":950,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["friends.pipe",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["friends.pipe.ts",{"_index":944,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"coverage.html":{}}}],["friends.pipe.ts:22",{"_index":947,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["friends/friends.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["friendscomponent",{"_index":256,"title":{"components/FriendsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friendselectcomponent",{"_index":258,"title":{"components/FriendSelectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friendusername",{"_index":935,"title":{},"body":{"classes/FRIEND.html":{}}}],["front",{"_index":445,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["full",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["function",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"components/LeaderboardComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2027,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1732,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["gap",{"_index":1240,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["gathers",{"_index":829,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["generate",{"_index":2072,"title":{},"body":{"index.html":{}}}],["generated",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["generating",{"_index":1632,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["genereated",{"_index":809,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["get_bookmarks",{"_index":408,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_bookmarks(userid",{"_index":415,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_category_byid",{"_index":1773,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_category_byid(id",{"_index":1787,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_history",{"_index":1132,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_history(userid",{"_index":1138,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_history_by_id",{"_index":1133,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_history_by_id(historyid",{"_index":1140,"title":{},"body":{"injectables/HistoryService.html":{}}}],["get_question_answer",{"_index":69,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_question_answer(questionid",{"_index":103,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_quiz_byid",{"_index":1774,"title":{},"body":{"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["get_quiz_byid(id",{"_index":1790,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_categories",{"_index":1775,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_questions",{"_index":1507,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuizTypeinComponent.html":{}}}],["get_quiz_questions(id",{"_index":1520,"title":{},"body":{"injectables/QuestionService.html":{}}}],["get_quizname_by_id",{"_index":1776,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quizname_by_id(id",{"_index":1794,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_usernameid",{"_index":1761,"title":{},"body":{"components/QuizSearchComponent.html":{},"injectables/UserService.html":{}}}],["get_usernameid(id",{"_index":1931,"title":{},"body":{"injectables/UserService.html":{}}}],["get_usernameid(id:string",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["getallanswers",{"_index":70,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getallquestions",{"_index":1508,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallquiz",{"_index":1777,"title":{},"body":{"injectables/QuizService.html":{}}}],["getallquizzes\").pipe",{"_index":1806,"title":{},"body":{"injectables/QuizService.html":{}}}],["getconfirm_password",{"_index":860,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getemail",{"_index":856,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfirst_name",{"_index":849,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfriends",{"_index":1029,"title":{},"body":{"components/FriendSelectComponent.html":{},"injectables/UserService.html":{}}}],["getfriends(userid",{"_index":1933,"title":{},"body":{"injectables/UserService.html":{}}}],["getleaderboard",{"_index":1348,"title":{},"body":{"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{}}}],["getpassword",{"_index":858,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["gets",{"_index":468,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{}}}],["getsurname",{"_index":852,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":2033,"title":{"index.html":{}},"body":{"index.html":{}}}],["getusername",{"_index":854,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["give",{"_index":1113,"title":{},"body":{"components/FriendsComponent.html":{}}}],["given",{"_index":388,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"injectables/QuizService.html":{}}}],["global",{"_index":847,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["go",{"_index":2063,"title":{},"body":{"index.html":{}}}],["gradient(180deg",{"_index":720,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["gradient(circle",{"_index":497,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":2093,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":514,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["green",{"_index":899,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizImageComponent.html":{},"components/RegistrationComponent.html":{}}}],["grid",{"_index":495,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["group",{"_index":603,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["groups",{"_index":2048,"title":{},"body":{"index.html":{}}}],["guard",{"_index":912,"title":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":913,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"overview.html":{}}}],["guards/edit",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/login.guard",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h2",{"_index":732,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["handleerror",{"_index":130,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":1628,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["handling",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["header",{"_index":1371,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["headers",{"_index":141,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"components/LeaderboardComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":523,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["here",{"_index":1052,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/LeaderboardComponent.html":{},"guards/LoginGuard.html":{}}}],["hidden",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["hist.date",{"_index":990,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["hist.quizname",{"_index":989,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["hist.score",{"_index":991,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["hist_id",{"_index":1016,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["history",{"_index":547,"title":{"classes/History.html":{}},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["historyarr",{"_index":612,"title":{"classes/HistoryArr.html":{}},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["historyid",{"_index":645,"title":{},"body":{"components/ChallengeComponent.html":{},"injectables/HistoryService.html":{}}}],["historyservice",{"_index":566,"title":{"injectables/HistoryService.html":{}},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["historyservice:historyservice",{"_index":980,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizImageComponent.html":{}}}],["home",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["home.component.html",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":260,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":1636,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["hosting",{"_index":2084,"title":{},"body":{"index.html":{}}}],["html",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["http",{"_index":77,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":74,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httperrorresponse",{"_index":122,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":123,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://aksharnana.github.io/quizplatform",{"_index":2038,"title":{},"body":{"index.html":{}}}],["https://clumsy",{"_index":113,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://quiz",{"_index":1053,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["i+1",{"_index":1356,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["id,nupdate",{"_index":1810,"title":{},"body":{"injectables/QuizService.html":{}}}],["identifier",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1935,"title":{},"body":{"injectables/UserService.html":{}}}],["idx",{"_index":448,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{}}}],["idx+1",{"_index":711,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["if(ans",{"_index":1611,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["if(cat",{"_index":397,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["if(friend",{"_index":949,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["if(friendid",{"_index":1095,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(numcorrect",{"_index":686,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["if(res.hasownproperty('message",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(res['friend_exists",{"_index":1099,"title":{},"body":{"components/FriendsComponent.html":{}}}],["if(res['message",{"_index":488,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["if(res['quizid",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["if(this.quiz.type",{"_index":1712,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["if(this.quiz.type===\"text",{"_index":1709,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["if(this.toggled",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.user",{"_index":983,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["if(user",{"_index":925,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["if(value",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["image",{"_index":512,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["image',this.id",{"_index":1714,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["image'},{'name",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["image.component",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["image.component.html",{"_index":1620,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.scss",{"_index":1619,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts",{"_index":1618,"title":{},"body":{"components/QuizImageComponent.html":{},"coverage.html":{}}}],["image.component.ts:113",{"_index":1634,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:120",{"_index":1640,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:131",{"_index":1627,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:181",{"_index":1623,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:20",{"_index":1622,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:202",{"_index":1633,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:22",{"_index":1649,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:23",{"_index":1641,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:24",{"_index":1650,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:25",{"_index":1654,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:26",{"_index":1644,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:27",{"_index":1647,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:28",{"_index":1646,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:29",{"_index":1651,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:30",{"_index":1656,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:34",{"_index":1645,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:38",{"_index":1655,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:42",{"_index":1653,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:44",{"_index":1643,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:46",{"_index":1621,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:59",{"_index":1648,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:61",{"_index":1642,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:63",{"_index":1652,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image.component.ts:72",{"_index":1638,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["image/:id\",component",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["image/quiz",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizImageComponent.html":{},"coverage.html":{}}}],["img",{"_index":1661,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["implemented",{"_index":1575,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["implements",{"_index":396,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["import",{"_index":121,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1717,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["imports",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":974,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["incorrect",{"_index":48,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["increase",{"_index":679,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["increment",{"_index":1339,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["increments",{"_index":1346,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1626,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["indicates",{"_index":1494,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["indicating",{"_index":1754,"title":{},"body":{"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["infinite",{"_index":1261,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["info',quiz._id",{"_index":1225,"title":{},"body":{"components/HomeComponent.html":{}}}],["info'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["info.component",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.html",{"_index":960,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.scss",{"_index":959,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts",{"_index":958,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:14",{"_index":1681,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:15",{"_index":967,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:16",{"_index":963,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:25",{"_index":1683,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1682,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:29",{"_index":1680,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1684,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:32",{"_index":971,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:33",{"_index":979,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:34",{"_index":966,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:35",{"_index":970,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1679,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:38",{"_index":968,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:39",{"_index":1685,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:40",{"_index":969,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["info.component.ts:47",{"_index":964,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["info.component.ts:74",{"_index":1673,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1669,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info/\"+this.quiz_id",{"_index":1608,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["info/:id",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["info/friend",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FriendInfoComponent.html":{},"coverage.html":{}}}],["info/quiz",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":826,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["initialize",{"_index":436,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["initialized",{"_index":1639,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["initializes",{"_index":569,"title":{},"body":{"components/ChallengeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["initializing",{"_index":1745,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["initially",{"_index":442,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["initiate",{"_index":1020,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["inject",{"_index":76,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"injectables/QuestionService.html":{},"components/QuizImageComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":1668,"title":{},"body":{"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{}}}],["injection",{"_index":572,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{}}}],["injects",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{}}}],["input",{"_index":631,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["input[type=radio]:checked",{"_index":1660,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["inputs",{"_index":559,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["inside",{"_index":1749,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["install",{"_index":2057,"title":{},"body":{"index.html":{}}}],["installinstallation",{"_index":2061,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1726,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["instances",{"_index":1667,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["integration",{"_index":2037,"title":{},"body":{"index.html":{}}}],["interface",{"_index":10,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["interval",{"_index":589,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{}}}],["invalid",{"_index":887,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invalid:not(form",{"_index":900,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invoked",{"_index":1086,"title":{},"body":{"components/FriendsComponent.html":{}}}],["involves",{"_index":2041,"title":{},"body":{"index.html":{}}}],["it's",{"_index":1789,"title":{},"body":{"injectables/QuizService.html":{}}}],["item",{"_index":465,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["items",{"_index":526,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["iterates",{"_index":1567,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["itself",{"_index":1483,"title":{},"body":{"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["jetpunk",{"_index":2045,"title":{},"body":{"index.html":{}}}],["json.parse(this.current_user",{"_index":1043,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["json.parse(this.user",{"_index":698,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["json.parse(user",{"_index":865,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.parse(window.sessionstorage.getitem(\"user",{"_index":466,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["json.stringify",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(answer",{"_index":137,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(answerarr",{"_index":146,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(bookmark",{"_index":423,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["json.stringify(newquiz",{"_index":1804,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(question",{"_index":1529,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(questions",{"_index":1532,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(response",{"_index":880,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.stringify(update",{"_index":1808,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(user",{"_index":709,"title":{},"body":{"components/ChallengeComponent.html":{},"injectables/UserService.html":{}}}],["json.stringify(user[0",{"_index":1441,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify({plays",{"_index":1151,"title":{},"body":{"injectables/HistoryService.html":{}}}],["justify",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["kellie",{"_index":1367,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{}}}],["keyframes",{"_index":1244,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["label",{"_index":908,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["large",{"_index":761,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["leaderboard",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LeaderboardComponent.html":{}}}],["leaderboard'},{'name",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["leaderboard.component.html",{"_index":1338,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard.component.scss",{"_index":1337,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard/leaderboard.component",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["leaderboardcomponent",{"_index":262,"title":{"components/LeaderboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leaderboardservice",{"_index":1341,"title":{"injectables/LeaderboardService.html":{}},"body":{"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"coverage.html":{}}}],["leaks",{"_index":1578,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["left",{"_index":503,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["length",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["li",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["li:nth",{"_index":1262,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["lifecycle",{"_index":1635,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["linear",{"_index":719,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["link",{"_index":1021,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["list",{"_index":460,"title":{},"body":{"components/BookmarksComponent.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/QuizSearchComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["listed",{"_index":439,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["live",{"_index":2088,"title":{},"body":{"index.html":{}}}],["load",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":2073,"title":{},"body":{"index.html":{}}}],["log",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":469,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["logging",{"_index":473,"title":{},"body":{"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{}}}],["login",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["login(user",{"_index":1936,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.html",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_form",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":264,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguard",{"_index":353,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["loginuser",{"_index":812,"title":{"classes/LoginUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["made",{"_index":806,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["main",{"_index":1228,"title":{},"body":{"components/HomeComponent.html":{}}}],["makes",{"_index":832,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["making",{"_index":1676,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["managing",{"_index":62,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{}}}],["many",{"_index":779,"title":{},"body":{"classes/CreateQuiz.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{}}}],["margin",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["master",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["masteranswercomponent",{"_index":266,"title":{"components/MasterAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["match",{"_index":891,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["match_ctrl",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_ctrl.value",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":1832,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":730,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["maximum",{"_index":1243,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["mcq",{"_index":1710,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["medium",{"_index":1658,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["memory",{"_index":1577,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["menu",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1024,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["method",{"_index":576,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["methods",{"_index":65,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":729,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["minimum",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{}}}],["minmax(450px",{"_index":1238,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["miscellaneous",{"_index":2026,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":516,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["models/answer",{"_index":129,"title":{},"body":{"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["models/bookmarks",{"_index":420,"title":{},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["models/categories",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["models/friend",{"_index":639,"title":{},"body":{"components/ChallengeComponent.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/UserService.html":{}}}],["models/history",{"_index":636,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"injectables/HistoryService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["models/question",{"_index":635,"title":{},"body":{"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["models/quiz",{"_index":395,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["models/user",{"_index":476,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":285,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":287,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":993,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["much",{"_index":627,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["multiple",{"_index":93,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["multiplechoice",{"_index":1486,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["multiply",{"_index":517,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["name",{"_index":80,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nans",{"_index":136,"title":{},"body":{"injectables/AnswerService.html":{}}}],["navbar",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar_menu",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1666,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["navigatequiz",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigatequiz(quiz",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigates",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["navigating",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigation",{"_index":1671,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["nbookmark",{"_index":422,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["need",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["needs",{"_index":1756,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["new",{"_index":85,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newanswer",{"_index":53,"title":{"classes/NewAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["newquestion",{"_index":1480,"title":{"classes/NewQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["newquestionanswer",{"_index":1489,"title":{"classes/NewQuestionAnswer.html":{}},"body":{"classes/NewQuestionAnswer.html":{},"coverage.html":{}}}],["newquiz",{"_index":1784,"title":{},"body":{"injectables/QuizService.html":{}}}],["next",{"_index":1580,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["ng",{"_index":894,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":557,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["ngoninit",{"_index":431,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["nicely",{"_index":519,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["none",{"_index":743,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["now",{"_index":1606,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["npm",{"_index":2058,"title":{},"body":{"index.html":{}}}],["nquestion",{"_index":1528,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquestions",{"_index":1531,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquiz",{"_index":1803,"title":{},"body":{"injectables/QuizService.html":{}}}],["null",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":33,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["number:'1.2",{"_index":1715,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["number:\\'1.2",{"_index":1721,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["numcorrect",{"_index":673,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["nupdate",{"_index":1807,"title":{},"body":{"injectables/QuizService.html":{}}}],["object",{"_index":86,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["objects",{"_index":96,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["observable",{"_index":89,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["obtained",{"_index":1750,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["occurs",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["once",{"_index":621,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["ondestroy",{"_index":632,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["oninit",{"_index":427,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["opacity",{"_index":511,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["opentests",{"_index":2066,"title":{},"body":{"index.html":{}}}],["operations",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":81,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":770,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["original",{"_index":391,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["otherwise",{"_index":1075,"title":{},"body":{"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["out",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"overview.html":{}}}],["over",{"_index":1568,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["overall",{"_index":1686,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["overflow",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["overview",{"_index":2094,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owns",{"_index":940,"title":{},"body":{"classes/FRIEND.html":{}}}],["p",{"_index":736,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["package",{"_index":2009,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2059,"title":{},"body":{"index.html":{}}}],["padding",{"_index":740,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["page",{"_index":710,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["panel",{"_index":527,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["param",{"_index":134,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["parameters",{"_index":79,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1759,"title":{},"body":{"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["params['id",{"_index":646,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["params['quiz",{"_index":1738,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["params['result",{"_index":1740,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["params['user",{"_index":1737,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["parse",{"_index":791,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["parses",{"_index":1752,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["part",{"_index":1730,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["particular",{"_index":1083,"title":{},"body":{"components/FriendsComponent.html":{},"injectables/QuizService.html":{}}}],["pass",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["passed",{"_index":1729,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["passowrd",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":796,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":889,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":1033,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["performance",{"_index":1116,"title":{},"body":{"classes/History.html":{},"components/QuizAnswerComponent.html":{}}}],["performed",{"_index":1672,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["pipe",{"_index":144,"title":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pipe(catcherror(handleerror",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["pipes",{"_index":378,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"overview.html":{}}}],["pipes/book",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter.pipe",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":394,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{}}}],["platform",{"_index":1054,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["play",{"_index":978,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["play_times",{"_index":961,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["played",{"_index":781,"title":{},"body":{"classes/CreateQuiz.html":{},"components/LeaderboardComponent.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["playrandomquiz",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["plays",{"_index":704,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["pointer",{"_index":746,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["populate",{"_index":825,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["position",{"_index":520,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["prerequisites",{"_index":2056,"title":{},"body":{"index.html":{}}}],["present",{"_index":622,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["prevent",{"_index":1637,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["preventing",{"_index":1576,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["private",{"_index":477,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["prizm",{"_index":1357,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{}}}],["profile'},{'name",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":816,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":815,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":814,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:101",{"_index":855,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:107",{"_index":857,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:113",{"_index":859,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:119",{"_index":861,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":846,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":843,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":824,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":848,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:67",{"_index":827,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":850,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":853,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.guard",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.guard.ts",{"_index":915,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["profile.guard.ts:18",{"_index":920,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["profile/edit",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":2040,"title":{},"body":{"index.html":{}}}],["promise",{"_index":923,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":1028,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["provided",{"_index":1034,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["providedin",{"_index":132,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1462,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["public",{"_index":819,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["pushing",{"_index":2082,"title":{},"body":{"index.html":{}}}],["qna",{"_index":1491,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["quest",{"_index":759,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["question",{"_index":50,"title":{"classes/Question.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["question.question",{"_index":712,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["question:updatequestion",{"_index":1538,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionid",{"_index":40,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["questions",{"_index":548,"title":{},"body":{"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["questionservice",{"_index":563,"title":{"injectables/QuestionService.html":{}},"body":{"components/ChallengeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["quiz",{"_index":22,"title":{"classes/Quiz.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["quiz's",{"_index":654,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["quiz._id",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.category",{"_index":956,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["quiz.creatorid",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.description",{"_index":1227,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name",{"_index":494,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name.includes(cat",{"_index":399,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["quiz_id",{"_index":549,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["quiz_platform",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["quizanswercomponent",{"_index":269,"title":{"components/QuizAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizcreatecomponent",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizid",{"_index":13,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"components/ChallengeComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateQuestion.html":{}}}],["quizid:string,userid:string",{"_index":1819,"title":{},"body":{"injectables/QuizService.html":{}}}],["quizimagecomponent",{"_index":272,"title":{"components/QuizImageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizinfocomponent",{"_index":274,"title":{"components/QuizInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizname",{"_index":550,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["quizresultcomponent",{"_index":275,"title":{"components/QuizResultComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizsearchcomponent",{"_index":277,"title":{"components/QuizSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizservice",{"_index":434,"title":{"injectables/QuizService.html":{}},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["quizservice,private",{"_index":1657,"title":{},"body":{"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["quizservice:quizservice",{"_index":981,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["quiztime",{"_index":1459,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["quiztype",{"_index":1460,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["quiztypeincomponent",{"_index":279,"title":{"components/QuizTypeinComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":108,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/QuestionService.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"index.html":{}}}],["quizzes.filter(quiz",{"_index":398,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["radial",{"_index":496,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["radius",{"_index":744,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["random",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["rank",{"_index":1358,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["ranking",{"_index":1355,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["rate",{"_index":623,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["rated",{"_index":1556,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["rating",{"_index":618,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{}}}],["rating_form",{"_index":551,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["ray.cyclic.app/api/answer",{"_index":115,"title":{},"body":{"injectables/AnswerService.html":{}}}],["ray.cyclic.app/api/bookmark",{"_index":418,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["ray.cyclic.app/api/category/getallcategories\").pipe",{"_index":1814,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/category/getcategory/\"+id).pipe",{"_index":1816,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/friend/createfriend\",body",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/friend/deletefriend/\"+friendobjid).pipe",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/friend/getfriends/\"+userid).pipe",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/history",{"_index":1145,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ray.cyclic.app/api/image/upload\",file",{"_index":1542,"title":{},"body":{"injectables/QuestionService.html":{}}}],["ray.cyclic.app/api/leaderboard",{"_index":1407,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["ray.cyclic.app/api/question",{"_index":1526,"title":{},"body":{"injectables/QuestionService.html":{}}}],["ray.cyclic.app/api/quiz",{"_index":1801,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/rating/createrating",{"_index":1820,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/user",{"_index":1938,"title":{},"body":{"injectables/UserService.html":{}}}],["ray.cyclic.app/api/user/updateuser/\"+userid,userupdated",{"_index":1154,"title":{},"body":{"injectables/HistoryService.html":{}}}],["reaches",{"_index":1582,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["reactiveformsmodule",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":1570,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["red",{"_index":902,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["redirectto",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registered",{"_index":1920,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser",{"_index":1865,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1863,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":1862,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration_form",{"_index":1864,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":281,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["related",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["remaining",{"_index":1833,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["removal",{"_index":1106,"title":{},"body":{"components/FriendsComponent.html":{}}}],["remove",{"_index":450,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendsComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["removebookmark",{"_index":432,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removebookmark(quiz",{"_index":447,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removefriend",{"_index":1067,"title":{},"body":{"components/FriendsComponent.html":{}}}],["removefriend(friend",{"_index":1080,"title":{},"body":{"components/FriendsComponent.html":{}}}],["removes",{"_index":414,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{}}}],["repeat",{"_index":521,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["repeat(auto",{"_index":1236,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["represents",{"_index":939,"title":{},"body":{"classes/FRIEND.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{}}}],["request",{"_index":1881,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["requests",{"_index":1678,"title":{},"body":{"components/QuizInfoComponent.html":{},"injectables/UserService.html":{}}}],["required",{"_index":570,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["reruns",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":482,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["res.name",{"_index":651,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["res.tostring",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["res?._id",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["res[\"message",{"_index":1104,"title":{},"body":{"components/FriendsComponent.html":{}}}],["res['userid",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["reset",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":837,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["responsible",{"_index":828,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["result",{"_index":102,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["result'},{'name",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["result.component",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["result.component.html",{"_index":1724,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.scss",{"_index":1723,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts",{"_index":1722,"title":{},"body":{"components/QuizResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:10",{"_index":1734,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:11",{"_index":1735,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:12",{"_index":1733,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:13",{"_index":1725,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.component.ts:27",{"_index":1727,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["result.foreach(element",{"_index":658,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["result/:user/:quiz/:result",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result/quiz",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizResultComponent.html":{},"coverage.html":{}}}],["result['email_status",{"_index":1880,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["retrieved",{"_index":1079,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizResultComponent.html":{}}}],["retrieves",{"_index":105,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["retrieving",{"_index":1343,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{}}}],["return",{"_index":138,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1349,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["returns",{"_index":88,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["rgb(4",{"_index":716,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["rgb(4,82,137",{"_index":1229,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{}}}],["rgba(0",{"_index":1384,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["rgba(22",{"_index":722,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["rgba(22,0,84,1",{"_index":1231,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{}}}],["rgba(255",{"_index":753,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["rgba(4",{"_index":721,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["rgba(4,82,137,1",{"_index":1230,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{}}}],["rgba(82",{"_index":725,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["rgba(82,1,63,1",{"_index":1232,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{}}}],["right",{"_index":506,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":133,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["rotate(0deg",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["rotate(720deg",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["route",{"_index":564,"title":{},"body":{"components/ChallengeComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["router",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["router:activatedroute",{"_index":1041,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["router:router",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["routermodule",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":919,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["routes",{"_index":349,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2067,"title":{},"body":{"index.html":{}}}],["running",{"_index":2080,"title":{},"body":{"index.html":{}}}],["runs",{"_index":441,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ryutaro",{"_index":1897,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["s",{"_index":681,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["sans",{"_index":1380,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["saving",{"_index":1631,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["scale",{"_index":518,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["scale(1.1",{"_index":1009,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["scale(1.2",{"_index":1007,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["score",{"_index":584,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/User.html":{}}}],["scored",{"_index":683,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["scoredisplay",{"_index":552,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["search",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{}}}],["search'},{'name",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["search(value",{"_index":453,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["search.component",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["search.component.html",{"_index":1743,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.scss",{"_index":1742,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts",{"_index":1741,"title":{},"body":{"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:15",{"_index":1744,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:27",{"_index":1762,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:28",{"_index":1763,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:30",{"_index":1764,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:40",{"_index":1758,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:65",{"_index":1747,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search/:id",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search/quiz",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search_bar",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["search_quiz",{"_index":1760,"title":{},"body":{"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{}}}],["search_quiz(id",{"_index":1797,"title":{},"body":{"injectables/QuizService.html":{}}}],["searched",{"_index":455,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["searcheditem",{"_index":430,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["second",{"_index":597,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["see",{"_index":992,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["select",{"_index":910,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["select'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["select.component",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["select.component.html",{"_index":1013,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.scss",{"_index":1012,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts",{"_index":1011,"title":{},"body":{"components/FriendSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:17",{"_index":1040,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:18",{"_index":1038,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:19",{"_index":1036,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:22",{"_index":1037,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:23",{"_index":1018,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:40",{"_index":1027,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:58",{"_index":1039,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:64",{"_index":1032,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select.component.ts:73",{"_index":1019,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["select/:id\",component",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["select/friend",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FriendSelectComponent.html":{},"coverage.html":{}}}],["selected",{"_index":977,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{}}}],["selectedcategory",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectedcatid",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["selects",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["sends",{"_index":1624,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["sent",{"_index":643,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["serif",{"_index":1381,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["serve",{"_index":2065,"title":{},"body":{"index.html":{}}}],["serve(back",{"_index":2076,"title":{},"body":{"index.html":{}}}],["server",{"_index":835,"title":{},"body":{"components/EditProfileComponent.html":{},"index.html":{}}}],["service",{"_index":1023,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["services",{"_index":438,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["services/answer.service",{"_index":634,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/bookmark.service",{"_index":474,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["services/history.service",{"_index":637,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/leaderboard.service",{"_index":1351,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["services/question.service",{"_index":633,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/quiz.service",{"_index":475,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["services/user.service",{"_index":640,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["session",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["sessionstorage",{"_index":1751,"title":{},"body":{"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["sessionstorage.setitem(\"user",{"_index":708,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{}}}],["sessionstorage.setitem(\"user\",json.stringify(user",{"_index":1610,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["set",{"_index":464,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{}}}],["setinterval",{"_index":665,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["sets",{"_index":443,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["setting",{"_index":1630,"title":{},"body":{"components/QuizImageComponent.html":{}}}],["setup",{"_index":844,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["several",{"_index":973,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["shadow",{"_index":1383,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["share",{"_index":1589,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["short",{"_index":888,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["show",{"_index":1108,"title":{},"body":{"components/FriendsComponent.html":{}}}],["side",{"_index":2055,"title":{},"body":{"index.html":{}}}],["sign",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":2043,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1345,"title":{},"body":{"components/LeaderboardComponent.html":{},"index.html":{}}}],["site",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":508,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["solid",{"_index":897,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizImageComponent.html":{},"components/RegistrationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["space",{"_index":531,"title":{},"body":{"components/BookmarksComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["specifc",{"_index":1522,"title":{},"body":{"injectables/QuestionService.html":{}}}],["specific",{"_index":106,"title":{},"body":{"injectables/AnswerService.html":{},"classes/History.html":{},"components/QuizInfoComponent.html":{}}}],["specified",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["sporcle",{"_index":2044,"title":{},"body":{"index.html":{}}}],["src/.../errorhandler.ts",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/bookmarks/bookmarks.component.ts",{"_index":426,"title":{},"body":{"components/BookmarksComponent.html":{},"coverage.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:19",{"_index":458,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:24",{"_index":461,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:29",{"_index":467,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:34",{"_index":435,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:46",{"_index":440,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:64",{"_index":449,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:87",{"_index":454,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/challenge/challenge.component.ts",{"_index":537,"title":{},"body":{"components/ChallengeComponent.html":{},"coverage.html":{}}}],["src/app/challenge/challenge.component.ts:101",{"_index":590,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:152",{"_index":586,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:159",{"_index":598,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:169",{"_index":575,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:23",{"_index":574,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:28",{"_index":615,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:29",{"_index":605,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:30",{"_index":610,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:31",{"_index":625,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:32",{"_index":613,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:33",{"_index":611,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:34",{"_index":630,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:38",{"_index":609,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:42",{"_index":626,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:46",{"_index":624,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:51",{"_index":607,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:56",{"_index":568,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:73",{"_index":614,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:78",{"_index":606,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:84",{"_index":628,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:89",{"_index":620,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/challenge/challenge.component.ts:93",{"_index":617,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["src/app/edit",{"_index":813,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/friend",{"_index":957,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"coverage.html":{}}}],["src/app/friends/friends.component.ts",{"_index":1061,"title":{},"body":{"components/FriendsComponent.html":{},"coverage.html":{}}}],["src/app/friends/friends.component.ts:106",{"_index":1085,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:15",{"_index":1092,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:17",{"_index":1087,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:20",{"_index":1088,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:21",{"_index":1091,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:27",{"_index":1078,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:40",{"_index":1068,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:43",{"_index":1090,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:55",{"_index":1069,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:81",{"_index":1081,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/friends/friends.component.ts:97",{"_index":1076,"title":{},"body":{"components/FriendsComponent.html":{}}}],["src/app/guards/edit",{"_index":914,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts",{"_index":1448,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts:15",{"_index":1449,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/home/home.component.ts",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:103",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:115",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:17",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:28",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:33",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:40",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:62",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:88",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts",{"_index":1336,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:12",{"_index":1350,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:13",{"_index":1342,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:26",{"_index":1347,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:36",{"_index":1344,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:68",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/master",{"_index":1455,"title":{},"body":{"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["src/app/models/answer.ts",{"_index":38,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["src/app/models/answer.ts:12",{"_index":1479,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:16",{"_index":1476,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:20",{"_index":1477,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:31",{"_index":49,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:35",{"_index":52,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:39",{"_index":43,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:43",{"_index":46,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:47",{"_index":42,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:51",{"_index":41,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:61",{"_index":1902,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:65",{"_index":1903,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:8",{"_index":1478,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/bookmarks.ts",{"_index":6,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"coverage.html":{}}}],["src/app/models/bookmarks.ts:12",{"_index":403,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:16",{"_index":402,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:21",{"_index":400,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:30",{"_index":25,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:34",{"_index":21,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:8",{"_index":401,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/categories.ts",{"_index":533,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/models/categories.ts:12",{"_index":536,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:16",{"_index":534,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:8",{"_index":535,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/friend.ts",{"_index":934,"title":{},"body":{"classes/FRIEND.html":{},"coverage.html":{}}}],["src/app/models/friend.ts:5",{"_index":938,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/friend.ts:6",{"_index":937,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/friend.ts:7",{"_index":936,"title":{},"body":{"classes/FRIEND.html":{}}}],["src/app/models/history.ts",{"_index":1115,"title":{},"body":{"classes/History.html":{},"classes/HistoryArr.html":{},"coverage.html":{}}}],["src/app/models/history.ts:13",{"_index":1125,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:14",{"_index":1129,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:15",{"_index":1126,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:16",{"_index":1128,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:17",{"_index":1127,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:18",{"_index":1124,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:19",{"_index":1122,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:20",{"_index":1123,"title":{},"body":{"classes/HistoryArr.html":{}}}],["src/app/models/history.ts:5",{"_index":1117,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/history.ts:6",{"_index":1119,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/history.ts:7",{"_index":1118,"title":{},"body":{"classes/History.html":{}}}],["src/app/models/qna.ts",{"_index":1490,"title":{},"body":{"classes/NewQuestionAnswer.html":{},"coverage.html":{}}}],["src/app/models/qna.ts:13",{"_index":1495,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:18",{"_index":1492,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:24",{"_index":1493,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:8",{"_index":1496,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/question.ts",{"_index":1481,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["src/app/models/question.ts:13",{"_index":1485,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:18",{"_index":1482,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:28",{"_index":1500,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:33",{"_index":1501,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:38",{"_index":1499,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:43",{"_index":1498,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:48",{"_index":1497,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:58",{"_index":1904,"title":{},"body":{"classes/UpdateQuestion.html":{}}}],["src/app/models/question.ts:8",{"_index":1484,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/quiz.ts",{"_index":767,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts:12",{"_index":775,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:16",{"_index":773,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:20",{"_index":772,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:24",{"_index":785,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:28",{"_index":778,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:32",{"_index":771,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:36",{"_index":777,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:40",{"_index":783,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:49",{"_index":1549,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:53",{"_index":1548,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:57",{"_index":1547,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:61",{"_index":1546,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:65",{"_index":1554,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:69",{"_index":1551,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:73",{"_index":1545,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:77",{"_index":1550,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:8",{"_index":776,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:81",{"_index":1552,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:85",{"_index":1553,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:90",{"_index":1544,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:94",{"_index":1543,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/user.ts",{"_index":790,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:100",{"_index":931,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:110",{"_index":1453,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:114",{"_index":1454,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:13",{"_index":1913,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1908,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1912,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1907,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1909,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1910,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1911,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:42",{"_index":1905,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:52",{"_index":808,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:57",{"_index":802,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:61",{"_index":807,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:65",{"_index":799,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:69",{"_index":804,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:73",{"_index":805,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:8",{"_index":1906,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:83",{"_index":933,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:88",{"_index":930,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:92",{"_index":932,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:96",{"_index":929,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/pipes/book",{"_index":379,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter",{"_index":943,"title":{},"body":{"pipes/FilterFriendsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts",{"_index":952,"title":{},"body":{"pipes/FilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts:22",{"_index":953,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/quiz",{"_index":1555,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1861,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:103",{"_index":1874,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:109",{"_index":1875,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:115",{"_index":1876,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":1866,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:22",{"_index":1870,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:27",{"_index":1869,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:53",{"_index":1868,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:85",{"_index":1871,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:91",{"_index":1872,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:97",{"_index":1873,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/services/answer.service.ts",{"_index":59,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/services/answer.service.ts:13",{"_index":75,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:24",{"_index":116,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:31",{"_index":83,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:47",{"_index":92,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:62",{"_index":107,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:73",{"_index":104,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:85",{"_index":110,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:99",{"_index":98,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/bookmark.service.ts",{"_index":405,"title":{},"body":{"injectables/BookmarkService.html":{},"coverage.html":{}}}],["src/app/services/bookmark.service.ts:13",{"_index":409,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:24",{"_index":419,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:31",{"_index":416,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:42",{"_index":411,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:58",{"_index":413,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/history.service.ts",{"_index":1130,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history.service.ts:10",{"_index":1135,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:16",{"_index":1146,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:18",{"_index":1137,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:28",{"_index":1139,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:32",{"_index":1141,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:36",{"_index":1143,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/leaderboard.service.ts",{"_index":1404,"title":{},"body":{"injectables/LeaderboardService.html":{},"coverage.html":{}}}],["src/app/services/leaderboard.service.ts:10",{"_index":1405,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/leaderboard.service.ts:17",{"_index":1408,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/leaderboard.service.ts:19",{"_index":1406,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["src/app/services/question.service.ts",{"_index":1502,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:100",{"_index":1519,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:106",{"_index":1513,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:14",{"_index":1510,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:25",{"_index":1527,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:32",{"_index":1517,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:48",{"_index":1515,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:63",{"_index":1523,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:74",{"_index":1521,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:86",{"_index":1525,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":1770,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:108",{"_index":1788,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:119",{"_index":1798,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:132",{"_index":1781,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:14",{"_index":1779,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:140",{"_index":1795,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:25",{"_index":1802,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:32",{"_index":1783,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:48",{"_index":1796,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:60",{"_index":1800,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:76",{"_index":1786,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:86",{"_index":1792,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:97",{"_index":1791,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/user.service.ts",{"_index":1914,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:110",{"_index":1934,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:121",{"_index":1926,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:132",{"_index":1932,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1917,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":1919,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1924,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:61",{"_index":1930,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:77",{"_index":1937,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:93",{"_index":1922,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/utilities/errorhandler.ts",{"_index":2005,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utilities/password.validator.ts",{"_index":2007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2054,"title":{},"body":{"index.html":{}}}],["start",{"_index":608,"title":{},"body":{"components/ChallengeComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"index.html":{}}}],["started",{"_index":2034,"title":{"index.html":{}},"body":{"index.html":{}}}],["starts",{"_index":595,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["state",{"_index":918,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["statements",{"_index":1959,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":1755,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["status",{"_index":1452,"title":{},"body":{"guards/LoginGuard.html":{},"index.html":{}}}],["statuses",{"_index":2035,"title":{},"body":{"index.html":{}}}],["stop",{"_index":599,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["stops",{"_index":579,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["stoptimer",{"_index":558,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["storage",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["store",{"_index":975,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["stored",{"_index":697,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendsComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["stores",{"_index":1031,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["style",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["styled",{"_index":1386,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["styles",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["sub",{"_index":553,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["submit",{"_index":714,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["submits",{"_index":578,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["submitted",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribes",{"_index":965,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["subscription",{"_index":976,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["subtitle",{"_index":1365,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["success",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["successful",{"_index":836,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["successfully",{"_index":1753,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["such",{"_index":1746,"title":{},"body":{"components/QuizSearchComponent.html":{},"index.html":{}}}],["support",{"_index":2090,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":797,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["svg",{"_index":2091,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1375,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["tainer",{"_index":1359,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["take",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["taken",{"_index":1877,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["takes",{"_index":1748,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["tbody",{"_index":1387,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["tech",{"_index":2053,"title":{},"body":{"index.html":{}}}],["template",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["test",{"_index":922,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["testauto",{"_index":2071,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2068,"title":{},"body":{"index.html":{}}}],["text",{"_index":51,"title":{},"body":{"classes/Answer.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["this.answer_form",{"_index":660,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answer_form.get(element._id)?.value",{"_index":675,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answers.foreach(element",{"_index":676,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answers.push(element",{"_index":659,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.answerservice.get_question_answer(element._id).subscribe((result",{"_index":657,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.bookmarks",{"_index":481,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarks.foreach(element",{"_index":483,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.add_bookmark(bookmark).subscribe((res",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.bookmarkservice.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res",{"_index":487,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.get_bookmarks(this.user._id).subscribe((res",{"_index":480,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.booltimesup",{"_index":668,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.buttondispl",{"_index":1112,"title":{},"body":{"components/FriendsComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.catagories",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.catagories.find(val",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.category",{"_index":1696,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.checkanswers",{"_index":670,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.clipboard.copy(link",{"_index":1056,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["this.clipboard.copy(this.link",{"_index":1615,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.clipboard.copy(this.user._id",{"_index":1111,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.confirm_password?.setvalue(this.userobj.password",{"_index":871,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.countdowntimer",{"_index":664,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.created_by",{"_index":1700,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.current_user",{"_index":1042,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.description",{"_index":1692,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.done",{"_index":693,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.email?.setvalue(this.userobj.email",{"_index":869,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.email?.value",{"_index":876,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.first_name?.setvalue(this.userobj.firstname",{"_index":866,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.first_name?.value",{"_index":873,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.friend_form.get(\"friend_id\")?.value",{"_index":1094,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.friendname",{"_index":663,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.friends",{"_index":1045,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.friends.push(res",{"_index":1101,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.friends.splice(idx",{"_index":1105,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.hist_id",{"_index":1047,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["this.history",{"_index":648,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["this.history.length",{"_index":987,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["this.history.score",{"_index":685,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.historyservice.create_history(history).subscribe((res",{"_index":702,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.historyservice.get_history(this.id).subscribe((res",{"_index":985,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["this.historyservice.get_history_by_id(historyid).subscribe((result",{"_index":647,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.historyservice.update_user_plays(user.plays",{"_index":705,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.historyservice.update_user_plays(user.plays,user._id).subscribe((res",{"_index":1609,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.http.delete(\"https://clumsy",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.base_url",{"_index":1811,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.delete(this.base_url+\"/deleteanswer/\"+id).pipe",{"_index":153,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.delete(this.base_url+\"/deletebookmark/\"+bookmark._id).pipe",{"_index":425,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.delete(this.base_url+\"/deletequestion/\"+question._id).pipe",{"_index":1540,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(\"https://clumsy",{"_index":1813,"title":{},"body":{"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["this.http.get(this.base_url",{"_index":1805,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/emailexists",{"_index":1941,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.base_url+\"/getallanswers\").pipe",{"_index":148,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getallquestions\").pipe",{"_index":1535,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getanswers/\"+questionid).pipe",{"_index":149,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getbookmarks/\"+userid).pipe",{"_index":421,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.get(this.base_url+\"/gethistory/\"+historyid",{"_index":1149,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.get(this.base_url+\"/getname/\"+id).pipe",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.base_url+\"/getquestions/\"+id).pipe",{"_index":1536,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getquiz/\"+id).pipe",{"_index":1815,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/getquizname/\"+id).pipe",{"_index":1821,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/getuserhistory/\"+userid",{"_index":1148,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.get(this.base_url+\"/searchquiz/\"+id).pipe",{"_index":1817,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/userhighestplays\").pipe",{"_index":1409,"title":{},"body":{"injectables/LeaderboardService.html":{}}}],["this.http.patch(\"https://clumsy",{"_index":1153,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.patch(this.base_url+\"/updateanswer/\"+id",{"_index":152,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.patch(this.base_url+\"/updatequestion/\"+id",{"_index":1539,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.patch(this.base_url+\"/updatequiz",{"_index":1809,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(this.base_url+\"/updateuser/\"+userid,userupdated",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(\"https://clumsy",{"_index":1541,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.base_url",{"_index":139,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["this.http.post(this.base_url+\"/createbookmark",{"_index":424,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.post(this.base_url+\"/createhistory\",history",{"_index":1147,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.http.post(this.base_url+\"/createmanyanswers\",nans",{"_index":147,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.post(this.base_url+\"/createmanyquestions\",nquestions",{"_index":1533,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.post(this.base_url+\"/createuser\",usernew",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url+\"/login\",body",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["this.id",{"_index":982,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.leaderboardservice.getleaderboard().subscribe((res",{"_index":1352,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.link",{"_index":1605,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.login_form.get(\"email",{"_index":1444,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"email\")?.value",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password",{"_index":1445,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password\")?.value",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.reset",{"_index":1443,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1690,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.add(\"is",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.remove(\"is",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password?.setvalue(this.userobj.password",{"_index":870,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.password?.value",{"_index":877,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.questions",{"_index":653,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questions.foreach(element",{"_index":655,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questions.length",{"_index":684,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.questionservice.get_quiz_questions(result.quizid).subscribe((value",{"_index":652,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.questionservice.get_quiz_questions(this.quiz_id).subscribe((value",{"_index":1604,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quiz",{"_index":1470,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["this.quiz.timer",{"_index":1474,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz.type",{"_index":1472,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz_id",{"_index":700,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quizid",{"_index":1468,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizResultComponent.html":{}}}],["this.quizname",{"_index":650,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quizservice.addrating(parseint(ans),this.quiz_id,user._id).subscribe((res",{"_index":1612,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quizservice.get_category_byid(this.category).subscribe(res",{"_index":1706,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.quizservice.get_quiz_byid(element.quizid).subscribe((res",{"_index":485,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizservice.get_quiz_byid(result.quizid).subscribe((res",{"_index":649,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.id).subscribe((value",{"_index":1689,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.quiz_id).subscribe((res",{"_index":1603,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.quizid).subscribe((res",{"_index":1469,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizservice.get_quiz_categories().subscribe((res",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.quizservice.getallquiz().subscribe((res",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.quizservice.search_quiz(this.id).subscribe(res",{"_index":1765,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["this.quiztime",{"_index":1473,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiztype",{"_index":1471,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizzes",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.quizzes.foreach(quiz",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.quizzes.push(res",{"_index":486,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizzes.splice(idx,1",{"_index":489,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizzes[math.floor(math.random()*this.quizzes.length",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.rated",{"_index":1614,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.rating",{"_index":1694,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.rating_form.get(\"rating\")?.value",{"_index":695,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.registration_form.get(\"confirm_password",{"_index":1893,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"email",{"_index":1891,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"first_name",{"_index":1888,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"password",{"_index":1892,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"surname",{"_index":1889,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"username",{"_index":1890,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.reset",{"_index":1884,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.result",{"_index":1739,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":642,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1442,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1883,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/quiz",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["this.router.navigatebyurl(url",{"_index":1224,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.params.subscribe((params",{"_index":1046,"title":{},"body":{"components/FriendSelectComponent.html":{}}}],["this.score",{"_index":1354,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.scoredisplay",{"_index":682,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.search_bar?.nativeelement.value",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.searcheditem",{"_index":1048,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.selectedcategory",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectedcatid",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.stoptimer",{"_index":672,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.sub",{"_index":641,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.sub.unsubscribe",{"_index":1708,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.surname?.setvalue(this.userobj.surname",{"_index":867,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.surname?.value",{"_index":874,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.thumbnail",{"_index":1704,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.timeleft",{"_index":666,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.timeleftdisplay",{"_index":680,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["this.timevalue",{"_index":1702,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.toggled",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["this.total_played",{"_index":1698,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.update_form.get(\"confirm_password",{"_index":886,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"email",{"_index":884,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"first_name",{"_index":881,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"password",{"_index":885,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"surname",{"_index":882,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"username",{"_index":883,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user",{"_index":696,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.user.username",{"_index":1049,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.userid",{"_index":1736,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["this.username?.setvalue(this.userobj.username",{"_index":868,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.value",{"_index":875,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.userobj",{"_index":864,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userobj._id",{"_index":872,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.users",{"_index":1353,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.check_email_exists(user.email).subscribe((res",{"_index":1879,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.create_friends(friendid!,this.user.username).subscribe((res",{"_index":1098,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.create_user(user).subscribe",{"_index":1882,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.delete_friend(friend._id).subscribe((res",{"_index":1103,"title":{},"body":{"components/FriendsComponent.html":{}}}],["this.userservice.edit_user(user,userid).subscribe",{"_index":878,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.get_usernameid(quiz.creatorid).subscribe(res",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.userservice.get_usernameid(this.created_by).subscribe(res",{"_index":1707,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.userservice.get_usernameid(this.history.userid).subscribe((res",{"_index":662,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["this.userservice.getfriends(this.user._id).subscribe((res",{"_index":1044,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["this.userservice.login(body).subscribe((res",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.winner",{"_index":687,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["throwerror",{"_index":127,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["thumbnail",{"_index":788,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["tilemain",{"_index":994,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["tilesub",{"_index":995,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["tilesub:hover",{"_index":1006,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["time",{"_index":577,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"components/MasterAnswerComponent.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timeleft",{"_index":560,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timeleftdisplay",{"_index":554,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["timer",{"_index":580,"title":{},"body":{"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["times",{"_index":780,"title":{},"body":{"classes/CreateQuiz.html":{},"components/FriendInfoComponent.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["timevalue",{"_index":1664,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["title",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/FriendInfoComponent.html":{},"components/LeaderboardComponent.html":{}}}],["toggle",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["toggled",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":507,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["total",{"_index":988,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["total_played",{"_index":1665,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["tr",{"_index":1388,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["tr:last",{"_index":1394,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["tr:nth",{"_index":1391,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["transform",{"_index":382,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["transform(friends",{"_index":946,"title":{},"body":{"pipes/FilterFriendsPipe.html":{}}}],["transform(quizzes",{"_index":383,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["transition",{"_index":997,"title":{},"body":{"components/FriendInfoComponent.html":{},"components/QuizInfoComponent.html":{}}}],["translatey",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["translatey(0",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizSearchComponent.html":{}}}],["transparent",{"_index":500,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"components/FriendsComponent.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":1928,"title":{},"body":{"injectables/UserService.html":{}}}],["try",{"_index":1886,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["tslib",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["tsukata",{"_index":1898,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["two",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"pipes/FilterPipe.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":1534,"title":{},"body":{"injectables/QuestionService.html":{}}}],["type(even",{"_index":1392,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["typein",{"_index":1823,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein',this.id",{"_index":1713,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["typein'},{'name",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["typein.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["typein.component.html",{"_index":1825,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.scss",{"_index":1824,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts",{"_index":1822,"title":{},"body":{"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["typein.component.ts:104",{"_index":1838,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:111",{"_index":1842,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:127",{"_index":1829,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:178",{"_index":1828,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:20",{"_index":1827,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:200",{"_index":1836,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:22",{"_index":1851,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:23",{"_index":1843,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:24",{"_index":1852,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:25",{"_index":1856,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:26",{"_index":1846,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:27",{"_index":1849,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:28",{"_index":1848,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:29",{"_index":1853,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:30",{"_index":1858,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:34",{"_index":1847,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:38",{"_index":1857,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:42",{"_index":1855,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:44",{"_index":1845,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:46",{"_index":1826,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:50",{"_index":1850,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:52",{"_index":1844,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:54",{"_index":1854,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein.component.ts:67",{"_index":1839,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["typein/:id",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["typein/quiz",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["types",{"_index":2051,"title":{},"body":{"index.html":{}}}],["typically",{"_index":1728,"title":{},"body":{"components/QuizResultComponent.html":{}}}],["undefined",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["unique",{"_index":942,"title":{},"body":{"classes/FRIEND.html":{}}}],["unknown",{"_index":810,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["unsubscribes",{"_index":1674,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["until",{"_index":1841,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["up",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["update",{"_index":112,"title":{},"body":{"injectables/AnswerService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"classes/UpdateQuestion.html":{},"injectables/UserService.html":{}}}],["update_answer",{"_index":71,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id",{"_index":109,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id:string",{"_index":150,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_form",{"_index":817,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["update_question",{"_index":1509,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id",{"_index":1524,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id:string",{"_index":1537,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_quiz",{"_index":1778,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_quiz(update",{"_index":1799,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_user_plays",{"_index":1134,"title":{},"body":{"injectables/HistoryService.html":{},"components/QuizTypeinComponent.html":{}}}],["update_user_plays(currplays",{"_index":1142,"title":{},"body":{"injectables/HistoryService.html":{}}}],["updateanswer",{"_index":54,"title":{"classes/UpdateAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["updated",{"_index":55,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["updatequestion",{"_index":1488,"title":{"classes/UpdateQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["updates",{"_index":111,"title":{},"body":{"injectables/AnswerService.html":{},"components/ChallengeComponent.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["updateuser",{"_index":820,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updatevalue",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatevalue(value",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["updating",{"_index":456,"title":{},"body":{"components/BookmarksComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/QuizImageComponent.html":{},"classes/User.html":{},"index.html":{}}}],["url",{"_index":118,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"classes/CreateQuiz.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizResultComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["url(\"../../assets/images/cube.jpeg",{"_index":1900,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["url(\"../../assets/images/friend.jpeg",{"_index":1059,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["url(\"../../assets/images/grad.jpeg",{"_index":1901,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["url(\"../../assets/images/minimalistroom.jpeg",{"_index":1447,"title":{},"body":{"components/LoginComponent.html":{}}}],["url(\"../../assets/images/pexels",{"_index":1366,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{}}}],["url(\"../../assets/images/prism.jpg",{"_index":513,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["url(\"../../assets/images/room2.jpeg",{"_index":892,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["url(\"../../assets/pexels",{"_index":1896,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["url('../../assets/images/prisms.jpeg",{"_index":1716,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["url='/quiz",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["urltree",{"_index":924,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["usage",{"_index":2062,"title":{},"body":{"index.html":{}}}],["use",{"_index":437,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizResultComponent.html":{},"injectables/UserService.html":{}}}],["used",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["user",{"_index":175,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":479,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["user._id",{"_index":701,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["user._id).subscribe((res",{"_index":706,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["user.firstname",{"_index":699,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["user.plays",{"_index":707,"title":{},"body":{"components/ChallengeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["user.username",{"_index":1114,"title":{},"body":{"components/FriendsComponent.html":{},"components/LeaderboardComponent.html":{}}}],["user=null",{"_index":629,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["userid",{"_index":14,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":798,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"pipes/FilterFriendsPipe.html":{},"components/FriendSelectComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["usernew",{"_index":1943,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj",{"_index":818,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["userobj._id",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["userobj:user",{"_index":984,"title":{},"body":{"components/FriendInfoComponent.html":{}}}],["users",{"_index":800,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LeaderboardComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["userservice",{"_index":562,"title":{"injectables/UserService.html":{}},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice:userservice",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["userupdated",{"_index":1150,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/UserService.html":{}}}],["uses",{"_index":1837,"title":{},"body":{"components/QuizTypeinComponent.html":{}}}],["using",{"_index":593,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"index.html":{}}}],["utilities/errorhandler",{"_index":131,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/HistoryService.html":{},"injectables/LeaderboardService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["utilities/password.validator",{"_index":862,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["val.name",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{}}}],["valid.required",{"_index":896,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":895,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerror",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":841,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":839,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":840,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":838,"title":{},"body":{"components/EditProfileComponent.html":{},"components/FriendsComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"components/ChallengeComponent.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/FRIEND.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"classes/History.html":{},"classes/HistoryArr.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/LeaderboardService.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.average",{"_index":1695,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.category",{"_index":1697,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.creatorid",{"_index":1701,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.description",{"_index":1693,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.name",{"_index":1691,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.plays",{"_index":1699,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.thumbnail",{"_index":1705,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.timer",{"_index":1703,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["values",{"_index":644,"title":{},"body":{"components/ChallengeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizResultComponent.html":{},"injectables/QuizService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":457,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{},"coverage.html":{}}}],["variables",{"_index":616,"title":{"miscellaneous/variables.html":{}},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":2050,"title":{},"body":{"index.html":{}}}],["verifying",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["version",{"_index":31,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"properties.html":{}}}],["viewchild",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('navbar_menu",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('search_bar",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizResultComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["weight",{"_index":762,"title":{},"body":{"components/ChallengeComponent.html":{},"components/FriendInfoComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["well",{"_index":2085,"title":{},"body":{"index.html":{}}}],["wheat",{"_index":1361,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["whether",{"_index":47,"title":{},"body":{"classes/Answer.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{}}}],["white",{"_index":528,"title":{},"body":{"components/BookmarksComponent.html":{},"components/ChallengeComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["whitesmoke",{"_index":1060,"title":{},"body":{"components/FriendSelectComponent.html":{},"components/FriendsComponent.html":{}}}],["width",{"_index":764,"title":{},"body":{"components/ChallengeComponent.html":{},"components/EditProfileComponent.html":{},"components/FriendInfoComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/QuizTypeinComponent.html":{},"components/RegistrationComponent.html":{}}}],["winner",{"_index":555,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["within",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["without",{"_index":472,"title":{},"body":{"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{}}}],["won",{"_index":688,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["worlds",{"_index":1894,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["worthy",{"_index":691,"title":{},"body":{"components/ChallengeComponent.html":{}}}],["x",{"_index":760,"title":{},"body":{"components/ChallengeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizImageComponent.html":{},"components/QuizTypeinComponent.html":{}}}],["yourself",{"_index":1096,"title":{},"body":{"components/FriendsComponent.html":{}}}],["zone.js",{"_index":2024,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddBookmark.html":{"url":"classes/AddBookmark.html","title":"class - AddBookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddBookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Add Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:34\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:30\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                Answer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:51\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:47\n                        \n                    \n\n            \n                \n                    id of Answer from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:39\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:43\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:31\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:35\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/answer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive for managing answers\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_answer\n                            \n                            \n                                create_many_answers\n                            \n                            \n                                delete_answer\n                            \n                            \n                                get_question_answer\n                            \n                            \n                                getAllAnswers\n                            \n                            \n                                update_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/answer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Angular Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_answer\n                        \n                    \n                \n            \n            \n                \ncreate_answer(answer: NewAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:31\n                \n            \n\n\n            \n                \n                    Creates a new answer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                NewAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new answer object to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the created answer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_answers\n                        \n                    \n                \n            \n            \n                \ncreate_many_answers(answerArr: NewAnswer[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates multiple answers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    answerArr\n                                    \n                                            NewAnswer[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of new answer objects to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of an array of created answers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_answer\n                        \n                    \n                \n            \n            \n                \ndelete_answer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:99\n                \n            \n\n\n            \n                \n                    Deletes an answer from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the answer to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the deletion result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_question_answer\n                        \n                    \n                \n            \n            \n                \nget_question_answer(QuestionID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:73\n                \n            \n\n\n            \n                \n                    Retrieves answers for a specific question\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    QuestionID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the question\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of an array of answers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAnswers\n                        \n                    \n                \n            \n            \n                \ngetAllAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:62\n                \n            \n\n\n            \n                \n                    Retrieves all answers for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of an array of answers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_answer\n                        \n                    \n                \n            \n            \n                \nupdate_answer(id: String, answer: UpdateAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:85\n                \n            \n\n\n            \n                \n                    Updates an answer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the answer to update\n\n                                    \n                                \n                                \n                                    answer\n                                    \n                                                UpdateAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated answer object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the updated answer\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/answer\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/answer.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for answer API calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Answer, NewAnswer, UpdateAnswer } from '../models/answer';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive for managing answers\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  /**\n   * Angular Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for answer API calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/answer\";\n\n    /**\n   * Creates a new answer\n   * @param answer The new answer object to create\n   * @returns An observable of the created answer\n   */\n  create_answer(answer: NewAnswer): Observable {\n    let nans = JSON.stringify(answer);\n    return this.http.post(this.base_url + \"/createAnswer\", nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates multiple answers\n   * @param answerArr The array of new answer objects to create\n   * @returns An observable of an array of created answers\n   */\n  create_many_answers(answerArr: NewAnswer[]) : Observable{\n    let nans = JSON.stringify(answerArr);\n    return this.http.post(this.base_url+\"/createManyAnswers\",nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Retrieves all answers for all quizzes\n   * @returns An observable of an array of answers\n   */\n  getAllAnswers() : Observable{\n    return this.http.get(this.base_url+\"/getAllAnswers\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Retrieves answers for a specific question\n   * @param QuestionID The ID of the question\n   * @returns An observable of an array of answers\n   */\n  get_question_answer(QuestionID: String) : Observable{\n    return this.http.get(this.base_url+\"/getAnswers/\"+QuestionID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Updates an answer\n   * @param id The ID of the answer to update\n   * @param answer The updated answer object\n   * @returns An observable of the updated answer\n   */\n  update_answer(id:String, answer:UpdateAnswer) : Observable{\n    let nans = JSON.stringify(answer);\n    return this.http.patch(this.base_url+\"/updateAnswer/\"+id, nans,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n  \n  /**\n   * Deletes an answer from the database\n   * @param id The ID of the answer to delete\n   * @returns An observable of the deletion result\n   */\n  delete_answer(id: string) : Observable{\n    return this.http.delete(this.base_url+\"/deleteAnswer/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular @Component generated by cli\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navbar_menu\n                            \n                            \n                                search_bar\n                            \n                            \n                                title\n                            \n                            \n                                toggled\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:55\n                \n            \n\n\n            \n                \n                    Search function, when the search bar is used, this function is called\nto take the search value and pass it as a parameter to the quiz-search component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n                    Function to toggle menu on mobile navbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navbar_menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbar_menu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Angular @ViewChild Decorator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_bar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('search_bar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz_Platform'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Title of site\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n            \n                \n                    Boolean value toggled: Is navbar-mobile toggled?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Angular @Component generated by cli\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of site\n   */\n  title = 'Quiz_Platform';\n\n  constructor(private router: Router){}\n\n  /*\n  * Get user from session storage, if there is no user, user will equal null\n  */ \n  user = sessionStorage.getItem(\"User\");\n\n  /**\n   * Angular @ViewChild Decorator\n   */\n  @ViewChild('navbar_menu') navbar_menu: ElementRef | undefined;\n\n  @ViewChild('search_bar') search_bar: ElementRef | undefined;\n\n  /**\n   * Boolean value toggled: Is navbar-mobile toggled?\n   */\n  toggled = false;\n\n  /**\n   * Function to toggle menu on mobile navbar\n   */\n  toggle(){\n    if(this.toggled == false){\n      this.navbar_menu?.nativeElement.classList.add(\"is-active\");\n      this.toggled = true;\n    }else{\n      this.navbar_menu?.nativeElement.classList.remove(\"is-active\");\n      this.toggled = false;\n    }\n    console.log(\"toggled navbar!\");\n  }\n\n  /**\n   * Search function, when the search bar is used, this function is called\n   * to take the search value and pass it as a parameter to the quiz-search component\n   */\n  search(){\n    let id = this.search_bar?.nativeElement.value;\n    console.log(`Searched for ${id}!`);\n\n    this.router.navigate(['/quiz-search', id]);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n      \n        Home\n      \n\n      \n        Leaderboard\n      \n\n      \n        \n          My Profile\n        \n        \n          \n            \n              \n            \n            Create Quiz\n          \n          \n            \n               \n            \n            Bookmarks\n          \n          \n            \n              \n              \n            \n            Friends\n          \n          \n            \n              \n            \n            Edit Profile\n          \n        \n      \n    \n    \n      \n        \n           \n            \n              \n              \n                \n              \n            \n          \n          \n            \n              Sign up\n            \n            \n              Log in\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .field{\n  margin: 5px;\n  justify-content: center;\n}\n\n.buttons{\n  justify-content: center;\n}\n\n.navbar{\n  background-color: #012e58;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Home                    Leaderboard                              My Profile                                                                            Create Quiz                                                                       Bookmarks                                                                                    Friends                                                                      Edit Profile                                                                                                                                                                                         Sign up                                      Log in                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nChallengeComponent\n\nChallengeComponent\n\nAppModule -->\n\nChallengeComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterFriendsPipe\n\nFilterFriendsPipe\n\nAppModule -->\n\nFilterFriendsPipe->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nFriendInfoComponent\n\nFriendInfoComponent\n\nAppModule -->\n\nFriendInfoComponent->AppModule\n\n\n\n\n\nFriendSelectComponent\n\nFriendSelectComponent\n\nAppModule -->\n\nFriendSelectComponent->AppModule\n\n\n\n\n\nFriendsComponent\n\nFriendsComponent\n\nAppModule -->\n\nFriendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizImageComponent\n\nQuizImageComponent\n\nAppModule -->\n\nQuizImageComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizResultComponent\n\nQuizResultComponent\n\nAppModule -->\n\nQuizResultComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nQuizTypeinComponent\n\nQuizTypeinComponent\n\nAppModule -->\n\nQuizTypeinComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BookFilterPipe\n                        \n                        \n                            BookmarksComponent\n                        \n                        \n                            ChallengeComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            FilterFriendsPipe\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            FriendInfoComponent\n                        \n                        \n                            FriendSelectComponent\n                        \n                        \n                            FriendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LeaderboardComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MasterAnswerComponent\n                        \n                        \n                            QuizAnswerComponent\n                        \n                        \n                            QuizCreateComponent\n                        \n                        \n                            QuizImageComponent\n                        \n                        \n                            QuizInfoComponent\n                        \n                        \n                            QuizResultComponent\n                        \n                        \n                            QuizSearchComponent\n                        \n                        \n                            QuizTypeinComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\n\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\nimport { BookFilterPipe } from './pipes/book-filter.pipe';\nimport { QuizTypeinComponent } from './quiz-typein/quiz-typein.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { FriendInfoComponent } from './friend-info/friend-info.component';\nimport { QuizResultComponent } from './quiz-result/quiz-result.component';\nimport { FilterFriendsPipe } from './pipes/filter-friends.pipe';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { QuizImageComponent } from './quiz-image/quiz-image.component';\nimport { FriendSelectComponent } from './friend-select/friend-select.component';\nimport { ChallengeComponent } from './challenge/challenge.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    EditProfileComponent,\n    LoginComponent,\n    QuizAnswerComponent,\n    HomeComponent,\n    QuizInfoComponent,\n    BookmarksComponent,\n    FilterPipe,\n    MasterAnswerComponent,\n    QuizCreateComponent,\n    QuizSearchComponent,\n    BookFilterPipe,\n\n    QuizTypeinComponent,\n    FriendsComponent,\n    FriendInfoComponent,\n    QuizResultComponent,\n    FilterFriendsPipe,\n    LeaderboardComponent,\n    QuizImageComponent,\n    FriendSelectComponent,\n    ChallengeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [FilterPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { EditProfileGuard } from './guards/edit-profile.guard';\nimport { LoginGuard } from './guards/login.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { QuizResultComponent } from './quiz-result/quiz-result.component';\nimport { FriendInfoComponent } from './friend-info/friend-info.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { QuizTypeinComponent } from './quiz-typein/quiz-typein.component';\nimport { QuizImageComponent } from './quiz-image/quiz-image.component';\nimport { FriendSelectComponent } from './friend-select/friend-select.component';\nimport { ChallengeComponent } from './challenge/challenge.component';\n\n\n/**\n * Add component and the path at which they will load in the router\n */\nconst routes: Routes = [\n  {path: \"home\", component: HomeComponent},\n  {path: \"register\", component: RegistrationComponent, canActivate: [LoginGuard]},\n  {path: \"login\", component: LoginComponent, canActivate: [LoginGuard]},\n  {path: \"edit-profile\", component: EditProfileComponent, canActivate: [EditProfileGuard]},\n  {path: \"answerQuiz\", component: QuizAnswerComponent},\n  {path: \"quiz-info/:id\", component:QuizInfoComponent},\n  {path: \"bookmarks\", component: BookmarksComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-answer/:id\", component: MasterAnswerComponent},\n  {path: \"quiz-typein/:id\", component: QuizTypeinComponent},\n  {path: \"quiz-create\", component: QuizCreateComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-result/:user/:quiz/:result\", component: QuizResultComponent},\n  {path: \"quiz-search/:id\", component: QuizSearchComponent},\n  {path: \"friends\", component: FriendsComponent, canActivate: [EditProfileGuard]},\n  {path: \"friend-info/:id\", component: FriendInfoComponent, canActivate: [EditProfileGuard]},\n  {path: \"leaderboard\", component: LeaderboardComponent},\n  {path: \"quiz-image/:id\",component: QuizImageComponent},\n  {path: \"friend-select/:id\",component: FriendSelectComponent},\n  {path: \"challenge/:id\", component: ChallengeComponent},\n  {path: '**', redirectTo: 'home', pathMatch: 'full'}\n];\n\n\n/**\n * Angular generated code to export the Routes defined within this module.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BookFilterPipe.html":{"url":"pipes/BookFilterPipe.html","title":"pipe - BookFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BookFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/book-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bookFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/book-filter.pipe.ts:21\n                \n            \n\n\n            \n                \n                    Filters the quizzes array based on the given category.\nIf the category is empty, returns the original quizzes array.\nIf the category is not empty, filters the array based on the quiz name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The array of Quiz objects to filter.\n\n                                    \n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The category to filter by.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        The filtered array of Quiz objects.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'bookFilter'\n})\nexport class BookFilterPipe implements PipeTransform {\n\n  /**\n   * Filters the quizzes array based on the given category.\n   * If the category is empty, returns the original quizzes array.\n   * If the category is not empty, filters the array based on the quiz name.\n   * @param quizzes: The array of Quiz objects to filter.\n   * @param cat: The category to filter by.\n   * @returns The filtered array of Quiz objects.\n   */\n  \n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"\"){\n      return quizzes\n    }\n    return quizzes.filter(quiz=> quiz.Name.includes(cat));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmark.html":{"url":"classes/Bookmark.html","title":"class - Bookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:21\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:8\n                        \n                    \n\n            \n                \n                    ID from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:16\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:12\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookmarkService.html":{"url":"injectables/BookmarkService.html","title":"injectable - BookmarkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookmarkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bookmark.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive for managing bookmarks\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_bookmark\n                            \n                            \n                                delete_bookmark\n                            \n                            \n                                get_bookmarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bookmark.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add_bookmark\n                        \n                    \n                \n            \n            \n                \nadd_bookmark(bookMark: AddBookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:42\n                \n            \n\n\n            \n                \n                    Creates a new bookmark for a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                AddBookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The bookmark object to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the created bookmark\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_bookmark\n                        \n                    \n                \n            \n            \n                \ndelete_bookmark(bookMark: Bookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:58\n                \n            \n\n\n            \n                \n                    Removes a bookmark from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                Bookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The bookmark object to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of the deletion result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_bookmarks\n                        \n                    \n                \n            \n            \n                \nget_bookmarks(UserID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:31\n                \n            \n\n\n            \n                \n                    Retrieves all bookmarks belonging to a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    UserID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable of an array of bookmarks\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/bookmark\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bookmark.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for bookmark API calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { AddBookmark, Bookmark } from '../models/bookmarks';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive for managing bookmarks\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for bookmark API calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/bookmark\";\n\n  /**\n   * Retrieves all bookmarks belonging to a user\n   * @param UserID The ID of the user\n   * @returns An observable of an array of bookmarks\n   */\n  get_bookmarks(UserID: String) : Observable{\n    return this.http.get(this.base_url+\"/getBookmarks/\"+UserID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates a new bookmark for a user\n   * @param bookMark The bookmark object to create\n   * @returns An observable of the created bookmark\n   */\n  add_bookmark(bookMark : AddBookmark) : Observable{\n    let nbookmark = JSON.stringify(bookMark);\n    return this.http.post(this.base_url+\"/createBookmark\", nbookmark, {\n      headers: new HttpHeaders({\n        'content-type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Removes a bookmark from the database\n   * @param bookMark The bookmark object to delete\n   * @returns An observable of the deletion result\n   */\n  delete_bookmark(bookMark: Bookmark) : Observable{\n    return this.http.delete(this.base_url+\"/deleteBookmark/\"+bookMark._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookmarksComponent.html":{"url":"components/BookmarksComponent.html","title":"component - BookmarksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookmarksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bookmarks/bookmarks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bookmarks\n            \n\n            \n                styleUrls\n                ./bookmarks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bookmarks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookmarks\n                            \n                            \n                                quizzes\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                removeBookmark\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookmarkService: BookmarkService, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/bookmarks/bookmarks.component.ts:34\n                            \n                        \n\n                \n                    \n                            Initialize constructor to be able to use services listed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:46\n                \n            \n\n\n            \n                \n                    runs when component is initially created, sets up the bookmark and quiz array for diplay in front end\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBookmark\n                        \n                    \n                \n            \n            \n                \nremoveBookmark(quiz: Quiz, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:64\n                \n            \n\n\n            \n                \n                    Function to remove quiz from bookmarks, called when user clicks on the remove quiz button\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:87\n                \n            \n\n\n            \n                \n                    Searched for bookmark by value, does this by updating the searchedItem variable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookmark[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:19\n                        \n                    \n\n            \n                \n                    Bookmark array, used to display list of bookmarks in front end\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:24\n                        \n                    \n\n            \n                \n                    Quizzes Array, corresponds to each bookmark\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:34\n                        \n                    \n\n            \n                \n                    Set searched item to empty string, this is to search bookmarks by quiz name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(window.sessionStorage.getItem(\"User\")!)\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:29\n                        \n                    \n\n            \n                \n                    Gets user from session storage ( user will be logged in as this component can't be accessed without logging in )\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Bookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.scss'],\n})\n\nexport class BookmarksComponent implements OnInit{\n\n  /**\n   * Bookmark array, used to display list of bookmarks in front end\n   */\n  bookmarks: Bookmark[] = [];\n\n  /**\n   * Quizzes Array, corresponds to each bookmark\n   */\n  quizzes: Quiz[] = [];\n\n  /**\n   * Gets user from session storage ( user will be logged in as this component can't be accessed without logging in )\n   */\n  user: User = JSON.parse(window.sessionStorage.getItem(\"User\")!);\n\n  /**\n   * Set searched item to empty string, this is to search bookmarks by quiz name\n   */\n  searchedItem: string =  \"\";\n\n  /**\n   * Initialize constructor to be able to use services listed\n   * @param bookmarkService \n   * @param quizService \n   */\n  constructor(private bookmarkService: BookmarkService, private quizService: QuizService){}\n  \n  /**\n   * runs when component is initially created, sets up the bookmark and quiz array for diplay in front end\n   */\n  ngOnInit(){\n    //Get current user's bookmarks\n    this.bookmarkService.get_bookmarks(this.user._id).subscribe((res: Bookmark[]) =>{\n      this.bookmarks = res;\n      this.bookmarks.forEach(element => {\n        //List added quizzes in bookmark of current user\n        this.quizService.get_quiz_byID(element.QuizID).subscribe((res : Quiz) =>{\n          this.quizzes.push(res)\n        });\n      });\n    });\n  }\n\n  /**\n   * Function to remove quiz from bookmarks, called when user clicks on the remove quiz button\n   * @param quiz \n   * @param idx \n   */\n  removeBookmark(quiz : Quiz, idx: number){\n    this.bookmarkService.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res) =>{\n      if(res['message']){\n        this.quizzes.splice(idx,1);\n        let index = -1;\n        for(let i = 0; i \n    \n\n    \n        \n    \n\n        \n            \n                Bookmarks\n            \n            \n                Find your favourite quizzes!\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{quiz.Name}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 bookmarks.\n            \n        \n    \n\n    \n\n    \n                \n                    ./bookmarks.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/prism.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: white;\n    margin-left: 2%;\n    margin-right: 2%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Bookmarks                                        Find your favourite quizzes!                                                                                                                                                                                                        {{quiz.Name}}                                                                                                                                                                                                            You have 0 bookmarks.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookmarksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/categories.ts\n        \n\n\n            \n                Description\n            \n            \n                Category Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:16\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:8\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:12\n                        \n                    \n\n            \n                \n                    The category value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category{\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * The category value\n     */\n    Name: string = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChallengeComponent.html":{"url":"components/ChallengeComponent.html","title":"component - ChallengeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChallengeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/challenge/challenge.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-challenge\n            \n\n            \n                styleUrls\n                ./challenge.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./challenge.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                done\n                            \n                            \n                                friendname\n                            \n                            \n                                history\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                quizName\n                            \n                            \n                                rating_form\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                            \n                                user\n                            \n                            \n                                winner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute, quizService: QuizService, historyService: HistoryService, clipBoard: Clipboard)\n                    \n                \n                        \n                            \n                                Defined in src/app/challenge/challenge.component.ts:56\n                            \n                        \n\n                \n                    \n                            The constructor initializes the component with the required services. (Dependency injection)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipBoard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/challenge/challenge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/challenge/challenge.component.ts:169\n                \n            \n\n\n            \n                \n                    The checkAnswers method is called when the time is up or when the user submits their answers.\nIt stops the timer, checks the user's answers against the correct answers, calculates the score,\nand displays the results.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/challenge/challenge.component.ts:152\n                \n            \n\n\n            \n                \n                    The ngOnDestroy method is called when the component is destroyed.\nIt stops the timer by clearing the interval.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/challenge/challenge.component.ts:101\n                \n            \n\n\n            \n                \n                    The ngOnInit method is called when the component is created.\nIt retrieves the quiz ID from the route parameters and fetches the quiz questions,\nanswers, and user details using the corresponding services. It also starts a\ncountdown timer and updates the time left every second.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/challenge/challenge.component.ts:159\n                \n            \n\n\n            \n                \n                    Function to stop countdown timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:56\n                        \n                    \n\n            \n                \n                    Declare empty form group, will have answers dynamically added in ngOnInit function\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:78\n                        \n                    \n\n            \n                \n                    Array of answers\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:51\n                        \n                    \n\n            \n                \n                    Set the variable for when time is up to false at start\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:38\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryArr\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:73\n                        \n                    \n\n            \n                \n                    Questions array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:28\n                        \n                    \n\n            \n                \n                    Declare variables required by this component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    rating: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:89\n                        \n                    \n\n            \n                \n                    Declare Rating form, once quiz is done, present this form to rate the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:46\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:42\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:84\n                        \n                    \n\n            \n                \n                    Gets user from session storage, user=null if the client is not logged in\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        winner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/challenge/challenge.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { History, HistoryArr } from '../models/history';\nimport { HistoryService } from '../services/history.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Quiz } from '../models/quiz';\nimport { FRIEND } from '../models/friend';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-challenge',\n  templateUrl: './challenge.component.html',\n  styleUrls: ['./challenge.component.scss']\n})\nexport class ChallengeComponent {\n  @Input() timeLeft = 30;\n\n  /**\n   * Declare variables required by this component\n   */\n  quiz_id: any;\n  answer_id: any;\n  done: boolean = false;\n  private sub: any;\n  history!: HistoryArr;\n  friendname: any;\n  winner: any;\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  /**\n   * Set the variable for when time is up to false at start\n   */\n  boolTimesUp: boolean = false;\n\n  /**\n   * Declare empty form group, will have answers dynamically added in ngOnInit function\n   */\n  answer_form!: FormGroup;\n\n  /**\n   * The constructor initializes the component with the required services. (Dependency injection)\n   * @param userService \n   * @param questionService \n   * @param answerService \n   * @param route \n   * @param quizService \n   * @param historyService \n   * @param clipBoard \n   */\n  constructor(private userService: UserService ,private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute, private quizService: QuizService, private historyService: HistoryService, private clipBoard: Clipboard) { }\n\n  /**\n   * Questions array\n   */\n  questions: Question[] = [];\n\n  /**\n   * Array of answers\n   */\n  answers: Answer[] = [];\n\n\n  /**\n   * Gets user from session storage, user=null if the client is not logged in\n   */\n  user = sessionStorage.getItem(\"User\");\n\n  /**\n   * Declare Rating form, once quiz is done, present this form to rate the quiz\n   */\n  rating_form = new FormGroup({\n    rating: new FormControl('')\n  });\n\n  quizName: string = \"\";\n\n/**\n * The ngOnInit method is called when the component is created. \n * It retrieves the quiz ID from the route parameters and fetches the quiz questions, \n * answers, and user details using the corresponding services. It also starts a \n * countdown timer and updates the time left every second.\n */\n  ngOnInit() {\n\n    this.sub = this.route.params.subscribe(params => {\n      //Get quiz id sent by the parameter and set the variables that will display the quiz questions and values\n      let historyID = params['id'];\n      this.historyService.get_history_by_id(historyID).subscribe((result: HistoryArr) =>{\n        this.history = result;\n        this.quizService.get_quiz_byID(result.QuizID).subscribe((res: Quiz) => {\n          this.quizName = res.Name;\n          this.questionService.get_quiz_questions(result.QuizID).subscribe((value) => {\n            this.questions = value;\n            \n            let answer: any = {}\n  \n            //Get user's answers to the quiz's questions\n            this.questions.forEach(element => {\n              answer[element._id] = new FormControl('')\n              this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n                result.forEach(element => {\n                  this.answers.push(element)\n                });\n              })\n              \n            });\n            \n            this.answer_form = new FormGroup(answer);\n            this.userService.get_usernameID(this.history.UserID).subscribe((res)=>{\n              this.friendname = res;\n            });\n          });\n        });\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  /**\n   * The ngOnDestroy method is called when the component is destroyed. \n   * It stops the timer by clearing the interval.\n   */\n  ngOnDestroy() {\n    this.stopTimer();\n  }\n\n  /**\n   * Function to stop countdown timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n  /**\n   * The checkAnswers method is called when the time is up or when the user submits their answers. \n   * It stops the timer, checks the user's answers against the correct answers, calculates the score, \n   * and displays the results.\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    //Check if answers are correct\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          //Increase the value for all correct answers\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    //Display time and the score the user got\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n      this.scoreDisplay = \"You scored \" + numCorrect + \"/\" + this.questions.length + \" and your friend scored: \" + this.history.Score + \"/\" + this.questions.length;\n    if(numCorrect  this.history.Score){\n      this.winner = \"You won! Congratulations!\";\n    }else{\n      this.winner = \"You drew with your friend! A worthy battle!\";\n    }\n\n    this.done = true;\n\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if (this.user != null) {\n      /**\n       * If the user is logged in, the score and history are updated and stored in the session storage.\n       */\n      USer = JSON.parse(this.user!);\n      this.scoreDisplay = USer.FirstName + \" scored \" + numCorrect + \"/\" + this.questions.length + \" and your friend scored: \" + this.history.Score + \"/\" + this.questions.length;\n      // Add history:\n      let history: History = {\n        QuizID: this.quiz_id,\n        UserID: USer._id,\n        Score: numCorrect\n      }\n      this.historyService.create_history(history).subscribe((res) => {\n        console.log(res);\n      });\n      //Update user's plays\n      this.historyService.update_user_plays(USer.Plays, USer._id).subscribe((res) => {\n        console.log(res);\n        USer.Plays = USer.Plays + 1;\n        sessionStorage.setItem(\"User\", JSON.stringify(USer));\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        Challenge: {{quizName}}\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                    {{answer.Answer}}\n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n            {{winner}}\n        \n    \n\n    \n\n    \n                \n                    ./challenge.component.scss\n                \n                .quiz-container {\n    background: rgb(4, 82, 137);\n    background: linear-gradient(180deg, rgba(4, 82, 137, 1) 0%, rgba(22, 0, 84, 1) 50%, rgba(82, 1, 63, 1) 100%);\n    margin: 0 auto;\n    text-align: center;\n    min-height: 100vh;\n    max-height: fit-content;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.result {\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card {\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    padding: 15px;\n    border-radius: 35px;\n}\n\n.quest {\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.button{\n    width: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            Challenge: {{quizName}}         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                {{answer.Answer}}                                                                                                                                        Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}            {{winner}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChallengeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuiz.html":{"url":"classes/CreateQuiz.html","title":"class - CreateQuiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Create Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:32\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:20\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:16\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:12\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:8\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:36\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:28\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:40\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:24\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Thumbnail url for quiz\n     */\n    Thumbnail: string =  \"\";\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateUser class, used to parse form data when creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:65\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:57\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:69\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:73\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:61\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:52\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                update_form\n                            \n                            \n                                userObj\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject userService and to populate form with current users information\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:67\n                \n            \n\n\n            \n                \n                    The updateUser method is responsible for updating the user's profile.\nIt gathers the updated user information from the form's controls and\nmakes a call to the edit_user method of the UserService.\nThe updated user information is sent to the server, and if the update is successful,\nthe response is logged and the user's session storage is updated with the updated user object.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        update_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n            \n                \n                    Global variable for logged in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:89\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:95\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:101\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:107\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:113\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:119\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent{\n  /**\n   * Global variable for logged in user\n   */\n  userObj : User;\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  update_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Constructor to inject userService and to populate form with current users information\n   */\n  constructor(public userService: UserService){\n    let user = sessionStorage.getItem(\"User\");\n    this.userObj = JSON.parse(user!);\n    this.first_name?.setValue(this.userObj.FirstName);\n    this.surname?.setValue(this.userObj.Surname);\n    this.username?.setValue(this.userObj.Username);\n    this.email?.setValue(this.userObj.Email);\n    this.password?.setValue(this.userObj.Password);\n    this.confirm_password?.setValue(this.userObj.Password);\n  }\n\n  /**The updateUser method is responsible for updating the user's profile. \n   * It gathers the updated user information from the form's controls and \n   * makes a call to the edit_user method of the UserService. \n   * The updated user information is sent to the server, and if the update is successful, \n   * the response is logged and the user's session storage is updated with the updated user object.  \n   * */\n  public updateUser() {\n    const userId = this.userObj._id;\n    let user: EditUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n    }\n    /**\n     * Edit user api call\n     */\n    this.userService.edit_user(user,userId).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n      });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.update_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.update_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.update_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.update_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.update_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.update_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            First Name is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Surname is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Username is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Passwords don't match.\n                        \n                    \n                \n                \n                    \n                        \n                            Update\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/room2.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                            First Name is required.                                                                                                                                                                                                                                                                                                Surname is required.                                                                                                                                                                                                                                                                                                Username is required.                                                                                                                                                                                                                                                                                                                                                                            Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                                                                                                                                                                Password is required.                                                                            Passwords don\\'t match.                                                                                                                                                    Update                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditProfileGuard.html":{"url":"guards/EditProfileGuard.html","title":"guard - EditProfileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditProfileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/edit-profile.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Angular Directive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/edit-profile.guard.ts:18\n                \n            \n\n\n            \n                \n                    Can Activate function to test whether or not a user is logged in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileGuard implements CanActivate {\n  /**\n   * Can Activate function to test whether or not a user is logged in\n   * @param route \n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        alert(\"You can't access this feature without logging in!\");\n        return false;\n      }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                EditUser class, used to parse form data when updating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:96\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:88\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:100\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:92\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:83\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FRIEND.html":{"url":"classes/FRIEND.html","title":"class - FRIEND","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FRIEND\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/friend.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                FriendUsername\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FriendUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/friend.ts:5\n                        \n                    \n\n            \n                \n                    Represents a friend object with username, friend username, and an ID\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FRIEND {\n/**\n * Represents a friend object with username, friend username, and an ID\n */\n    Username: string = \"\"; // The username of the user who owns this friend object\n    FriendUsername: string = \"\"; // The username of the friend associated with this object\n    _id: string = \"\"; // The unique ID of this friend object\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterFriendsPipe.html":{"url":"pipes/FilterFriendsPipe.html","title":"pipe - FilterFriendsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterFriendsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter-friends.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterFriends\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(friends: FRIEND[], friend: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter-friends.pipe.ts:22\n                \n            \n\n\n            \n                \n                    Filters the friends array based on the given friend name.\nIf the friend name is empty, returns the original friends array.\nIf the friend name is not empty, filters the array based on the friend's username.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    friends\n                                    \n                                                FRIEND[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The array of FRIEND objects to filter.\n\n                                    \n                                \n                                \n                                    friend\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The friend name to filter by.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        The filtered array of FRIEND objects.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FRIEND } from '../models/friend';\n\n@Pipe({\n  name: 'filterFriends'\n})\nexport class FilterFriendsPipe implements PipeTransform {\n\n  /**\n   * Filters the friends array based on the given friend name.\n   * If the friend name is empty, returns the original friends array.\n   * If the friend name is not empty, filters the array based on the friend's username.\n   * @param friends: The array of FRIEND objects to filter.\n   * @param friend: The friend name to filter by.\n   * @returns The filtered array of FRIEND objects.\n   */\n  \n  transform(friends: FRIEND[], friend: string): any[]{\n    if(friend === ''){\n      return friends;\n    }else{\n      return friends.filter(Friend=> Friend.FriendUsername === friend);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter.pipe.ts:22\n                \n            \n\n\n            \n                \n                    Filters the quizzes array based on the given category.\nIf the category is \"Categories\" or an empty string, returns the original quizzes array.\nIf the category is not empty or \"Categories\", filters the array based on the quiz category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of Quiz objects to filter.\n\n                                    \n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The category to filter by.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        The filtered array of Quiz objects.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  /**\n   * Filters the quizzes array based on the given category.\n   * If the category is \"Categories\" or an empty string, returns the original quizzes array.\n   * If the category is not empty or \"Categories\", filters the array based on the quiz category.\n   * @param quizzes The array of Quiz objects to filter.\n   * @param cat The category to filter by.\n   * @returns The filtered array of Quiz objects.\n   */\n\n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"Catergories\" || cat === ''){\n      return quizzes;\n    }else{\n      return quizzes.filter(quiz=> quiz.Category === cat);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendInfoComponent.html":{"url":"components/FriendInfoComponent.html","title":"component - FriendInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friend-info/friend-info.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-info\n            \n\n            \n                styleUrls\n                ./friend-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                id\n                            \n                            \n                                Name\n                            \n                            \n                                Play_times\n                            \n                            \n                                quiz\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                user\n                            \n                            \n                                User\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, historyService: HistoryService, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/friend-info/friend-info.component.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor is used to inject the ActivatedRoute, HistoryService, and QuizService dependencies.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-info/friend-info.component.ts:47\n                \n            \n\n\n            \n                \n                    The ngOnInit method is called when the component is created.\nIt subscribes to the route parameters to get the friend's ID and\nfetches the friend's history using the historyService. It also retrieves the logged-in user's object from session storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HistoryArr[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Play_times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:32\n                        \n                    \n\n            \n                \n                    The component class contains several properties, including id to store the friend's ID,\nsub to store the subscription, user to store the logged-in user,\nUser to store the user object, history to store the friend's history,\nquiz to store the quizzes, Name to store the name of the selected friend, and Play_times to store the play times of the friend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-info/friend-info.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\nimport { HistoryService } from '../services/history.service';\nimport { HistoryArr } from '../models/history';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-friend-info',\n  templateUrl: './friend-info.component.html',\n  styleUrls: ['./friend-info.component.scss']\n})\nexport class FriendInfoComponent {\n  id: any;\n  private sub: any;\n\n  /**\n   * The constructor is used to inject the ActivatedRoute, HistoryService, and QuizService dependencies.\n   * @param route \n   * @param historyService \n   * @param quizService \n   */\n  constructor(private route: ActivatedRoute, private historyService:HistoryService, private quizService:QuizService){}\n\n  /**\n   * The component class contains several properties, including id to store the friend's ID, \n   * sub to store the subscription, user to store the logged-in user, \n   * User to store the user object, history to store the friend's history, \n   * quiz to store the quizzes, Name to store the name of the selected friend, and Play_times to store the play times of the friend.\n   */\n  user = sessionStorage.getItem(\"User\");\n  User: User = new User;\n  history: HistoryArr[] = [];\n  quiz: Quiz[]=[];\n\n  //Initialize variables for play times and name of selected friend\n  Name : any;\n\n  Play_times: any;\n\n  /**\n   * The ngOnInit method is called when the component is created. \n   * It subscribes to the route parameters to get the friend's ID and \n   * fetches the friend's history using the historyService. It also retrieves the logged-in user's object from session storage.\n   */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params =>{\n      this.id = params['id'];\n      if(this.user != null){\n        let userOBJ:User = JSON.parse(this.user);\n        this.User = userOBJ;\n        this.historyService.get_history(this.id).subscribe((res: HistoryArr[])=>{\n          this.history = res;\n        });\n      }\n    })\n  }\n}\n    \n\n    \n        \n  \n    \n      Back\n      \n        \n          \n            {{this.id}} has {{this.history.length}} Total Plays\n          \n        \n      \n\n      \n        \n          \n            \n              \n                \n                  \n                    \n                   -->\n                \n                \n                  {{hist.QuizName}}\n                  {{hist.Date}}\n                \n              \n              Score: {{hist.Score}}\n              See More\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./friend-info.component.scss\n                \n                .Full {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.tileMain {\n    align-items: center;\n    width: 100%;\n\n}\n\n.tilesub {\n    margin: 3.2%;\n    transition: transform .2s;\n}\n\n.title {\n    font-size: 40px;\n    width: 700px;\n    height: 50px;\n    color: #000;\n    font-weight: 10000;\n    text-align: center;\n}\n\n.buttonBack {\n    font-size: 20px;\n    color: #fff;\n    font-weight: 1000;\n    transition: transform .2s;\n    background-color: gray;\n}\n\n.tilesub:hover {\n    transform: scale(1.2);\n}\n\n\n.buttonBack:hover {\n    transform: scale(1.1);\n}\n\n.cards {\n    margin-left: 10%;\n    margin-right: 10%;\n}\n\n.card{\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    margin-top: 2%;\n    display: flex;\n    justify-content: center;\n    border-radius: 15px;\n}\n\n.image{\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                                    {{this.id}} has {{this.history.length}} Total Plays                                                                                                                                                   -->                                                  {{hist.QuizName}}                  {{hist.Date}}                                            Score: {{hist.Score}}              See More                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendSelectComponent.html":{"url":"components/FriendSelectComponent.html","title":"component - FriendSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friend-select/friend-select.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-select\n            \n\n            \n                styleUrls\n                ./friend-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonDispl\n                            \n                            \n                                current_user\n                            \n                            \n                                friends\n                            \n                            \n                                hist_id\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                challengeFriend\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, clipboard: Clipboard, router: ActivatedRoute, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/friend-select/friend-select.component.ts:23\n                            \n                        \n\n                \n                    \n                            The constructor is used to inject the UserService, Clipboard, ActivatedRoute, and HistoryService dependencies.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        challengeFriend\n                        \n                    \n                \n            \n            \n                \nchallengeFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-select/friend-select.component.ts:73\n                \n            \n\n\n            \n                \n                    The challengeFriend method is called when a friend is selected to initiate a challenge.\nIt creates a challenge link with the current user's username and the history ID, copies\nthe link to the clipboard using the Clipboard service, and displays an alert message confirming that the challenge link has been copied.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-select/friend-select.component.ts:40\n                \n            \n\n\n            \n                \n                    The ngOnInit method is called when the component is created.\nIt retrieves the current user object from session storage and sets the user property.\nIt then calls the getFriends method of the UserService to fetch all friends of the\ncurrent user and stores them in the friends property. It also subscribes to the route parameters to get the history ID.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-select/friend-select.component.ts:64\n                \n            \n\n\n            \n                \n                    The search method is used to perform a search for a friend based on the provided value. It updates the searchedItem property with the search value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Copy ID\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        current_user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FRIEND[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hist_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friend-select/friend-select.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { FRIEND } from '../models/friend';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { ActivatedRoute } from '@angular/router';\nimport { HistoryService } from '../services/history.service';\nimport { HistoryArr } from '../models/history';\n\n@Component({\n  selector: 'app-friend-select',\n  templateUrl: './friend-select.component.html',\n  styleUrls: ['./friend-select.component.scss']\n})\nexport class FriendSelectComponent {\n\n  user!: User;\n  hist_id: any;\n  buttonDispl = \"Copy ID\";\n\n  //Get current user\n  current_user = sessionStorage.getItem(\"User\");\n  friends: FRIEND[] = [];\n  \n  /**\n   * The constructor is used to inject the UserService, Clipboard, ActivatedRoute, and HistoryService dependencies.\n   * @param userService \n   * @param clipboard \n   * @param router \n   * @param historyService \n   */\n  constructor(private userService: UserService, private clipboard: Clipboard, private router:ActivatedRoute, private historyService: HistoryService) { }\n\n  /**\n   * The ngOnInit method is called when the component is created. \n   * It retrieves the current user object from session storage and sets the user property. \n   * It then calls the getFriends method of the UserService to fetch all friends of the \n   * current user and stores them in the friends property. It also subscribes to the route parameters to get the history ID.\n   */\n  ngOnInit(): void {\n\n    let userOBJ: User;\n    if (this.current_user != null) {\n      userOBJ = JSON.parse(this.current_user);\n      this.user = userOBJ;\n\n      //Get all friends of current user\n      this.userService.getFriends(this.user._id).subscribe((res: FRIEND[]) => {\n        this.friends = res;\n      });\n\n      this.router.params.subscribe((params)=>{\n        this.hist_id = params['id'];\n      });\n\n    }\n  }\n  searchedItem: string = \"\";\n\n/**\n * The search method is used to perform a search for a friend based on the provided value. It updates the searchedItem property with the search value.\n * @param value \n */\n  search(value: string) {\n    this.searchedItem = value;\n  }\n\n  /**\n   * The challengeFriend method is called when a friend is selected to initiate a challenge. \n   * It creates a challenge link with the current user's username and the history ID, copies \n   * the link to the clipboard using the Clipboard service, and displays an alert message confirming that the challenge link has been copied.\n   */\n  challengeFriend(){\n    let link = this.user.Username + \" has challenged you! Accept here: https://quiz-platform-28fcb.web.app/challenge/\" + this.hist_id;\n    this.clipboard.copy(link);\n    alert(\"Challenge copied to clipboard!\");\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Friends\n            \n            \n                Choose a friend to challenge!\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{friend.FriendUsername}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 friends.\n            \n        \n    \n\n    \n\n    \n                \n                    ./friend-select.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/friend.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: whitesmoke;\n    margin-left: 0%;\n    margin-right: 0%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Friends                                        Choose a friend to challenge!                                                                                                                                                                                                        {{friend.FriendUsername}}                                                                                                                                                                                                            You have 0 friends.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendsComponent.html":{"url":"components/FriendsComponent.html","title":"component - FriendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friends/friends.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friends\n            \n\n            \n                styleUrls\n                ./friends.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friends.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonDispl\n                            \n                            \n                                current_user\n                            \n                            \n                                friend_form\n                            \n                            \n                                friends\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                copyID\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFriend\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, clipboard: Clipboard)\n                    \n                \n                        \n                            \n                                Defined in src/app/friends/friends.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:55\n                \n            \n\n\n            \n                \n                    The addFriend method is responsible for adding friends.\nIt retrieves the friend ID from the form control and calls the create_friends method of the UserService.\nIf the friend already exists, an alert is displayed. Otherwise, the friend is added to the friends array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyID\n                        \n                    \n                \n            \n            \n                \ncopyID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:97\n                \n            \n\n\n            \n                \n                    The copyID method copies the user's ID to the clipboard using the Clipboard service from Angular CDK.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:27\n                \n            \n\n\n            \n                \n                    The ngOnInit method retrieves the current user from the session storage and fetches the friends\nassociated with that user using the UserService. The retrieved friend data is stored in the friends property.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFriend\n                        \n                    \n                \n            \n            \n                \nremoveFriend(friend: FRIEND, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:81\n                \n            \n\n\n            \n                \n                    The removeFriend method is called when the remove button is clicked for a particular friend.\nIt calls the delete_friend method of the UserService to remove the friend from the user's friend list.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                FRIEND\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/friends/friends.component.ts:106\n                \n            \n\n\n            \n                \n                    The search method is invoked to perform friend search based on the provided value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Copy ID\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        current_user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friend_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    friend_id: new FormControl('', [\n      Validators.required,\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FRIEND[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/friends/friends.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { FRIEND } from '../models/friend';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.scss']\n})\nexport class FriendsComponent implements OnInit {\n  user!: User;\n\n  buttonDispl = \"Copy ID\";\n\n  //Get current user\n  current_user = sessionStorage.getItem(\"User\");\n  friends: FRIEND[] = [];\n\n  /**\n   * The ngOnInit method retrieves the current user from the session storage and fetches the friends \n   * associated with that user using the UserService. The retrieved friend data is stored in the friends property.\n   */\n  ngOnInit(): void {\n\n    let userOBJ: User;\n    if (this.current_user != null) {\n      userOBJ = JSON.parse(this.current_user);\n      this.user = userOBJ;\n\n      //Get all friends of current user\n      this.userService.getFriends(this.user._id).subscribe((res: FRIEND[]) => {\n        this.friends = res;\n      });\n    }\n  }\n  searchedItem: string = \"\";\n  constructor(private userService: UserService, private clipboard: Clipboard) { }\n\n  friend_form = new FormGroup({\n    friend_id: new FormControl('', [\n      Validators.required,\n    ])\n  });\n\n\n  /**\n   * The addFriend method is responsible for adding friends. \n   * It retrieves the friend ID from the form control and calls the create_friends method of the UserService. \n   * If the friend already exists, an alert is displayed. Otherwise, the friend is added to the friends array.\n   */\n  addFriend() {\n    let friendid = this.friend_form.get(\"friend_id\")?.value;\n    if(friendid === this.user.Username){\n      alert(\"You can't add yourself as a friend!\");\n    }else if(friendid === \" \"){\n      alert(\"Invalid friend id!\");\n    }else{\n      this.userService.create_friends(friendid!,this.user.Username).subscribe((res) =>{\n        if(res['friend_exists'] == true){\n          alert(\"Friend already exists!\");\n        }\n        //Add friend\n        else {\n          this.friends.push(res);\n          console.log(this.friends);\n        }\n      });\n    }\n  }\n\n  /**\n   * The removeFriend method is called when the remove button is clicked for a particular friend. \n   * It calls the delete_friend method of the UserService to remove the friend from the user's friend list.\n   * @param friend \n   * @param idx \n   */\n  removeFriend(friend: FRIEND, idx: number) {\n    this.userService.delete_friend(friend._id).subscribe((res) => {\n      if (res[\"message\"] == true) {\n        this.friends.splice(idx, 1);\n      }\n      //If friend removal fails show an alert\n      else {\n        alert(\"Delete friend failed!\");\n        console.log(res);\n      }\n    })\n  }\n\n  /**\n   * The copyID method copies the user's ID to the clipboard using the Clipboard service from Angular CDK.\n   */\n  copyID() {\n    this.clipboard.copy(this.user._id);\n    this.buttonDispl = \"Copied\";\n  }\n\n  /**\n   * The search method is invoked to perform friend search based on the provided value.\n   * @param value \n   */\n  search(value: string) {\n    this.searchedItem = value;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Friends\n            \n            \n                Give friends: {{user.Username}}\n                {{buttonDispl}}\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{friend.FriendUsername}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 friends.\n            \n        \n    \n    \n        \n            \n                Add Friends\n            \n            \n                \n                    \n                        \n                            \n                                \n                            \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./friends.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/friend.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: whitesmoke;\n    margin-left: 0%;\n    margin-right: 0%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Friends                                        Give friends: {{user.Username}}                {{buttonDispl}}                                                                                                                                                                                                        {{friend.FriendUsername}}                                                                                                                                                                                                            You have 0 friends.                                                                Add Friends                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/history.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the history of a user's performance on a specific quiz.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                Score\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class History{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n}\n/**\n * Represents an array of quiz history entries.\n */\nexport class HistoryArr{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    QuizName: string = \"\";\n    Thumbnail: string = \"\";\n    Score: number = 0;\n    Date: string = \"\";   \n    __v: Number = 0;\n    _id: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoryArr.html":{"url":"classes/HistoryArr.html","title":"class - HistoryArr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoryArr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/history.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an array of quiz history entries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Date\n                            \n                            \n                                QuizID\n                            \n                            \n                                QuizName\n                            \n                            \n                                Score\n                            \n                            \n                                Thumbnail\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/history.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class History{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    Score: Number = 0;\n}\n/**\n * Represents an array of quiz history entries.\n */\nexport class HistoryArr{\n    QuizID: string = \"\";\n    UserID: string = \"\";\n    QuizName: string = \"\";\n    Thumbnail: string = \"\";\n    Score: number = 0;\n    Date: string = \"\";   \n    __v: Number = 0;\n    _id: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_history\n                            \n                            \n                                get_history\n                            \n                            \n                                get_history_by_id\n                            \n                            \n                                update_user_plays\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/history.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_history\n                        \n                    \n                \n            \n            \n                \ncreate_history(history: History)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    history\n                                    \n                                                History\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_history\n                        \n                    \n                \n            \n            \n                \nget_history(userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_history_by_id\n                        \n                    \n                \n            \n            \n                \nget_history_by_id(historyID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    historyID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_user_plays\n                        \n                    \n                \n            \n            \n                \nupdate_user_plays(currPlays: number, userID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currPlays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/history\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history.service.ts:16\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { History } from '../models/history';\nimport { handleError } from '../utilities/errorhandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  constructor(private http: HttpClient) { }\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/history\";\n\n  create_history(history: History): Observable{\n    return this.http.post(this.base_url+\"/createHistory\",history, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  get_history(userID: string): Observable{\n    return this.http.get(this.base_url+\"/getUserHistory/\"+userID);\n  }\n\n  get_history_by_id(historyID: string): Observable{\n    return this.http.get(this.base_url+\"/getHistory/\"+historyID);\n  }\n\n  update_user_plays(currPlays: number, userID: String) : Observable{\n    let userUpdated = JSON.stringify({Plays: currPlays+1});\n    return this.http.patch(\"https://clumsy-apron-ray.cyclic.app/api/user/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catagories\n                            \n                            \n                                quizzes\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                selectedCatID\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                NavigateQuiz\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                PlayRandomQuiz\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, bookmarkService: BookmarkService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor of the component injects several services: QuizService, BookmarkService, Router, and UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:62\n                \n            \n\n\n            \n                \n                    The createBookmark method creates a bookmark for the specified quiz and user if the user is logged in.\nIt checks if the user is logged in by verifying the user variable.\nIf the user is logged in, it creates a bookmark object and calls the add_bookmark method of the bookmarkService to add the bookmark.\nAn alert is displayed based on the success or failure of the bookmark creation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NavigateQuiz\n                        \n                    \n                \n            \n            \n                \nNavigateQuiz(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:115\n                \n            \n\n\n            \n                \n                    The NavigateQuiz method navigates to the quiz information page for the\nspecified quiz using the Router service. The URL is constructed based on the selected quiz's ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:40\n                \n            \n\n\n            \n                \n                    In the ngOnInit method, the component makes API calls to retrieve the quiz categories and all quizzes.\nThe quiz categories are assigned to the categories property, and the quizzes are assigned to the quizzes property.\nAdditionally, for each quiz, the component retrieves the username of the quiz creator using the userService, and assigns it to the CreatorID property of the quiz.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayRandomQuiz\n                        \n                    \n                \n            \n            \n                \nPlayRandomQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:103\n                \n            \n\n\n            \n                \n                    The PlayRandomQuiz method selects a random quiz from the quizzes array and\nnavigates to the quiz answer page using the Router service.\nThe URL is constructed based on the selected quiz's ID.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:88\n                \n            \n\n\n            \n                \n                    The updateValue method updates the selectedCategory and selectedCatID properties based on the provided value.\nIf the value is \"Categories\", the selectedCategory is set to an empty string, otherwise, it\nfinds the corresponding category object and assigns its ID to the selectedCatID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        catagories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCatID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {  Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { Category } from '../models/categories';\nimport { Quiz } from '../models/quiz';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n//This component represents the home page of the quiz application.\nexport class HomeComponent implements OnInit{\n\n  /**\n   * The constructor of the component injects several services: QuizService, BookmarkService, Router, and UserService.\n   * @param quizService \n   * @param bookmarkService \n   * @param router \n   * @param userService \n   */\n  constructor(private quizService: QuizService, private bookmarkService: BookmarkService, private router:Router, private userService:UserService){}\n  \n  user = sessionStorage.getItem(\"User\");\n\n  catagories: Category[] = [];\n  quizzes: Quiz[] = [];\n  selectedCategory: string = \"\";\n  selectedCatID: string =  \"\";\n\n  /**\n   * In the ngOnInit method, the component makes API calls to retrieve the quiz categories and all quizzes. \n   * The quiz categories are assigned to the categories property, and the quizzes are assigned to the quizzes property. \n   * Additionally, for each quiz, the component retrieves the username of the quiz creator using the userService, and assigns it to the CreatorID property of the quiz.\n   */\n  ngOnInit(){\n    this.quizService.get_quiz_categories().subscribe((res) =>{\n      this.catagories = res;\n    });\n\n    this.quizService.getAllQuiz().subscribe((res) =>{\n      this.quizzes = res;\n      this.quizzes.forEach(quiz => {\n        this.userService.get_usernameID(quiz.CreatorID).subscribe(res =>{\n          quiz.CreatorID = res.toString();\n        });\n      });\n    });\n    \n  }\n /**\n  * The createBookmark method creates a bookmark for the specified quiz and user if the user is logged in. \n  * It checks if the user is logged in by verifying the user variable. \n  * If the user is logged in, it creates a bookmark object and calls the add_bookmark method of the bookmarkService to add the bookmark. \n  * An alert is displayed based on the success or failure of the bookmark creation.\n  * @param quiz \n  */\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n\n  /**\n   * The updateValue method updates the selectedCategory and selectedCatID properties based on the provided value. \n   * If the value is \"Categories\", the selectedCategory is set to an empty string, otherwise, it \n   * finds the corresponding category object and assigns its ID to the selectedCatID.\n   * @param value \n   */\n  updateValue(value: string){\n    this.selectedCategory = value;\n    if(value === \"Categories\"){\n      this.selectedCatID = \"\";\n    }else{\n      let res = this.catagories.find(val=> val.Name === value);\n      this.selectedCatID = res?._id!;\n    }\n  }\n\n  /**\n   * The PlayRandomQuiz method selects a random quiz from the quizzes array and \n   * navigates to the quiz answer page using the Router service. \n   * The URL is constructed based on the selected quiz's ID.\n   */\n  PlayRandomQuiz(){\n    let quiz = this.quizzes[Math.floor(Math.random()*this.quizzes.length)]\n    console.log(JSON.stringify(quiz))\n    let url='/quiz-answer/'+quiz._id.toString()\n    this.router.navigateByUrl(url)\n  }\n\n  /**\n   * The NavigateQuiz method navigates to the quiz information page for the \n   * specified quiz using the Router service. The URL is constructed based on the selected quiz's ID.\n   * @param quiz \n   */\n  NavigateQuiz(quiz: Quiz){\n    this.router.navigate(['/quiz-info',quiz._id]);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n    \n      Home Page\n    \n    \n      Quizzes\n    \n  \n\n\n  \n    \n      \n        \n          Categories\n          {{catagory.Name}}\n        \n      \n    \n  \n\n\n  \n    \n      Random Quiz\n    \n  \n\n\n\n\n  \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          {{quiz.Name}}\n          {{quiz.CreatorID}}\n        \n      \n      {{quiz.Description}}\n      \n        Bookmark\n        See More\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .main{\n    min-height: 100vh;\n    background: rgb(4,82,137);\n    background: linear-gradient(180deg, rgba(4,82,137,1) 0%, rgba(22,0,84,1) 50%, rgba(82,1,63,1) 100%);\n}\n.cards {\n    margin-left: 20%;\n    margin-right: 20%;\n}\n\n.card{\n    max-width: 450px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    // margin-top: 2%;\n    display: flex;\n    justify-content: start;\n    border-radius: 15px;\n    margin-bottom: 1.5rem;\n}\n\n.card-grid{\n    padding-left: 10%;\n    padding-right: 10%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));\n    grid-gap: 50px;\n}\n\n.max-size-image {\n    width: 55px; /* Set your desired maximum width */\n    height: 50px; /* Set your desired maximum height */\n    // width: auto;\n    // height: auto;\n}\n\n.image{\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n}\n\n@keyframes animate {\n    0%{\n        transform: translateY(0) rotate(0deg);\n        opacity: 1;\n        border-radius: 0;\n    }\n    100%{\n        transform: translateY(-1000px) rotate(720deg);\n        opacity: 0;\n        border-radius: 50%;\n    }\n}\n\n.background {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n.background li {\n    position: absolute;\n    display: block;\n    list-style: none;\n    width: 20px;\n    height: 20px;\n    background: rgba(255, 255, 255, 0.2);\n    animation: animate 16s linear infinite;\n}\n\n.background li:nth-child(0) {\n    left: 68%;\n    width: 128px;\n    height: 128px;\n    bottom: -128px;\n    animation-delay: 1s;\n}\n.background li:nth-child(1) {\n    left: 84%;\n    width: 106px;\n    height: 106px;\n    bottom: -106px;\n    animation-delay: 4s;\n}\n.background li:nth-child(2) {\n    left: 27%;\n    width: 120px;\n    height: 120px;\n    bottom: -120px;\n    animation-delay: 10s;\n}\n.background li:nth-child(3) {\n    left: 14%;\n    width: 167px;\n    height: 167px;\n    bottom: -167px;\n    animation-delay: 13s;\n}\n.background li:nth-child(4) {\n    left: 43%;\n    width: 194px;\n    height: 194px;\n    bottom: -194px;\n    animation-delay: 3s;\n}\n.background li:nth-child(5) {\n    left: 42%;\n    width: 153px;\n    height: 153px;\n    bottom: -153px;\n    animation-delay: 7s;\n}\n.background li:nth-child(6) {\n    left: 56%;\n    width: 101px;\n    height: 101px;\n    bottom: -101px;\n    animation-delay: 30s;\n}\n.background li:nth-child(7) {\n    left: 18%;\n    width: 149px;\n    height: 149px;\n    bottom: -149px;\n    animation-delay: 1s;\n}\n.background li:nth-child(8) {\n    left: 88%;\n    width: 143px;\n    height: 143px;\n    bottom: -143px;\n    animation-delay: 35s;\n}\n.background li:nth-child(9) {\n    left: 63%;\n    width: 114px;\n    height: 114px;\n    bottom: -114px;\n    animation-delay: 18s;\n}\n.background li:nth-child(10) {\n    left: 34%;\n    width: 188px;\n    height: 188px;\n    bottom: -188px;\n    animation-delay: 15s;\n}\n.background li:nth-child(11) {\n    left: 73%;\n    width: 151px;\n    height: 151px;\n    bottom: -151px;\n    animation-delay: 7s;\n}\n.background li:nth-child(12) {\n    left: 35%;\n    width: 128px;\n    height: 128px;\n    bottom: -128px;\n    animation-delay: 59s;\n}\n.background li:nth-child(13) {\n    left: 24%;\n    width: 101px;\n    height: 101px;\n    bottom: -101px;\n    animation-delay: 34s;\n}\n.background li:nth-child(14) {\n    left: 9%;\n    width: 182px;\n    height: 182px;\n    bottom: -182px;\n    animation-delay: 14s;\n}\n.background li:nth-child(15) {\n    left: 73%;\n    width: 191px;\n    height: 191px;\n    bottom: -191px;\n    animation-delay: 10s;\n}\n.background li:nth-child(16) {\n    left: 25%;\n    width: 174px;\n    height: 174px;\n    bottom: -174px;\n    animation-delay: 28s;\n}\n.background li:nth-child(17) {\n    left: 31%;\n    width: 107px;\n    height: 107px;\n    bottom: -107px;\n    animation-delay: 66s;\n}\n.background li:nth-child(18) {\n    left: 16%;\n    width: 123px;\n    height: 123px;\n    bottom: -123px;\n    animation-delay: 43s;\n}\n.background li:nth-child(19) {\n    left: 61%;\n    width: 122px;\n    height: 122px;\n    bottom: -122px;\n    animation-delay: 9s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Home Page              Quizzes                                    Categories          {{catagory.Name}}                                Random Quiz                                                                                        {{quiz.Name}}          {{quiz.CreatorID}}                    {{quiz.Description}}              Bookmark        See More            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaderboardComponent.html":{"url":"components/LeaderboardComponent.html","title":"component - LeaderboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeaderboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/leaderboard/leaderboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leaderboard\n            \n\n            \n                styleUrls\n                ./leaderboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./leaderboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                increment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(leaderboardService: LeaderboardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/leaderboard/leaderboard.component.ts:13\n                            \n                        \n\n                \n                    \n                            The constructor of the component injects the LeaderboardService,\nwhich is responsible for retrieving leaderboard data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        leaderboardService\n                                                  \n                                                        \n                                                                        LeaderboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:36\n                \n            \n\n\n            \n                \n                    The increment method is a simple function that increments the score property by 1.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:26\n                \n            \n\n\n            \n                \n                    In the ngOnInit method, the component makes an API call to the getLeaderboard method of the\nleaderboardService to retrieve the leaderboard data. The returned data is assigned to the users property.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/leaderboard/leaderboard.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/leaderboard/leaderboard.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LeaderboardService } from '../services/leaderboard.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n  \n  users: User[] = [];\n  score: number = 0;\n\n  /**\n   * The constructor of the component injects the LeaderboardService, \n   * which is responsible for retrieving leaderboard data.\n   * @param leaderboardService \n   */\n  constructor(private leaderboardService: LeaderboardService){};\n  \n  /**\n   * In the ngOnInit method, the component makes an API call to the getLeaderboard method of the \n   * leaderboardService to retrieve the leaderboard data. The returned data is assigned to the users property.\n   */\n  ngOnInit() {\n    this.leaderboardService.getLeaderboard().subscribe((res)=>{\n      this.users = res;\n    }\n    )\n  };\n\n  /**\n   * The increment method is a simple function that increments the score property by 1.\n   */\n  increment(){\n    this.score +=1;\n  }\n}\n\n    \n\n    \n        \n\n    \n      \n        Ranking\n        Username\n        Plays\n      \n    \n    \n        \n        {{i+1}}\n        {{user.Username}}\n        {{user.Plays}}\n      \n    \n  \n -->\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n    \n      PRIZM Leaderboard\n    \n    \n      Here are the users who have played the most quizzes!\n    \n  \n  \n    \n      Rank\n      Username\n      Plays\n    \n    \n      \n        \n          {{i+1}}\n          {{user.Username}}\n          {{user.Plays}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./leaderboard.component.scss\n                \n                .tainer{\n  background: rgb(4,82,137);\n  background: linear-gradient(180deg, rgba(4,82,137,1) 0%, rgba(22,0,84,1) 50%, rgba(82,1,63,1) 100%);\n  // align-items: baseline;\n  background-color: wheat;\n  align-items: center;\n  display: grid;\n  min-height: 95vh;\n  justify-content: center;\n}\n\n.title{\n  align-items: center;\n  margin: 4rem;\n  height: 5vh;\n}\n.title-content{\n  text-align: center;\n}\n\n.subtitle{\n  text-align: center;\n  margin-top: 1rem;\n}\n\n.leaderboard-container {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    // background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    // background-color: gray;\n    // background-blend-mode: multiply;\n    // min-width: 50rem;\n    // max-width: fit-content;\n    width: fit-content;\n    // min-height: 100vh;\n    // background-color: white;\n    // background: rgb(4,82,137);\n    // background: linear-gradient(180deg, rgba(4,82,137,1) 0%, rgba(22,0,84,1) 50%, rgba(82,1,63,1) 100%);\n\n\n    /* Center and scale the image nicely */\n    // background-position: center;\n    // background-repeat: no-repeat;\n    // background-size: cover;\n    // height: 100vh;\n\n    // align-items: baseline;\n}\n\n// .header{\n//     // background-color: cadetblue;\n//     background-color: #052d55;\n//     // color: white;\n//     // font-size: 110%;\n//     border-radius: 15px;\n//     text-align: left;\n// }\n\n// table{\n//   background-color: rgba(255, 255, 255, .15);\n//   border-collapse: collapse;\n//     margin: 25px 0;\n//     font-size: 0.9em;\n//     font-family: sans-serif;\n//     min-width: 400px;\n//     box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n// }\n\n// .styled-table tbody tr {\n//   border-bottom: 1px solid #dddddd;\n// }\n\n// .styled-table tbody tr:nth-of-type(even) {\n//   background-color: #f3f3f3;\n// }\n\n// .styled-table tbody tr:last-of-type {\n//   border-bottom: 2px solid #009879;\n// }\n\n\n\n.headers{\n  display: flex;\n  background-color: rgba(255, 255, 255, .15);\n  padding: 20px;\n  padding-left: 50px;\n  border-radius: 20px;\n  margin-top: 0px;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-bottom: 10px;\n}\n\n.users{\n  display: flex;\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(15px);\n  padding: 20px;\n  padding-left: 50px;\n  border-radius: 20px;\n  margin-top: 10px;\n  margin-left: 50px;\n  margin-right: 50px;\n  margin-bottom: 10px;\n}\n\n.user-contents{\n  display: flex;\n\n\n}\n\n.rank{\n  min-width: 10rem;\n  // max-width: 15rem;\n  // text-align: center;\n  // background-color: aquamarine;\n}\n\n.username{\n  min-width: 10rem;\n  // max-width: 20rem;\n  // width: fit-content;\n}\n\n.plays{\n  text-align: center;\n  min-width: 10rem;\n  // max-width: 20rem;\n}\n\n@keyframes animate {\n  0%{\n      transform: translateY(0) rotate(0deg);\n      opacity: 1;\n      border-radius: 0;\n  }\n  100%{\n      transform: translateY(-1000px) rotate(720deg);\n      opacity: 0;\n      border-radius: 50%;\n  }\n}\n\n.background {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.background li {\n  position: absolute;\n  display: block;\n  list-style: none;\n  width: 20px;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  animation: animate 16s linear infinite;\n}\n\n.background li:nth-child(0) {\n  left: 68%;\n  width: 128px;\n  height: 128px;\n  bottom: -128px;\n  animation-delay: 1s;\n}\n.background li:nth-child(1) {\n  left: 84%;\n  width: 106px;\n  height: 106px;\n  bottom: -106px;\n  animation-delay: 4s;\n}\n.background li:nth-child(2) {\n  left: 27%;\n  width: 120px;\n  height: 120px;\n  bottom: -120px;\n  animation-delay: 10s;\n}\n.background li:nth-child(3) {\n  left: 14%;\n  width: 167px;\n  height: 167px;\n  bottom: -167px;\n  animation-delay: 13s;\n}\n.background li:nth-child(4) {\n  left: 43%;\n  width: 194px;\n  height: 194px;\n  bottom: -194px;\n  animation-delay: 3s;\n}\n.background li:nth-child(5) {\n  left: 42%;\n  width: 153px;\n  height: 153px;\n  bottom: -153px;\n  animation-delay: 7s;\n}\n.background li:nth-child(6) {\n  left: 56%;\n  width: 101px;\n  height: 101px;\n  bottom: -101px;\n  animation-delay: 30s;\n}\n.background li:nth-child(7) {\n  left: 18%;\n  width: 149px;\n  height: 149px;\n  bottom: -149px;\n  animation-delay: 1s;\n}\n.background li:nth-child(8) {\n  left: 88%;\n  width: 143px;\n  height: 143px;\n  bottom: -143px;\n  animation-delay: 35s;\n}\n.background li:nth-child(9) {\n  left: 63%;\n  width: 114px;\n  height: 114px;\n  bottom: -114px;\n  animation-delay: 18s;\n}\n.background li:nth-child(10) {\n  left: 34%;\n  width: 188px;\n  height: 188px;\n  bottom: -188px;\n  animation-delay: 15s;\n}\n.background li:nth-child(11) {\n  left: 73%;\n  width: 151px;\n  height: 151px;\n  bottom: -151px;\n  animation-delay: 7s;\n}\n.background li:nth-child(12) {\n  left: 35%;\n  width: 128px;\n  height: 128px;\n  bottom: -128px;\n  animation-delay: 59s;\n}\n.background li:nth-child(13) {\n  left: 24%;\n  width: 101px;\n  height: 101px;\n  bottom: -101px;\n  animation-delay: 34s;\n}\n.background li:nth-child(14) {\n  left: 9%;\n  width: 182px;\n  height: 182px;\n  bottom: -182px;\n  animation-delay: 14s;\n}\n.background li:nth-child(15) {\n  left: 73%;\n  width: 191px;\n  height: 191px;\n  bottom: -191px;\n  animation-delay: 10s;\n}\n.background li:nth-child(16) {\n  left: 25%;\n  width: 174px;\n  height: 174px;\n  bottom: -174px;\n  animation-delay: 28s;\n}\n.background li:nth-child(17) {\n  left: 31%;\n  width: 107px;\n  height: 107px;\n  bottom: -107px;\n  animation-delay: 66s;\n}\n.background li:nth-child(18) {\n  left: 16%;\n  width: 123px;\n  height: 123px;\n  bottom: -123px;\n  animation-delay: 43s;\n}\n.background li:nth-child(19) {\n  left: 61%;\n  width: 122px;\n  height: 122px;\n  bottom: -122px;\n  animation-delay: 9s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Ranking        Username        Plays                              {{i+1}}        {{user.Username}}        {{user.Plays}}             -->                                                    PRIZM Leaderboard              Here are the users who have played the most quizzes!                  Rank      Username      Plays                                {{i+1}}          {{user.Username}}          {{user.Plays}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeaderboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeaderboardService.html":{"url":"injectables/LeaderboardService.html","title":"injectable - LeaderboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LeaderboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/leaderboard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLeaderboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/leaderboard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLeaderboard\n                        \n                    \n                \n            \n            \n                \ngetLeaderboard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/leaderboard.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/leaderboard\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/leaderboard.service.ts:17\n                        \n                    \n\n            \n                \n                    Base url for calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError } from 'rxjs';\nimport { User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderboardService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for calls\n   */\n    base_url = \"https://clumsy-apron-ray.cyclic.app/api/leaderboard\";\n    \n    getLeaderboard(): Observable{\n      return this.http.get(this.base_url+\"/userHighestPlays\").pipe(\n        catchError(handleError)\n      );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login_form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            The LoginComponent class contains a constructor that injects the UserService and Router.\nThe UserService is responsible for handling user-related operations, and the Router is used for navigating to different routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:46\n                \n            \n\n\n            \n                \n                    The login method is called when the login form is submitted. It retrieves the values of the\nemail and password form controls and creates a LoginUser object with the provided values.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:31\n                        \n                    \n\n            \n                \n                    The component declares and initializes a login_form property of type FormGroup.\nThis FormGroup represents the login form and contains two form controls: email and password.\nThe form controls are set up with validators to enforce required fields, valid email format,\nand a minimum password length of 8 characters.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:68\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:74\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n/**\n * The LoginComponent class contains a constructor that injects the UserService and Router. \n * The UserService is responsible for handling user-related operations, and the Router is used for navigating to different routes.\n * @param userService \n * @param router \n */\n  constructor(private userService: UserService, private router: Router){}\n\n/**\n * The component declares and initializes a login_form property of type FormGroup. \n * This FormGroup represents the login form and contains two form controls: email and password.\n * The form controls are set up with validators to enforce required fields, valid email format, \n * and a minimum password length of 8 characters.\n */\n  login_form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  });\n\n  /**\n   * The login method is called when the login form is submitted. It retrieves the values of the \n   * email and password form controls and creates a LoginUser object with the provided values.\n   */\n  public login() {\n    let email : string = this.login_form.get(\"email\")?.value!;\n    let pass : string = this.login_form.get(\"password\")?.value!;\n    let body : LoginUser = {\n      Email: email,\n      Password: pass,\n    }\n    this.userService.login(body).subscribe((res) => {\n      if(res.hasOwnProperty('message')){\n        alert(res['message'])  \n      }else{\n        let user : User[] = res;\n        sessionStorage.setItem(\"User\", JSON.stringify(user[0]));\n        this.router.navigate(['/home']);\n        this.login_form.reset();\n      }\n    })\n  }\n\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.login_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.login_form.get(\"password\");\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                            Login\n                        \n                    \n                \n                \n                    \n                      Don't have an account? \n                      Register\n                    \n                  \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    // background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-image: url(\"../../assets/images/minimalistRoom.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                    Login                                                                                                                      Don\\'t have an account?                       Register                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/login.guard.ts:15\n                \n            \n\n\n            \n                \n                    Determine if a page can be activated based on login status of the user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        True if the user is not logged in, false if they are already logged in\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  /**\n   * Determine if a page can be activated based on login status of the user.\n   * @param route \n   * @param state \n   * @returns True if the user is not logged in, false if they are already logged in\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        return true;\n      }else{\n        alert(\"You already here!\");\n        return false;\n      }\n  }  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUser.html":{"url":"classes/LoginUser.html","title":"class - LoginUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoginUser interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:110\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:114\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MasterAnswerComponent.html":{"url":"components/MasterAnswerComponent.html","title":"component - MasterAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MasterAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/master-answer/master-answer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-master-answer\n            \n\n            \n                styleUrls\n                ./master-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./master-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz\n                            \n                            \n                                quizID\n                            \n                            \n                                quizTime\n                            \n                            \n                                quizType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/master-answer/master-answer.component.ts:12\n                            \n                        \n\n                \n                    \n                            The component constructor injects the QuizService and ActivatedRoute.\nThe QuizService is responsible for retrieving quiz data, and the ActivatedRoute provides access to the route parameters.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/master-answer/master-answer.component.ts:29\n                \n            \n\n\n            \n                \n                    In the ngOnInit method, the component subscribes to the route parameters and retrieves the quizID from the parameters.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : new Quiz\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-master-answer',\n  templateUrl: './master-answer.component.html',\n  styleUrls: ['./master-answer.component.scss']\n})\n \nexport class MasterAnswerComponent implements OnInit{\n\n  /**\n   * The component constructor injects the QuizService and ActivatedRoute.\n   * The QuizService is responsible for retrieving quiz data, and the ActivatedRoute provides access to the route parameters.\n   * @param quizService \n   * @param route \n   */\n  constructor(private quizService: QuizService, private route: ActivatedRoute){}\n  quizID: string = \"\"\n  quiz: Quiz = new Quiz;\n  quizType = \"Text\";\n  quizTime = 10;\n\n  /**\n   * In the ngOnInit method, the component subscribes to the route parameters and retrieves the quizID from the parameters.\n   */\n  ngOnInit(){\n    this.route.params.subscribe(params =>{\n      this.quizID = params['id'];\n    });\n    this.quizService.get_quiz_byID(this.quizID).subscribe((res) =>{\n      this.quiz = res;\n      this.quizType = \"Text\";\n      this.quizType = this.quiz.Type;\n      this.quizTime = this.quiz.Timer;\n    });\n    console.log(\"Quiz time: \" + this.quiz.Timer);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./master-answer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MasterAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewAnswer.html":{"url":"classes/NewAnswer.html","title":"class - NewAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                NewAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:16\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:20\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:8\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:12\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestion.html":{"url":"classes/NewQuestion.html","title":"class - NewQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                New Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:18\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:13\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestionAnswer.html":{"url":"classes/NewQuestionAnswer.html","title":"class - NewQuestionAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestionAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/qna.ts\n        \n\n\n            \n                Description\n            \n            \n                QNA interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:18\n                        \n                    \n\n            \n                \n                    The answer for this question\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:24\n                        \n                    \n\n            \n                \n                    Indicates whether the answer is correct or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:13\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestionAnswer{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * The answer for this question\n    */\n    Answer: any;\n    \n    /**\n     * Indicates whether the answer is correct or not.\n     */\n\n    Correct: boolean = false;\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:48\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:43\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:38\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:28\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:33\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Default angular directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_image\n                            \n                            \n                                create_many_questions\n                            \n                            \n                                create_question\n                            \n                            \n                                delete_question\n                            \n                            \n                                get_quiz_questions\n                            \n                            \n                                getAllQuestions\n                            \n                            \n                                update_question\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_image\n                        \n                    \n                \n            \n            \n                \ncreate_image(file: FormData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_questions\n                        \n                    \n                \n            \n            \n                \ncreate_many_questions(questions: NewQuestion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:48\n                \n            \n\n\n            \n                \n                    Create many questions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questions\n                                    \n                                            NewQuestion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_question\n                        \n                    \n                \n            \n            \n                \ncreate_question(question: NewQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a question for quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_question\n                        \n                    \n                \n            \n            \n                \ndelete_question(question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:100\n                \n            \n\n\n            \n                \n                    Removes question from database and associated answers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_questions\n                        \n                    \n                \n            \n            \n                \nget_quiz_questions(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:74\n                \n            \n\n\n            \n                \n                    Get all questions belonging to a specifc quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuestions\n                        \n                    \n                \n            \n            \n                \ngetAllQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:63\n                \n            \n\n\n            \n                \n                    Gets all questions for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_question\n                        \n                    \n                \n            \n            \n                \nupdate_question(id: String, question: UpdateQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:86\n                \n            \n\n\n            \n                \n                    Updates question values\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    question\n                                    \n                                                UpdateQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/question\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/question.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for question calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { NewQuestion, Question, UpdateQuestion } from '../models/question';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Default angular directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  /**\n   * Constructor to inject http client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for question calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/question\";\n\n  /**\n   * Creates a question for quiz\n   * @param question \n   * @returns Question\n   */\n  create_question(question: NewQuestion): Observable {\n    let nquestion = JSON.stringify(question);\n    return this.http.post(this.base_url + \"/createQuestion\", nquestion, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Create many questions\n   * @param questions \n   * @returns Question[]\n   */\n  create_many_questions(questions: NewQuestion[]) : Observable{\n    let nquestions = JSON.stringify(questions);\n    return this.http.post(this.base_url+\"/createManyQuestions\",nquestions,{\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Gets all questions for all quizzes\n   * @returns Question[]\n   */\n  getAllQuestions() : Observable{\n    return this.http.get(this.base_url+\"/getAllQuestions\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get all questions belonging to a specifc quiz\n   * @param id \n   * @returns Question[]\n   */\n  get_quiz_questions(id: String) : Observable{\n    return this.http.get(this.base_url+\"/getQuestions/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Updates question values\n   * @param id \n   * @param question \n   * @returns Question\n   */\n  update_question(id:String, question:UpdateQuestion) : Observable{\n    let nquestion = JSON.stringify(question);\n    return this.http.patch(this.base_url+\"/updateQuestion/\"+id, nquestion,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  /**\n   * Removes question from database and associated answers.\n   * @param question \n   * @returns \n   */\n  delete_question(question: Question) : Observable{\n    return this.http.delete(this.base_url+\"/deleteQuestion/\"+question._id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  create_image(file: FormData): Observable{\n    return this.http.post(\"https://clumsy-apron-ray.cyclic.app/api/image/upload\",file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Thumbnail\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:94\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:90\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:73\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:61\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:57\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:53\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:49\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:77\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:69\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:81\n                        \n                    \n\n            \n                \n                    Thumbnail url for quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:85\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:65\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Thumbnail url for quiz\n     */\n    Thumbnail: string =  \"\";\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizAnswerComponent.html":{"url":"components/QuizAnswerComponent.html","title":"component - QuizAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-answer/quiz-answer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-answer\n            \n\n            \n                styleUrls\n                ./quiz-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                buttonDispl\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                done\n                            \n                            \n                                history\n                            \n                            \n                                link\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                quizName\n                            \n                            \n                                rated\n                            \n                            \n                                rating_form\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                checkAnswers\n                            \n                            \n                                CopyResults\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute, quizService: QuizService, historyService: HistoryService, clipBoard: Clipboard)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:53\n                            \n                        \n\n                \n                    \n                            The component constructor injects several services, including QuestionService, AnswerService, ActivatedRoute, QuizService, HistoryService, and Clipboard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipBoard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:203\n                \n            \n\n\n            \n                \n                    The addRating method is used to add a rating for the quiz. It retrieves the user's rating from\nthe rating_form and makes an API call to the quizService to add the rating. If successful, it sets the rated flag to true.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:150\n                \n            \n\n\n            \n                \n                    The checkAnswers method is responsible for checking the user's answers and calculating the score.\nIt stops the timer, initializes numCorrect to 0, and iterates over the questions and corresponding user answers.\nIf an answer is correct, it increments numCorrect. Then, it sets the timeLeftDisplay and scoreDisplay properties to display the time left and the user's score.\nIf a user is logged in, it sets the done flag to true, adds the user's rating for the quiz if provided, creates a history record for the user's performance, and updates the user's play count.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CopyResults\n                        \n                    \n                \n            \n            \n                \nCopyResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:223\n                \n            \n\n\n            \n                \n                    The CopyResults method copies the result link to the user's clipboard using the Clipboard service and updates the button display accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:133\n                \n            \n\n\n            \n                \n                    The ngOnDestroy method is implemented to stop the timer when the component is destroyed, preventing memory leaks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:89\n                \n            \n\n\n            \n                \n                    In the ngOnInit method, the component subscribes to the route parameters to retrieve the quiz_id.\nIt then fetches the quiz data using the quizService, and updates the quizName property with the retrieved quiz name.\nNext, it fetches the questions associated with the quiz using the questionService, and initializes the answer_form with form controls for each question.\nThe countdown timer is also set up to decrease the timeLeft property every second, and if the time reaches 0, it stops the timer,\nsets the boolTimesUp flag to true, alerts the user about the time being up, and calls the checkAnswers method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:140\n                \n            \n\n\n            \n                \n                    The stopTimer method clears the interval of the countdown timer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Share Results\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:38\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryArr\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    rating: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:46\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:42\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {  FormControl, FormGroup } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { History, HistoryArr } from '../models/history';\nimport { HistoryService } from '../services/history.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Quiz } from '../models/quiz';\n\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-quiz-answer',\n  templateUrl: './quiz-answer.component.html',\n  styleUrls: ['./quiz-answer.component.scss']\n})\n\nexport class QuizAnswerComponent implements OnInit ,OnDestroy{\n  @Input() timeLeft = 30;\n\n  //Initialize variables\n  quiz_id: any;\n  answer_id: any;\n  done: boolean = false;\n  rated: boolean = false;\n  private sub: any;\n  link: any;\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  buttonDispl = \"Share Results\"\n\n  //Set the variable for when time is up to false at start\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  /**\n   * The component constructor injects several services, including QuestionService, AnswerService, ActivatedRoute, QuizService, HistoryService, and Clipboard.\n   * @param questionService \n   * @param answerService \n   * @param route \n   * @param quizService \n   * @param historyService \n   * @param clipBoard \n   */\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute, private quizService: QuizService, private historyService: HistoryService, private clipBoard: Clipboard) { }\n\n  history!: HistoryArr;\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n\n  //Get Current User\n  user = sessionStorage.getItem(\"User\");\n\n  rating_form = new FormGroup({\n    rating: new FormControl('')\n  });\n\n  quizName: string = \"\";\n\n  /**\n   * In the ngOnInit method, the component subscribes to the route parameters to retrieve the quiz_id. \n   * It then fetches the quiz data using the quizService, and updates the quizName property with the retrieved quiz name. \n   * Next, it fetches the questions associated with the quiz using the questionService, and initializes the answer_form with form controls for each question. \n   * The countdown timer is also set up to decrease the timeLeft property every second, and if the time reaches 0, it stops the timer, \n   * sets the boolTimesUp flag to true, alerts the user about the time being up, and calls the checkAnswers method.\n   */\n  ngOnInit() {\n\n    this.sub = this.route.params.subscribe(params => {\n      //Get quiz id sent by the parameter and set the variables that will display the quiz questions and values\n      this.quiz_id = params['id'];\n      this.quizService.get_quiz_byID(this.quiz_id).subscribe((res: Quiz) =>{\n        this.quizName = res.Name;\n      });\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n\n        let answer: any = {}\n        \n        //Get user's answers to the quiz's questions\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  /**\n   * The ngOnDestroy method is implemented to stop the timer when the component is destroyed, preventing memory leaks.\n   */\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n/**\n * The stopTimer method clears the interval of the countdown timer.\n */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n  /**\n   * The checkAnswers method is responsible for checking the user's answers and calculating the score. \n   * It stops the timer, initializes numCorrect to 0, and iterates over the questions and corresponding user answers. \n   * If an answer is correct, it increments numCorrect. Then, it sets the timeLeftDisplay and scoreDisplay properties to display the time left and the user's score. \n   * If a user is logged in, it sets the done flag to true, adds the user's rating for the quiz if provided, creates a history record for the user's performance, and updates the user's play count.\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    //Check if answers are correct\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          //Increase the value for all correct answers\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    //Display time and the score the user got\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n    if(this.user != null){\n      this.done = true;\n    }\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      this.scoreDisplay = USer.FirstName + \" scored \" + numCorrect + \" out of \" + this.questions.length;\n      this.link = this.scoreDisplay + \", play the quiz now: \" + \"https://quiz-platform-28fcb.web.app/quiz-info/\"+this.quiz_id;\n      // Add history:\n      let history: History = {\n        QuizID: this.quiz_id,\n        UserID: USer._id,\n        Score: numCorrect\n      }\n      this.historyService.create_history(history).subscribe((res: HistoryArr)=>{\n        this.history = res;\n        console.log(res);\n      });\n      //Update user's plays\n      this.historyService.update_user_plays(USer.Plays,USer._id).subscribe((res) =>{\n        console.log(res);\n        USer.Plays = USer.Plays + 1;\n        sessionStorage.setItem(\"User\",JSON.stringify(USer));\n      });\n    }\n  }\n  \n  /**\n   * The addRating method is used to add a rating for the quiz. It retrieves the user's rating from \n   * the rating_form and makes an API call to the quizService to add the rating. If successful, it sets the rated flag to true.\n   */\n  addRating(){\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      if(ans == null){\n        ans = \"0\"\n      }\n      this.quizService.addRating(parseInt(ans),this.quiz_id,USer._id).subscribe((res) =>{\n        alert(\"Successfully rated the quiz!\");\n        console.log(res);\n        this.rated = true;\n      });\n    }\n  }\n\n\n  /**\n   * The CopyResults method copies the result link to the user's clipboard using the Clipboard service and updates the button display accordingly.\n   */\n  CopyResults(){\n    this.clipBoard.copy(this.link);\n    this.buttonDispl = \"Copied Results\";\n  }\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        {{quizName}}\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                    {{answer.Answer}}\n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n        \n            \n                \n                    \n                        \n                            \n                            1\n                        \n                        \n                            \n                            2\n                        \n                        \n                            \n                            3\n                        \n                        \n                            \n                            4\n                        \n                        \n                            \n                            5\n                        \n                    \n                \n                Submit rating\n            \n\n            \n                {{link}} -->\n                {{buttonDispl}}\n            \n            \n                {{link}} -->\n                Challenge\n            \n        \n    \n\n    \n\n    \n                \n                    ./quiz-answer.component.scss\n                \n                .quiz-container {\n    background: rgb(4, 82, 137);\n    background: linear-gradient(180deg, rgba(4, 82, 137, 1) 0%, rgba(22, 0, 84, 1) 50%, rgba(82, 1, 63, 1) 100%);\n    margin: 0 auto;\n    text-align: center;\n    min-height: 100vh;\n    max-height: fit-content;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.result {\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card {\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    padding: 15px;\n    border-radius: 35px;\n}\n\n.quest {\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.button{\n    width: 300px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            {{quizName}}         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                {{answer.Answer}}                                                                                                                                        Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}                                                                                                                                                1                                                                                                        2                                                                                                        3                                                                                                        4                                                                                                        5                                                                            Submit rating                                        {{link}} -->                {{buttonDispl}}                                        {{link}} -->                Challenge                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizImageComponent.html":{"url":"components/QuizImageComponent.html","title":"component - QuizImageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizImageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-image/quiz-image.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-image\n            \n\n            \n                styleUrls\n                ./quiz-image.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-image.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                buttonDispl\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                done\n                            \n                            \n                                link\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                quizName\n                            \n                            \n                                rated\n                            \n                            \n                                rating_form\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                checkAnswers\n                            \n                            \n                                CopyResults\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute, quizService: QuizService, clipBoard: Clipboard, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-image/quiz-image.component.ts:46\n                            \n                        \n\n                \n                    \n                            Inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipBoard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-image/quiz-image.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:181\n                \n            \n\n\n            \n                \n                    addRating: This method is called when the user submits a rating for the quiz.\nIt retrieves the rating value from the form and sends it to the QuizService to add\nthe rating for the quiz. It also updates the component's rated property to indicate that the user has rated the quiz.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:131\n                \n            \n\n\n            \n                \n                    checkAnswers: This method is called when the time is up or the user submits their answers.\nIt stops the timer, checks the user's answers against the correct answers, calculates the score, and displays the result.\nIt also handles actions like setting the done property to true if the user is logged in,\nsaving the user's rating for the quiz, updating the user's plays and history, and generating a link to share the results.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CopyResults\n                        \n                    \n                \n            \n            \n                \nCopyResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:202\n                \n            \n\n\n            \n                \n                    CopyResults: This method is called when the user clicks the \"Share Results\" button.\nIt copies the result link to the user's clipboard using the Clipboard service from Angular CDK.\nIt also updates the buttonDispl property to indicate that the results have been copied.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:113\n                \n            \n\n\n            \n                \n                    ngOnDestroy: The ngOnDestroy lifecycle hook is called when the component is about to be destroyed. It clears the countdown timer to prevent memory leaks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:72\n                \n            \n\n\n            \n                \n                    ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized.\nIt subscribes to the route parameters to get the quiz ID and fetches the quiz details\nand questions from the corresponding services. It also sets up a countdown timer that updates the timeLeft property every second.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-image/quiz-image.component.ts:120\n                \n            \n\n\n            \n                \n                    stopTimer: This method is used to stop the countdown timer by clearing the interval.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Share Results\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:34\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    rating: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:42\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:38\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-image/quiz-image.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { History } from '../models/history';\nimport { HistoryService } from '../services/history.service';\nimport { Quiz } from '../models/quiz';\n@Component({\n  selector: 'app-quiz-image',\n  templateUrl: './quiz-image.component.html',\n  styleUrls: ['./quiz-image.component.scss']\n})\nexport class QuizImageComponent{\n  @Input() timeLeft = 30;\n\n  quiz_id: any;\n  answer_id: any;\n  quizName: any\n  private sub: any;\n  buttonDispl = \"Share Results\"\n  link: any;\n  done: boolean = false;\n  rated: boolean = false;\n  user = sessionStorage.getItem(\"User\");\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  /**\n   * Inject dependencies\n   * @param questionService \n   * @param answerService \n   * @param route \n   * @param quizService \n   * @param clipBoard \n   * @param historyService \n   */\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute, private quizService: QuizService,private clipBoard: Clipboard, private historyService:HistoryService) { }\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n  rating_form = new FormGroup({\n    rating: new FormControl('')\n  });\n\n  /**\n   * ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized. \n   * It subscribes to the route parameters to get the quiz ID and fetches the quiz details \n   * and questions from the corresponding services. It also sets up a countdown timer that updates the timeLeft property every second.\n   */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.quiz_id = params['id'];\n      this.quizService.get_quiz_byID(this.quiz_id).subscribe((res: Quiz) =>{\n        this.quizName = res.Name;\n      });\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n\n        let answer: any = {}\n\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  /**\n   * ngOnDestroy: The ngOnDestroy lifecycle hook is called when the component is about to be destroyed. It clears the countdown timer to prevent memory leaks.\n   */\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n  /**\n   * stopTimer: This method is used to stop the countdown timer by clearing the interval.\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n/**\n * checkAnswers: This method is called when the time is up or the user submits their answers. \n * It stops the timer, checks the user's answers against the correct answers, calculates the score, and displays the result. \n * It also handles actions like setting the done property to true if the user is logged in, \n * saving the user's rating for the quiz, updating the user's plays and history, and generating a link to share the results.\n */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n    if(this.user != null){\n      this.done = true;\n    }\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      this.scoreDisplay = USer.FirstName + \" scored \" + numCorrect + \" out of \" + this.questions.length;\n      this.link = this.scoreDisplay + \", play the quiz now: \" + \"https://quiz-platform-28fcb.web.app/quiz-info/\"+this.quiz_id;\n      // Add history:\n      let history: History = {\n        QuizID: this.quiz_id,\n        UserID: USer._id,\n        Score: numCorrect\n      }\n      this.historyService.create_history(history).subscribe((res)=>{\n        console.log(res);\n      });\n      //Update user's plays\n      this.historyService.update_user_plays(USer.Plays,USer._id).subscribe((res) =>{\n        console.log(res);\n        USer.Plays = USer.Plays + 1;\n        sessionStorage.setItem(\"User\",JSON.stringify(USer));\n      });\n    }\n  }\n\n    /**\n     * addRating: This method is called when the user submits a rating for the quiz. \n     * It retrieves the rating value from the form and sends it to the QuizService to add \n     * the rating for the quiz. It also updates the component's rated property to indicate that the user has rated the quiz.\n     */\n    addRating(){\n      let ans = this.rating_form.get(\"rating\")?.value;\n      let USer: User;\n      if(this.user != null){\n        USer =  JSON.parse(this.user!);\n        if(ans == null){\n          ans = \"0\"\n        }\n        this.quizService.addRating(parseInt(ans),this.quiz_id,USer._id).subscribe((res) =>{\n          alert(\"Successfully rated the quiz!\");\n          console.log(res);\n          this.rated = true;\n        });\n      }\n    }\n\n    /**\n     * CopyResults: This method is called when the user clicks the \"Share Results\" button. \n     * It copies the result link to the user's clipboard using the Clipboard service from Angular CDK. \n     * It also updates the buttonDispl property to indicate that the results have been copied.\n     */\n    CopyResults(){\n      this.clipBoard.copy(this.link);\n      this.buttonDispl = \"Copied Results\";\n    }\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        {{quizName}}\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n        \n            \n                \n                    \n                        \n                            \n                            1\n                        \n                        \n                            \n                            2\n                        \n                        \n                            \n                            3\n                        \n                        \n                            \n                            4\n                        \n                        \n                            \n                            5\n                        \n                    \n                \n                Submit rating\n            \n\n            \n                {{scoreDisplay}}\n                {{link}} -->\n                {{buttonDispl}}\n            \n        \n    \n    \n\n    \n                \n                    ./quiz-image.component.scss\n                \n                .quiz-container {\n    background: rgb(4,82,137);\n    background: linear-gradient(180deg, rgba(4,82,137,1) 0%, rgba(22,0,84,1) 50%, rgba(82,1,63,1) 100%);\n    margin: 0 auto;\n    text-align: center;\n    min-height: 100vh;\n    max-height: fit-content;\n}\n\n.max-size-image {\n    width: 300px; /* Set your desired maximum width */\n    height: 300px; /* Set your desired maximum height */\n    // width: auto;\n    // height: auto;\n} \n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n.result{\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card {\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    padding: 15px;\n    border-radius: 35px;\n}\n\n\n.quest{\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.text{\n    font-size: medium;\n}\n\n.control{\n    size: 10000px;\n}\n\ninput[type=radio]:checked ~ img {\n    border: 11px solid green;\n}\n\n.button{\n    width: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            {{quizName}}         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                                                                                                                                                        Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}ubmit rating                                        {{scoreDisplay}}                {{link}} -->                {{buttonDispl}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizImageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizInfoComponent.html":{"url":"components/QuizInfoComponent.html","title":"component - QuizInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-info/quiz-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-info\n            \n\n            \n                styleUrls\n                ./quiz-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Category\n                            \n                            \n                                Created_By\n                            \n                            \n                                Description\n                            \n                            \n                                id\n                            \n                            \n                                Name\n                            \n                            \n                                quiz\n                            \n                            \n                                Rating\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                Thumbnail\n                            \n                            \n                                timeValue\n                            \n                            \n                                Total_Played\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-info/quiz-info.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor: The constructor is used for dependency injection, where instances of services are injected into the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:81\n                \n            \n\n\n            \n                \n                    navigate: This function is called when the user clicks the \"Start Quiz\" button. It navigates to the appropriate quiz component based on the quiz's type. The navigation is performed using the Router service from Angular.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:74\n                \n            \n\n\n            \n                \n                    ngOnDestroy: The ngOnDestroy lifecycle hook is called when the component is about to be destroyed. It unsubscribes from the route parameter subscription to prevent memory leaks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:47\n                \n            \n\n\n            \n                \n                    ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized.\nIt subscribes to the route parameters to get the quiz ID and fetches the quiz details from the QuizService based on the provided ID.\nIt assigns the fetched quiz data to the component's properties for display.\nAdditionally, it retrieves the category and creator information by making additional requests to the QuizService and UserService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Created_By\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Total_Played\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-quiz-info',\n  templateUrl: './quiz-info.component.html',\n  styleUrls: ['./quiz-info.component.scss']\n})\n//Overall, this component is responsible for fetching and displaying information about a specific quiz based on the provided\nexport class QuizInfoComponent implements OnInit, OnDestroy {\n  id: any;\n  private sub: any;\n\n  /**\n   * Constructor: The constructor is used for dependency injection, where instances of services are injected into the component.\n   * @param route \n   * @param quizService \n   * @param userService \n   * @param router \n   */\n  constructor(private route: ActivatedRoute, private quizService: QuizService, private userService: UserService, private router: Router){}\n  quiz!: Quiz;\n\n  Name: any;\n\n  Description: any;\n\n  Rating: any;\n\n  Category: any;\n\n  Total_Played: any;\n\n  Created_By: any;\n  Thumbnail: any;\n  timeValue = 0;\n\n  /**\n   * ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized. \n   * It subscribes to the route parameters to get the quiz ID and fetches the quiz details from the QuizService based on the provided ID. \n   * It assigns the fetched quiz data to the component's properties for display. \n   * Additionally, it retrieves the category and creator information by making additional requests to the QuizService and UserService.\n   */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params =>{\n      this.id = params['id'];\n\n      this.quizService.get_quiz_byID(this.id).subscribe((value : Quiz) =>{\n        this.quiz = value;\n        this.Name = value.Name;\n        this.Description = value.Description;\n        this.Rating = value.Average;\n        this.Category = value.Category;\n        this.Total_Played = value.Plays;\n        this.Created_By = value.CreatorID;\n        this.timeValue = value.Timer;\n        this.Thumbnail = value.Thumbnail;\n        this.quizService.get_category_byID(this.Category).subscribe(res =>{\n          this.Category = res;\n        });\n        this.userService.get_usernameID(this.Created_By).subscribe(res =>{\n          this.Created_By = res;\n        })\n      })\n    });\n  }\n\n  /**\n   * ngOnDestroy: The ngOnDestroy lifecycle hook is called when the component is about to be destroyed. It unsubscribes from the route parameter subscription to prevent memory leaks.\n   */\n  ngOnDestroy(){\n      this.sub.unsubscribe();\n  }\n\n  /**\n   * navigate: This function is called when the user clicks the \"Start Quiz\" button. It navigates to the appropriate quiz component based on the quiz's type. The navigation is performed using the Router service from Angular.\n   */\n  navigate(){\n    if(this.quiz.Type===\"Text-MCQ\"){\n      this.router.navigate(['/quiz-answer',this.id]);\n    }else if(this.quiz.Type === \"Text-Fill-In\"){\n      this.router.navigate(['/quiz-typein',this.id]);\n    }else if(this.quiz.Type === \"Image-MCQ\"){\n      this.router.navigate(['/quiz-image',this.id]);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n                \n              \n              {{Name}}\n              {{Description}}\n            \n            \n            \n              \n                Category:\n                {{Category}}\n              \n              \n                Created By:\n                {{Created_By}}\n              \n              \n                Number of Times Played:\n                {{Total_Played}}\n              \n              \n                Rating:\n                {{Rating | number:'1.2-2'}}\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              Start Quiz\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-info.component.scss\n                \n                \n.Full {\n    background-image: url('../../assets/images/prisms.jpeg') !important;\n    background-color: gray;\n    background-blend-mode: multiply;\n    background-size: cover;\n    background-position: center center;\n    min-height: 100vh;\n}\n\n.box {\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n}\n\n.button {\n    cursor: pointer;\n    font-size: 20px;\n    font-weight: bold;\n    transition: transform .2s;\n}\n\n.button:hover {\n    transform: scale(1.1);\n}\n\n.top{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;   \n}\n\n.max-size-image {\n    // width: 55px; /* Set your desired maximum width */\n    max-height: 250px; /* Set your desired maximum height */\n    width: auto;\n    // height: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{Name}}              {{Description}}                                                                  Category:                {{Category}}                                            Created By:                {{Created_By}}                                            Number of Times Played:                {{Total_Played}}                                            Rating:                {{Rating | number:\\'1.2-2\\'}}                                                                                                    Start Quiz                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizResultComponent.html":{"url":"components/QuizResultComponent.html","title":"component - QuizResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-result/quiz-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-result\n            \n\n            \n                styleUrls\n                ./quiz-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quizid\n                            \n                            \n                                result\n                            \n                            \n                                sub\n                            \n                            \n                                userid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-result/quiz-result.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor: The constructor is used for dependency injection, where an instance of the ActivatedRoute is injected into the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-result/quiz-result.component.ts:27\n                \n            \n\n\n            \n                \n                    ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized.\nIt subscribes to the route parameters to get the userid, quizid, and result from the URL.\nThese parameters are typically passed as part of the route configuration.\nThe component then assigns the retrieved parameter values to its corresponding properties for further use.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        quizid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-result/quiz-result.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-quiz-result',\n  templateUrl: './quiz-result.component.html',\n  styleUrls: ['./quiz-result.component.scss']\n})\nexport class QuizResultComponent implements OnInit{\n  sub: any;\n  userid: any;\n  result: any;\n  quizid: any; \n\n  /**\n   * Constructor: The constructor is used for dependency injection, where an instance of the ActivatedRoute is injected into the component.\n   * @param route \n   */\n  constructor(private route: ActivatedRoute){}\n\n  /**\n   * ngOnInit: The ngOnInit lifecycle hook is called when the component is initialized. \n   * It subscribes to the route parameters to get the userid, quizid, and result from the URL. \n   * These parameters are typically passed as part of the route configuration. \n   * The component then assigns the retrieved parameter values to its corresponding properties for further use.\n   */\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(params =>{\n      this.userid = params['user'];\n      this.quizid = params['quiz'];\n      this.result = params['result'];\n    });\n  }\n\n}\n\n    \n\n    \n        \n    {{userid}}\n    {{quizid}}\n    {{result}}\n\n    \n\n    \n                \n                    ./quiz-result.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userid}}    {{quizid}}    {{result}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizSearchComponent.html":{"url":"components/QuizSearchComponent.html","title":"component - QuizSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-search/quiz-search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-search\n            \n\n            \n                styleUrls\n                ./quiz-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                quizzes\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService, bookmarkService: BookmarkService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-search/quiz-search.component.ts:15\n                            \n                        \n\n                \n                    \n                            constructor(): The constructor function is responsible for initializing the QuizSearchComponent class.\nIt injects the required dependencies, such as ActivatedRoute, QuizService, BookmarkService, and UserService, using dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:65\n                \n            \n\n\n            \n                \n                    createBookmark(quiz: Quiz): This function is called when the user wants to create a bookmark for a quiz.\nIt takes a quiz parameter of type Quiz, which represents the quiz for which the bookmark is to be created.\nInside the function, it checks if a user is logged in by checking the user property obtained from the sessionStorage.\nIf a user is logged in, it parses the user object from sessionStorage and creates a bookmark object of type AddBookmark,\nwhich contains the QuizID and UserID. It then calls the add_bookmark method of BookmarkService and subscribes to the returned observable.\nIf the bookmark is successfully added, it displays an alert message.\nOtherwise, it displays an alert message indicating the failure to add the bookmark.\nIf no user is logged in, it displays an alert message stating that the user needs to be logged in to perform the bookmark action.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:40\n                \n            \n\n\n            \n                \n                    ngOnInit(): This is a lifecycle hook that is called after the component has been initialized.\nIn this function, the component retrieves the route parameters using ActivatedRoute and subscribes\nto the params observable. It retrieves the value of the id parameter from the route and assigns it to the id property of the component.\nIt then calls the search_quiz method of QuizService to fetch the quizzes based on the provided id. The fetched quizzes are stored in the quizzes property of the component.\nFor each quiz, it calls the get_usernameID method of UserService to fetch the username associated with the creator ID of the quiz.\nThe fetched username is assigned to the CreatorID property of the quiz.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-quiz-search',\n  templateUrl: './quiz-search.component.html',\n  styleUrls: ['./quiz-search.component.scss']\n})\nexport class QuizSearchComponent implements OnInit{\n\n  /**\n   * constructor(): The constructor function is responsible for initializing the QuizSearchComponent class. \n   * It injects the required dependencies, such as ActivatedRoute, QuizService, BookmarkService, and UserService, using dependency injection.\n   * @param route \n   * @param quizService \n   * @param bookmarkService \n   * @param userService \n   */\n  constructor(private route: ActivatedRoute, private quizService: QuizService, private bookmarkService: BookmarkService, private userService: UserService){}\n\n  id = \"\";\n  quizzes: Quiz[]=[];\n\n  user = sessionStorage.getItem(\"User\");\n\n  /**\n   * ngOnInit(): This is a lifecycle hook that is called after the component has been initialized. \n   * In this function, the component retrieves the route parameters using ActivatedRoute and subscribes \n   * to the params observable. It retrieves the value of the id parameter from the route and assigns it to the id property of the component. \n   * It then calls the search_quiz method of QuizService to fetch the quizzes based on the provided id. The fetched quizzes are stored in the quizzes property of the component. \n   * For each quiz, it calls the get_usernameID method of UserService to fetch the username associated with the creator ID of the quiz. \n   * The fetched username is assigned to the CreatorID property of the quiz.\n   */\n  ngOnInit(): void {\n      this.route.params.subscribe(params => {\n        this.id = params['id'];\n        this.quizService.search_quiz(this.id).subscribe(res => {\n          this.quizzes = res;\n          this.quizzes.forEach(quiz => {\n            this.userService.get_usernameID(quiz.CreatorID).subscribe(res =>{\n              quiz.CreatorID = res.toString();\n            });\n          });\n        });\n      });\n  }\n\n  /**\n   * createBookmark(quiz: Quiz): This function is called when the user wants to create a bookmark for a quiz. \n   * It takes a quiz parameter of type Quiz, which represents the quiz for which the bookmark is to be created. \n   * Inside the function, it checks if a user is logged in by checking the user property obtained from the sessionStorage. \n   * If a user is logged in, it parses the user object from sessionStorage and creates a bookmark object of type AddBookmark, \n   * which contains the QuizID and UserID. It then calls the add_bookmark method of BookmarkService and subscribes to the returned observable. \n   * If the bookmark is successfully added, it displays an alert message. \n   * Otherwise, it displays an alert message indicating the failure to add the bookmark. \n   * If no user is logged in, it displays an alert message stating that the user needs to be logged in to perform the bookmark action.\n   * @param quiz \n   */\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  Results\n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            {{quiz.Name}}\n            {{quiz.CreatorID}}\n          \n        \n        {{quiz.Description}}\n        \n          Bookmark\n          See More\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./quiz-search.component.scss\n                \n                .header{\n  margin: 3rem;\n}\n\n.cards {\n  margin-left: 20%;\n  margin-right: 20%;\n}\n\n.card{\n  max-width: 450px;\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(5px);\n  margin-top: 2%;\n  display: flex;\n  justify-content: start;\n  border-radius: 15px;\n  margin-bottom: 2.5rem;\n  max-height: 265px;\n}\n\n.card-grid{\n  padding-left: 10%;\n  padding-right: 10%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));\n  grid-gap: 50px;\n  background: rgb(4,82,137);\n  background: linear-gradient(180deg, rgba(4,82,137,1) 0%, rgba(22,0,84,1) 50%, rgba(82,1,63,1) 100%);\n  min-height: 80vh;\n}\n\n@keyframes animate {\n  0%{\n      transform: translateY(0) rotate(0deg);\n      opacity: 1;\n      border-radius: 0;\n  }\n  100%{\n      transform: translateY(-1000px) rotate(720deg);\n      opacity: 0;\n      border-radius: 50%;\n  }\n}\n\n.background {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.background li {\n  position: absolute;\n  display: block;\n  list-style: none;\n  width: 20px;\n  height: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  animation: animate 16s linear infinite;\n}\n\n.background li:nth-child(0) {\n  left: 68%;\n  width: 128px;\n  height: 128px;\n  bottom: -128px;\n  animation-delay: 1s;\n}\n.background li:nth-child(1) {\n  left: 84%;\n  width: 106px;\n  height: 106px;\n  bottom: -106px;\n  animation-delay: 4s;\n}\n.background li:nth-child(2) {\n  left: 27%;\n  width: 120px;\n  height: 120px;\n  bottom: -120px;\n  animation-delay: 10s;\n}\n.background li:nth-child(3) {\n  left: 14%;\n  width: 167px;\n  height: 167px;\n  bottom: -167px;\n  animation-delay: 13s;\n}\n.background li:nth-child(4) {\n  left: 43%;\n  width: 194px;\n  height: 194px;\n  bottom: -194px;\n  animation-delay: 3s;\n}\n.background li:nth-child(5) {\n  left: 42%;\n  width: 153px;\n  height: 153px;\n  bottom: -153px;\n  animation-delay: 7s;\n}\n.background li:nth-child(6) {\n  left: 56%;\n  width: 101px;\n  height: 101px;\n  bottom: -101px;\n  animation-delay: 30s;\n}\n.background li:nth-child(7) {\n  left: 18%;\n  width: 149px;\n  height: 149px;\n  bottom: -149px;\n  animation-delay: 1s;\n}\n.background li:nth-child(8) {\n  left: 88%;\n  width: 143px;\n  height: 143px;\n  bottom: -143px;\n  animation-delay: 35s;\n}\n.background li:nth-child(9) {\n  left: 63%;\n  width: 114px;\n  height: 114px;\n  bottom: -114px;\n  animation-delay: 18s;\n}\n.background li:nth-child(10) {\n  left: 34%;\n  width: 188px;\n  height: 188px;\n  bottom: -188px;\n  animation-delay: 15s;\n}\n.background li:nth-child(11) {\n  left: 73%;\n  width: 151px;\n  height: 151px;\n  bottom: -151px;\n  animation-delay: 7s;\n}\n.background li:nth-child(12) {\n  left: 35%;\n  width: 128px;\n  height: 128px;\n  bottom: -128px;\n  animation-delay: 59s;\n}\n.background li:nth-child(13) {\n  left: 24%;\n  width: 101px;\n  height: 101px;\n  bottom: -101px;\n  animation-delay: 34s;\n}\n.background li:nth-child(14) {\n  left: 9%;\n  width: 182px;\n  height: 182px;\n  bottom: -182px;\n  animation-delay: 14s;\n}\n.background li:nth-child(15) {\n  left: 73%;\n  width: 191px;\n  height: 191px;\n  bottom: -191px;\n  animation-delay: 10s;\n}\n.background li:nth-child(16) {\n  left: 25%;\n  width: 174px;\n  height: 174px;\n  bottom: -174px;\n  animation-delay: 28s;\n}\n.background li:nth-child(17) {\n  left: 31%;\n  width: 107px;\n  height: 107px;\n  bottom: -107px;\n  animation-delay: 66s;\n}\n.background li:nth-child(18) {\n  left: 16%;\n  width: 123px;\n  height: 123px;\n  bottom: -123px;\n  animation-delay: 43s;\n}\n.background li:nth-child(19) {\n  left: 61%;\n  width: 122px;\n  height: 122px;\n  bottom: -122px;\n  animation-delay: 9s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Results                                                                                                    {{quiz.Name}}            {{quiz.CreatorID}}                          {{quiz.Description}}                  Bookmark          See More                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                create_quiz\n                            \n                            \n                                delete_quiz\n                            \n                            \n                                get_category_byID\n                            \n                            \n                                get_quiz_byID\n                            \n                            \n                                get_quiz_categories\n                            \n                            \n                                get_quizname_by_ID\n                            \n                            \n                                getAllQuiz\n                            \n                            \n                                search_quiz\n                            \n                            \n                                update_quiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating(rating: Number, quizID: string, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:132\n                \n            \n\n\n            \n                \n                    Adds rating to quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rating\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quizID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Rating\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_quiz\n                        \n                    \n                \n            \n            \n                \ncreate_quiz(newQuiz: CreateQuiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a new quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newQuiz\n                                    \n                                                CreateQuiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_quiz\n                        \n                    \n                \n            \n            \n                \ndelete_quiz(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:76\n                \n            \n\n\n            \n                \n                    Remove a quiz from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_category_byID\n                        \n                    \n                \n            \n            \n                \nget_category_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:108\n                \n            \n\n\n            \n                \n                    Get the Category object given it's ID;\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_byID\n                        \n                    \n                \n            \n            \n                \nget_quiz_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:97\n                \n            \n\n\n            \n                \n                    Get Quiz by QuizID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_categories\n                        \n                    \n                \n            \n            \n                \nget_quiz_categories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:86\n                \n            \n\n\n            \n                \n                    Returns all Quiz Categories available\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quizname_by_ID\n                        \n                    \n                \n            \n            \n                \nget_quizname_by_ID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuiz\n                        \n                    \n                \n            \n            \n                \ngetAllQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:48\n                \n            \n\n\n            \n                \n                    Get all Quizzes from Quiz database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_quiz\n                        \n                    \n                \n            \n            \n                \nsearch_quiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:119\n                \n            \n\n\n            \n                \n                    Search for quiz by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quizzes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_quiz\n                        \n                    \n                \n            \n            \n                \nupdate_quiz(update: Quiz, id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:60\n                \n            \n\n\n            \n                \n                    Update the values of a particular quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/quiz\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/quiz.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { CreateQuiz, Quiz } from '../models/quiz';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/quiz\";\n\n  /**\n   * Creates a new quiz\n   * @param newQuiz\n   * @returns Quiz\n   */\n  create_quiz(newQuiz: CreateQuiz): Observable {\n    let nQuiz = JSON.stringify(newQuiz);\n    return this.http.post(this.base_url + \"/createQuiz\", nQuiz,\n      {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      }).pipe(\n        catchError(handleError)\n      );\n  }\n\n  /**\n   * Get all Quizzes from Quiz database\n   * @returns Quiz[]\n   */\n  getAllQuiz(): Observable {\n    return this.http.get(this.base_url + \"/getAllQuizzes\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Update the values of a particular quiz\n   * @param update\n   * @param id\n   * @returns Quiz\n   */\n  update_quiz(update : Quiz, id: String) : Observable{\n    let nupdate = JSON.stringify(update);\n    return this.http.patch(this.base_url+\"/updateQuiz/\"+ id,nupdate, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove a quiz from the database\n   * @param id\n   * @returns any\n   */\n  delete_quiz(id: String): Observable {\n    return this.http.delete(this.base_url + \"/deleteQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Returns all Quiz Categories available\n   * @returns Category[]\n   */\n  get_quiz_categories(): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getAllCategories\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get Quiz by QuizID\n   * @param id\n   * @returns Quiz\n   */\n  get_quiz_byID(id: string) : Observable{\n    return this.http.get(this.base_url+\"/getQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get the Category object given it's ID;\n   * @param id\n   * @returns Category\n   */\n  get_category_byID(id: string): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getCategory/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Search for quiz by id\n   * @param id \n   * @returns Quizzes\n   */\n  search_quiz(id: string): Observable{\n    return this.http.get(this.base_url+\"/searchQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Adds rating to quiz\n   * @param rating \n   * @param quizID \n   * @param userID \n   * @returns Rating\n   */\n  addRating(rating:Number, quizID:string,userID:string){\n    return this.http.post(\"https://clumsy-apron-ray.cyclic.app/api/rating/createRating\",{\n      \"Rating\": rating,\n      \"QuizID\": quizID,\n      \"UserID\": userID\n    });\n  }\n\n  get_quizname_by_ID(id: string) : Observable{\n    return this.http.get(this.base_url+\"/getQuizName/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizTypeinComponent.html":{"url":"components/QuizTypeinComponent.html","title":"component - QuizTypeinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizTypeinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-typein/quiz-typein.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-typein\n            \n\n            \n                styleUrls\n                ./quiz-typein.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-typein.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                buttonDispl\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                done\n                            \n                            \n                                link\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                quizName\n                            \n                            \n                                rated\n                            \n                            \n                                rating_form\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRating\n                            \n                            \n                                checkAnswers\n                            \n                            \n                                CopyResults\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute, quizService: QuizService, clipBoard: Clipboard, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipBoard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-typein/quiz-typein.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRating\n                        \n                    \n                \n            \n            \n                \naddRating()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:178\n                \n            \n\n\n            \n                \n                    addRating(): This function is called when the user adds a rating for the quiz.\nIt retrieves the rating from the rating_form and the user object from sessionStorage.\nIf a user is logged in, it calls the addRating method of QuizService to add the rating for the quiz.\nIt displays an alert indicating the success of the rating and sets the rated property to true.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:127\n                \n            \n\n\n            \n                \n                    checkAnswers(): This function is called when the time is up or when the user submits their answers.\nIt stops the timer by calling the stopTimer function. It then iterates over each question and compares\nthe user's answer with the correct answers stored in the answers property. If the user's answer matches a correct answer,\nit increments the numCorrect variable. It updates the timeLeftDisplay property with the remaining time,\nand the scoreDisplay property with the user's score. If a user is logged in, it sets the done property to true.\nIt also retrieves the user's rating from the rating_form and updates the scoreDisplay with the user's name and score.\nIt creates a link property with the result and a link to the quiz. It adds a new history entry using the create_history\n method of HistoryService and updates the user's play count using the update_user_plays method of HistoryService.\nFinally, it updates the User object in the sessionStorage and assigns it to the USer variable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CopyResults\n                        \n                    \n                \n            \n            \n                \nCopyResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:200\n                \n            \n\n\n            \n                \n                    CopyResults(): This function is called when the user wants to copy the results to their clipboard.\nIt uses the Clipboard service from @angular/cdk/clipboard to copy the link property to the clipboard.\nIt updates the buttonDispl property to indicate that the results have been copied.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:67\n                \n            \n\n\n            \n                \n                    ngOnInit(): This is a lifecycle hook that is called after the component has been initialized.\nIn this function, the component retrieves the route parameters using ActivatedRoute and subscribes to the params observable.\nIt retrieves the value of the id parameter from the route and assigns it to the quiz_id property of the component.\nIt then calls the get_quiz_questions method of QuestionService to fetch the questions for the quiz.\nThe fetched questions are stored in the questions property of the component. It also retrieves the name of the quiz using\nthe get_quiz_byID method of QuizService and assigns it to the quizName property. For each question, it creates a form control for the corresponding answer and adds it to the answer_form group.\nAdditionally, it sets up a countdown timer using setInterval to decrement the timeLeft property every second until it reaches 0.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-typein/quiz-typein.component.ts:111\n                \n            \n\n\n            \n                \n                    Function to stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonDispl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Share Results\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:34\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        done\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    rating: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:42\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:38\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-typein/quiz-typein.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\nimport { QuizService } from '../services/quiz.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { HistoryService } from '../services/history.service';\nimport { History } from '../models/history';\nimport { Quiz } from '../models/quiz';\n@Component({\n  selector: 'app-quiz-typein',\n  templateUrl: './quiz-typein.component.html',\n  styleUrls: ['./quiz-typein.component.scss']\n})\nexport class QuizTypeinComponent {\n    @Input() timeLeft = 30;\n\n  quiz_id: any;\n  answer_id: any;\n  quizName: any;\n  private sub: any;\n  buttonDispl = \"Share Results\"\n  link: any;\n  done: boolean = false;\n  rated: boolean = false;\n  user = sessionStorage.getItem(\"User\");\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute, private quizService: QuizService,private clipBoard: Clipboard, private historyService: HistoryService) { }\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n  rating_form = new FormGroup({\n    rating: new FormControl('')\n  });\n\n  /**\n   * ngOnInit(): This is a lifecycle hook that is called after the component has been initialized. \n   * In this function, the component retrieves the route parameters using ActivatedRoute and subscribes to the params observable. \n   * It retrieves the value of the id parameter from the route and assigns it to the quiz_id property of the component. \n   * It then calls the get_quiz_questions method of QuestionService to fetch the questions for the quiz. \n   * The fetched questions are stored in the questions property of the component. It also retrieves the name of the quiz using \n   * the get_quiz_byID method of QuizService and assigns it to the quizName property. For each question, it creates a form control for the corresponding answer and adds it to the answer_form group. \n   * Additionally, it sets up a countdown timer using setInterval to decrement the timeLeft property every second until it reaches 0.\n   */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.quiz_id = params['id'];\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n        this.quizService.get_quiz_byID(this.quiz_id).subscribe((res: Quiz) =>{\n          this.quizName = res.Name;\n        });\n        let answer: any = {}\n\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n  /**\n   * Function to stop timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n  /**\n   * checkAnswers(): This function is called when the time is up or when the user submits their answers. \n   * It stops the timer by calling the stopTimer function. It then iterates over each question and compares \n   * the user's answer with the correct answers stored in the answers property. If the user's answer matches a correct answer, \n   * it increments the numCorrect variable. It updates the timeLeftDisplay property with the remaining time, \n   * and the scoreDisplay property with the user's score. If a user is logged in, it sets the done property to true. \n   * It also retrieves the user's rating from the rating_form and updates the scoreDisplay with the user's name and score. \n   * It creates a link property with the result and a link to the quiz. It adds a new history entry using the create_history\n   *  method of HistoryService and updates the user's play count using the update_user_plays method of HistoryService. \n   * Finally, it updates the User object in the sessionStorage and assigns it to the USer variable.\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element.Answer === answer && element.Correct) {\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n    if(this.user != null){\n      this.done = true;\n    }\n    let ans = this.rating_form.get(\"rating\")?.value;\n    let USer: User;\n    if(this.user != null){\n      USer =  JSON.parse(this.user!);\n      this.scoreDisplay = USer.FirstName + \" scored \" + numCorrect + \" out of \" + this.questions.length;\n      this.link = this.scoreDisplay + \", play the quiz now: \" + \"https://quiz-platform-28fcb.web.app/quiz-info/\"+this.quiz_id;\n      // Add history:\n      let history: History = {\n        QuizID: this.quiz_id,\n        UserID: USer._id,\n        Score: numCorrect\n      }\n      this.historyService.create_history(history).subscribe((res)=>{\n        console.log(res);\n      });\n      //Update user's plays\n      this.historyService.update_user_plays(USer.Plays,USer._id).subscribe((res) =>{\n        console.log(res);\n        USer.Plays = USer.Plays + 1;\n        sessionStorage.setItem(\"User\",JSON.stringify(USer));\n      });\n    }\n  }\n\n    /**\n     * addRating(): This function is called when the user adds a rating for the quiz.\n     * It retrieves the rating from the rating_form and the user object from sessionStorage. \n     * If a user is logged in, it calls the addRating method of QuizService to add the rating for the quiz.\n     * It displays an alert indicating the success of the rating and sets the rated property to true.\n     */\n    addRating(){\n      let ans = this.rating_form.get(\"rating\")?.value;\n      let USer: User;\n      if(this.user != null){\n        USer =  JSON.parse(this.user!);\n        if(ans == null){\n          ans = \"0\"\n        }\n        this.quizService.addRating(parseInt(ans),this.quiz_id,USer._id).subscribe((res) =>{\n          alert(\"Successfully rated the quiz!\");\n          console.log(res);\n          this.rated = true;\n        });\n      }\n    }\n  \n  \n    /**\n     * CopyResults(): This function is called when the user wants to copy the results to their clipboard. \n     * It uses the Clipboard service from @angular/cdk/clipboard to copy the link property to the clipboard. \n     * It updates the buttonDispl property to indicate that the results have been copied.\n     */\n    CopyResults(){\n      this.clipBoard.copy(this.link);\n      this.buttonDispl = \"Copied Results\";\n    }\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        {{quizName}}\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                            \n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n        \n            \n                \n                    \n                        \n                            \n                            1\n                        \n                        \n                            \n                            2\n                        \n                        \n                            \n                            3\n                        \n                        \n                            \n                            4\n                        \n                        \n                            \n                            5\n                        \n                    \n                \n                Submit rating\n            \n\n            \n                {{scoreDisplay}}\n                {{link}} -->\n                {{buttonDispl}}\n            \n        \n    \n    \n\n    \n                \n                    ./quiz-typein.component.scss\n                \n                .quiz-container {\n    background: rgb(4, 82, 137);\n    background: linear-gradient(180deg, rgba(4, 82, 137, 1) 0%, rgba(22, 0, 84, 1) 50%, rgba(82, 1, 63, 1) 100%);\n    margin: 0 auto;\n    text-align: center;\n    min-height: 100vh;\n    max-height: fit-content;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.result {\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.card {\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    padding: 15px;\n    border-radius: 35px;\n}\n\n.quest {\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.button{\n    width: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            {{quizName}}         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                                                                                                                            Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}ubmit rating                                        {{scoreDisplay}}                {{link}} -->                {{buttonDispl}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizTypeinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default @Component decorator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registration_form\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n                \n                    \n                            Registration Component Contructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that will register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registration_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:27\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:85\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:91\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:97\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:103\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:109\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:115\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\nimport { Router } from '@angular/router';\n/**\n * Default @Component decorator\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\n\nexport class RegistrationComponent {\n  /**\n   * Registration Component Contructor to inject user Service and router\n   * @param userService \n   * @param router \n   */\n  constructor(public userService: UserService, public router: Router) { }\n\n  /**\n   * Create a FormGroup and setup form controls for each field along with Validators\n  */\n  registration_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Function that will register a new user\n  */\n  public registerUser() {\n    let user: CreateUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n      Plays: 0\n    }\n    // First check whether email is taken or not!\n    let result = { email_status: true };\n    this.userService.check_email_exists(user.Email).subscribe((res) => {\n      console.log(res);\n      result = res;\n      if (result['email_status'] == false) {\n        /**\n         * Calls userService to perform http request\n         */\n        this.userService.create_user(user).subscribe(\n          (response: User) => {\n            this.router.navigate(['/login']);\n          });\n        this.registration_form.reset();\n      }else{\n        alert(\"Email already exists, try another email!\");\n      }\n    });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.registration_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.registration_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.registration_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.registration_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.registration_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.registration_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Prizm\n            \n            \n              Worlds Best!\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  First Name is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Surname is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Username is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              \n                \n                  Email is required.\n                \n                \n                  Invalid Email\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Password too short.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Passwords don't match.\n                \n              \n            \n            \n              \n                \n                  Register\n                \n              \n            \n            \n              \n                Already have an account? Login\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .back {\n    display: grid;\n\n    /* The image used */\n    // background-image: url(\"../../assets/pexels-ryutaro-tsukata-5220092.jpg\");\n    background-image: url(\"../../assets/images/cube.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.column {\n    padding: 0;\n}\n\n.register {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/grad.jpeg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Prizm                                      Worlds Best!                                                                                                                                                                                                                              First Name is required.                                                                                                                                                                                                    Surname is required.                                                                                                                                                                                                    Username is required.                                                                                                                                                                                                                                                      Email is required.                                                  Invalid Email                                                                                                                                                                                                    Password is required.                                                  Password too short.                                                                                                                                                                                                    Password is required.                                                  Passwords don\\'t match.                                                                                                      Register                                                                                    Already have an account? Login                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'ChallengeComponent', 'selector': 'app-challenge'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FriendInfoComponent', 'selector': 'app-friend-info'},{'name': 'FriendsComponent', 'selector': 'app-friends'},{'name': 'FriendSelectComponent', 'selector': 'app-friend-select'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizImageComponent', 'selector': 'app-quiz-image'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizResultComponent', 'selector': 'app-quiz-result'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'QuizTypeinComponent', 'selector': 'app-quiz-typein'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnswer.html":{"url":"classes/UpdateAnswer.html","title":"class - UpdateAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                UpdateAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:61\n                        \n                    \n\n            \n                \n                    The value for the Updated answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:65\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestion.html":{"url":"classes/UpdateQuestion.html","title":"class - UpdateQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Update Question Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:58\n                        \n                    \n\n            \n                \n                    Updated question value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User class, response from database in this format\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Score\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:42\n                        \n                    \n\n            \n                \n                    Unknown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n            \n                \n                    ID Genereated by Database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    List of users friends!\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:13\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Score: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_email_exists\n                            \n                            \n                                create_friends\n                            \n                            \n                                create_user\n                            \n                            \n                                delete_friend\n                            \n                            \n                                edit_user\n                            \n                            \n                                get_usernameID\n                            \n                            \n                                getFriends\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check_email_exists\n                        \n                    \n                \n            \n            \n                \ncheck_email_exists(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Check if email can be registered or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        True or false value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_friends\n                        \n                    \n                \n            \n            \n                \ncreate_friends(friendID: string, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:93\n                \n            \n\n\n            \n                \n                    Create friends\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friendID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_user\n                        \n                    \n                \n            \n            \n                \ncreate_user(user: CreateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:45\n                \n            \n\n\n            \n                \n                    Take user input and create new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_friend\n                        \n                    \n                \n            \n            \n                \ndelete_friend(friendObjID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:121\n                \n            \n\n\n            \n                \n                    Remove friends\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    friendObjID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Message: true/false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit_user\n                        \n                    \n                \n            \n            \n                \nedit_user(user: EditUser, userID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:61\n                \n            \n\n\n            \n                \n                    Take new info and update current user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_usernameID\n                        \n                    \n                \n            \n            \n                \nget_usernameID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:132\n                \n            \n\n\n            \n                \n                    Get username by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        User Name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFriends\n                        \n                    \n                \n            \n            \n                \ngetFriends(userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:110\n                \n            \n\n\n            \n                \n                    Get Friends List\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Array of friends IDs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: LoginUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:77\n                \n            \n\n\n            \n                \n                    Log the user in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LoginUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        User\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/user\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n            \n                \n                    All user related requests use this base url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable } from 'rxjs';\n\nimport { CreateUser, EditUser, LoginUser, User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\nimport { FRIEND } from '../models/friend';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * All user related requests use this base url\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/user\";\n  user : User = new User();\n\n  /**\n   * Check if email can be registered or not\n   * @param email \n   * @returns True or false value\n   */\n  check_email_exists(email: string) : Observable{\n    return this.http.get(this.base_url+\"/emailExists/\"+ email).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Take user input and create new user\n   * @param user \n   * @returns \n   */\n  create_user(user: CreateUser) : Observable{\n    let userNew = JSON.stringify(user);\n    return this.http.post(this.base_url+\"/createUser\",userNew,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Take new info and update current user.\n   * @param user \n   * @param userID \n   * @returns \n   */\n  edit_user(user: EditUser, userID: String) : Observable{\n    let userUpdated = JSON.stringify(user);\n    return this.http.patch(this.base_url+\"/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Log the user in\n   * @param email \n   * @param password \n   * @returns User\n   */\n  login(user : LoginUser) : Observable{\n    let body = JSON.stringify(user)\n    return this.http.post(this.base_url+\"/login\",body,{\n      headers: new HttpHeaders({\n        'Content-Type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Create friends\n   * @param friendArray\n   * @param userID\n   */\n  create_friends(friendID: string, userID : string) {\n    let body = JSON.stringify({\n      \"Username\": userID,\n      \"Friend\": friendID\n    });\n    return this.http.post(\"https://clumsy-apron-ray.cyclic.app/api/friend/createFriend\",body,{\n      headers: new HttpHeaders({\n        'Content-Type' : 'application/json'\n      })\n    }).pipe(catchError(handleError));\n  }\n\n  /**\n   * Get Friends List\n   * @param userID\n   * @returns Array of friends IDs\n   */\n  getFriends(userID: string): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/friend/getFriends/\"+userID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove friends\n   * @param friendObjID \n   * @returns Message: true/false\n   */\n  delete_friend(friendObjID: string): Observable{\n    return this.http.delete(\"https://clumsy-apron-ray.cyclic.app/api/friend/deleteFriend/\"+friendObjID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get username by id\n   * @param id \n   * @returns User Name\n   */\n  get_usernameID(id:string){\n    return this.http.get(this.base_url+\"/getName/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/bookmarks/bookmarks.component.ts\n            \n            component\n            BookmarksComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/challenge/challenge.component.ts\n            \n            component\n            ChallengeComponent\n            \n                62 %\n                (15/24)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/friend-info/friend-info.component.ts\n            \n            component\n            FriendInfoComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/friend-select/friend-select.component.ts\n            \n            component\n            FriendSelectComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/friends/friends.component.ts\n            \n            component\n            FriendsComponent\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/guards/edit-profile.guard.ts\n            \n            guard\n            EditProfileGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/leaderboard/leaderboard.component.ts\n            \n            component\n            LeaderboardComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/master-answer/master-answer.component.ts\n            \n            component\n            MasterAnswerComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            Answer\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            NewAnswer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            UpdateAnswer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            AddBookmark\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            Bookmark\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/categories.ts\n            \n            class\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/friend.ts\n            \n            class\n            FRIEND\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/models/history.ts\n            \n            class\n            History\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/models/history.ts\n            \n            class\n            HistoryArr\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/models/qna.ts\n            \n            class\n            NewQuestionAnswer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            NewQuestion\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            Question\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            UpdateQuestion\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            CreateQuiz\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            Quiz\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            CreateUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            EditUser\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            LoginUser\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pipes/book-filter.pipe.ts\n            \n            pipe\n            BookFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter-friends.pipe.ts\n            \n            pipe\n            FilterFriendsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            pipe\n            FilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/quiz-answer/quiz-answer.component.ts\n            \n            component\n            QuizAnswerComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/quiz-create/quiz-create.component.ts\n            \n            component\n            QuizCreateComponent\n            \n                40 %\n                (8/20)\n            \n        \n        \n            \n                \n                src/app/quiz-image/quiz-image.component.ts\n            \n            component\n            QuizImageComponent\n            \n                38 %\n                (10/26)\n            \n        \n        \n            \n                \n                src/app/quiz-info/quiz-info.component.ts\n            \n            component\n            QuizInfoComponent\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/quiz-result/quiz-result.component.ts\n            \n            component\n            QuizResultComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/quiz-search/quiz-search.component.ts\n            \n            component\n            QuizSearchComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/quiz-typein/quiz-typein.component.ts\n            \n            component\n            QuizTypeinComponent\n            \n                30 %\n                (8/26)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/bookmark.service.ts\n            \n            injectable\n            BookmarkService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/leaderboard.service.ts\n            \n            injectable\n            LeaderboardService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/utilities/errorhandler.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utilities/password.validator.ts\n            \n            variable\n            confirmPassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.8\n        \n            @angular/cdk : ^15.2.8\n        \n            @angular/common : ^15.2.8\n        \n            @angular/compiler : ^15.2.8\n        \n            @angular/core : ^15.2.8\n        \n            @angular/forms : ^15.2.8\n        \n            @angular/platform-browser : ^15.2.8\n        \n            @angular/platform-browser-dynamic : ^15.2.8\n        \n            @angular/router : ^15.2.8\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bulma : ^0.9.4\n        \n            clipboard : ^2.0.11\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleError   (src/.../errorhandler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/errorhandler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                    handleError function called when an HttpError occurs in API call\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nService Statuses\n\n\n\nService\nStatus\n\n\n\n\nContinuous Integration\n\n\n\nCode Coverage\n\n\n\nDocumentation\nhttps://aksharnana.github.io/QuizPlatform-Docs/\n\n\n\nAbout the project\nThis project involves creating and executing a quiz platform similar to Sporcle or Jetpunk, where users can both create and take quizzes. Additionally, users can share their quiz results with friends, and even create groups for competitions. Various types of questions should be available, such as simple question-answer, image-based, and matching questions. Quizzes should also be categorized and rated by users.\n(back to top)\n\nTech Stack\nClient Side:  \nServer Side:   \n(back to top)\n\n\nGetting Started\nPrerequisites\nInstall NPM packages:\n  cd Quiz_Platform\n  npm installInstallation and Usage\n\nGo to the project directory\n\n  cd Quiz_Platform\nStart the server\n\n  ng serve --openTests\nTo run tests, run the following command\n  npm run testAuto Documentation\nTo generate local documentation, run the following command\n  npm run compodocTo serve the generated documentation, run the command\n  npm run compodoc-serve(back to top)\n\nContinuous Integration / Continuous Deployment\nQuiz Platform is using Circle CI for running tests, building and pushing to firebase hosting as well as updating the codecov page on every commit.\nDeployment\nThe live project link is:\nhttps://quiz-platform-28fcb.web.app/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nChallengeComponent\n\nChallengeComponent\n\nAppModule -->\n\nChallengeComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterFriendsPipe\n\nFilterFriendsPipe\n\nAppModule -->\n\nFilterFriendsPipe->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nFriendInfoComponent\n\nFriendInfoComponent\n\nAppModule -->\n\nFriendInfoComponent->AppModule\n\n\n\n\n\nFriendSelectComponent\n\nFriendSelectComponent\n\nAppModule -->\n\nFriendSelectComponent->AppModule\n\n\n\n\n\nFriendsComponent\n\nFriendsComponent\n\nAppModule -->\n\nFriendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizImageComponent\n\nQuizImageComponent\n\nAppModule -->\n\nQuizImageComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizResultComponent\n\nQuizResultComponent\n\nAppModule -->\n\nQuizResultComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nQuizTypeinComponent\n\nQuizTypeinComponent\n\nAppModule -->\n\nQuizTypeinComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmPassword   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n    const ctrl = control.get(\"password\");\n    const match_ctrl = control.get(\"confirm_password\");\n    /*\n    * Returns true when passowrd and confirm password have matching values. Reruns the ValidationError if they don't match\n    */\n    return ctrl && match_ctrl && ctrl.value !== match_ctrl.value ? { confirmPassword: false } : null;\n}\n                    \n                \n\n            \n                \n                    Validator Function to validate password and confirm password fields.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
