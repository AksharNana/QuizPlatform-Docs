var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddBookmark.html",[0,0.129,1,1.895]],["body/classes/AddBookmark.html",[0,0.209,1,3.063,2,1.332,3,0.291,4,0.291,5,0.257,6,3.457,7,0.643,8,3.3,9,3.208,10,1.762,11,0.326,12,0.545,13,2.87,14,3.729,15,0.322,16,0.023,17,0.978,18,0.594,19,0.594,20,0.407,21,4.576,22,1.211,23,5.32,24,5.32,25,4.576,26,3.9,27,0.364,28,1.06,29,1.189,30,1.493,31,1.777,32,1.493,33,1.189,34,1.06,35,0.017,36,0.052]],["title/classes/Answer.html",[0,0.129,37,1.222]],["body/classes/Answer.html",[0,0.208,2,1.099,3,0.24,4,0.24,5,0.212,7,0.53,10,1.753,11,0.269,12,0.481,15,0.398,16,0.023,17,0.987,18,0.676,19,0.718,20,0.464,26,3.557,27,0.362,28,1.17,29,1.312,30,1.856,31,1.96,32,1.856,33,1.312,34,1.17,35,0.015,36,0.046,37,2.517,38,2.578,39,4.281,40,4.149,41,3.774,42,3.774,43,3.774,44,2.505,45,2.358,46,3.774,47,3.798,48,4.59,49,3.774,50,2.251,51,2.346,52,3.774,53,2.021,54,2.913,55,2.177]],["title/injectables/AnswerService.html",[56,1.295,57,2.212]],["body/injectables/AnswerService.html",[0,0.112,3,0.195,4,0.195,5,0.172,7,0.431,11,0.218,12,0.417,15,0.373,16,0.023,17,0.919,18,0.318,19,0.318,20,0.458,27,0.195,28,1.288,29,1.137,35,0.013,36,0.04,37,2.459,40,2.988,50,1.511,53,3.369,54,2.941,56,1.601,57,2.734,58,1.769,59,2.615,60,2.158,61,1.273,62,3.187,63,1.074,64,4.374,65,4.374,66,4.374,67,4.374,68,5.559,69,4.374,70,1.571,71,1.917,72,3.475,73,3.067,74,2.185,75,3.391,76,2.523,77,1.416,78,0.919,79,1.416,80,4.374,81,3.067,82,1.803,83,3.729,84,1.649,85,3.665,86,4.374,87,3.067,88,2.523,89,2.988,90,4.174,91,4.374,92,4.374,93,3.067,94,4.374,95,4.374,96,3.067,97,3.729,98,3.067,99,1.918,100,3.067,101,3.067,102,3.305,103,2.734,104,2.734,105,4.374,106,3.067,107,2.734,108,2.734,109,2.734,110,1.285,111,1.917,112,3.475,113,1.769,114,0.632,115,1.917,116,2.095,117,1.532,118,2.317,119,1.643,120,1.917,121,1.643,122,1.532,123,3.273,124,1.059,125,5.878,126,4.374,127,2.237,128,2.317,129,3.067,130,3.187,131,1.866,132,1.761,133,3.187,134,1.918,135,3.674,136,3.067,137,3.067,138,3.067,139,3.067,140,3.067,141,3.067,142,3.067,143,3.067]],["title/components/AppComponent.html",[144,0.687,145,1.222]],["body/components/AppComponent.html",[0,0.118,3,0.205,4,0.205,5,0.181,7,0.452,9,2.114,11,0.229,12,0.431,15,0.319,16,0.023,17,0.452,18,0.543,19,0.621,20,0.464,22,1.204,27,0.205,28,1.213,35,0.014,36,0.041,44,1.865,45,1.248,60,2.204,61,0.936,63,1.11,70,0.991,77,0.745,78,0.787,79,0.745,82,1.865,84,1.11,110,0.989,114,0.663,122,2.259,124,1.111,132,1.562,144,1.161,145,1.961,146,1.756,147,1.326,148,1.326,149,1.326,150,1.326,151,2.741,152,3.857,153,4.523,154,1.177,155,2.844,156,2.678,157,1.865,158,5.233,159,1.865,160,4.523,161,5.233,162,5.233,163,4.521,164,6.376,165,1.36,166,4.521,167,6.206,168,3.215,169,4.239,170,4.523,171,3.215,172,1.865,173,3.215,174,1.984,175,4.523,176,5.678,177,5.984,178,5.102,179,5.678,180,4.523,181,4.523,182,3.215,183,4.461,184,3.857,185,4.523,186,3.215,187,3.857,188,4.523,189,2.654,190,3.215,191,2.423,192,3.215,193,1.326,194,3.215,195,3.215,196,3.857,197,4.523,198,3.215,199,3.215,200,3.215,201,3.215,202,3.215,203,3.417,204,3.417,205,3.417,206,4.523,207,4.523,208,4.523,209,4.523,210,4.523,211,3.417,212,3.857,213,2.01,214,1.41,215,1.722,216,2.114,217,1.984,218,3.215,219,1.326,220,1.865,221,1.865,222,2.341,223,1.326,224,1.41,225,1.049,226,1.41,227,1.049,228,1.177,229,1.41,230,1.049,231,1.41,232,1.049,233,1.41,234,1.049,235,1.248,236,1.984,237,1.049,238,0.991,239,1.41,240,1.049,241,1.41,242,1.049,243,1.41,244,1.049,245,1.41,246,1.41,247,1.41]],["title/modules/AppModule.html",[248,2.674,249,2.417]],["body/modules/AppModule.html",[0,0.132,3,0.229,4,0.229,5,0.202,16,0.023,22,1.156,27,0.229,35,0.015,36,0.045,110,1.569,113,2.075,114,0.741,145,2.409,156,1.396,225,2.096,227,2.096,228,1.316,230,2.096,232,2.096,234,2.096,235,1.396,237,2.096,238,1.98,240,2.096,242,2.096,244,2.096,249,5.037,250,2.248,251,3.338,252,3.066,253,3.066,254,3.066,255,3.066,256,4.016,257,4.109,258,4.016,259,4.167,260,3.066,261,2.717,262,3.596,263,4.887,264,4.167,265,4.887,266,4.167,267,4.887,268,3.066,269,2.717,270,4.887,271,1.926,272,4.887,273,3.596,274,3.596,275,3.066,276,2.456,277,3.066,278,3.066,279,2.456,280,4.167,281,3.066,282,2.456,283,3.066,284,3.066,285,3.596,286,2.456,287,2.456,288,3.066,289,2.456,290,3.066,291,3.596,292,3.596,293,3.596]],["title/modules/AppRoutingModule.html",[248,2.674,258,2.212]],["body/modules/AppRoutingModule.html",[0,0.148,3,0.258,4,0.258,5,0.228,8,2.335,16,0.023,20,0.288,22,1.332,27,0.336,35,0.016,36,0.048,60,1.571,82,1.668,110,1.568,114,0.834,144,1.359,152,3.45,169,2.764,193,1.668,203,3.995,225,1.725,227,1.725,228,1.935,230,1.725,232,1.725,234,1.725,235,1.571,237,1.725,238,1.629,240,1.32,242,1.725,244,1.725,248,3.058,250,2.53,258,3.305,264,3.45,266,4.508,275,3.45,276,2.764,277,3.45,278,3.45,279,2.764,280,4.508,281,3.45,282,2.764,283,3.45,284,3.45,286,2.764,287,2.764,288,3.45,289,2.764,290,3.45,294,4.047,295,4.047,296,5.287,297,4.265,298,4.265,299,4.047,300,4.047,301,4.022,302,4.047,303,7.101,304,4.047,305,3.058,306,3.058,307,4.895,308,2.764,309,3.058,310,4.047,311,4.047,312,4.047,313,3.058,314,4.047,315,4.047,316,4.047,317,4.047,318,3.45,319,3.45,320,4.047,321,4.047,322,4.047]],["title/pipes/BookFilterPipe.html",[134,1.552,256,2.212]],["body/pipes/BookFilterPipe.html",[0,0.184,3,0.32,4,0.32,5,0.282,15,0.282,16,0.022,17,0.913,20,0.358,22,1.31,27,0.32,35,0.018,36,0.055,63,1.233,77,1.164,78,0.978,79,1.164,84,1.233,99,2.656,110,1.324,114,1.035,127,2.217,134,2.656,154,1.839,256,3.786,323,3.795,324,5.164,325,4.283,326,6.056,327,3.431,328,5.164,329,5.544,330,5.023,331,5.164,332,2.348,333,2.071,334,4.283,335,4.283,336,5.023]],["title/classes/Bookmark.html",[0,0.129,9,1.654]],["body/classes/Bookmark.html",[0,0.204,1,2.349,2,1.277,3,0.279,4,0.279,5,0.247,6,3.313,7,0.616,8,2.53,9,3.224,10,1.716,11,0.312,12,0.531,13,2.843,14,3.694,15,0.362,16,0.023,17,0.98,18,0.668,19,0.668,20,0.458,22,1.187,23,5.216,24,5.216,26,3.824,27,0.354,28,1.29,29,1.447,30,1.995,31,2.162,32,1.995,33,1.447,34,1.29,35,0.017,36,0.051,337,4.385,338,4.385,339,4.385,340,4.385]],["title/injectables/BookmarkService.html",[56,1.295,341,2.042]],["body/injectables/BookmarkService.html",[0,0.133,1,3.209,3,0.232,4,0.232,5,0.205,7,0.512,9,3.36,11,0.26,12,0.47,14,2.643,15,0.363,16,0.023,17,0.842,18,0.379,19,0.379,20,0.446,27,0.232,29,1.283,35,0.015,36,0.045,56,1.806,58,2.105,60,1.916,61,1.437,62,3.496,63,1.212,70,1.723,71,2.281,72,3.746,74,2.465,75,3.611,76,2.847,77,1.389,78,0.901,79,1.389,84,1.584,85,3.534,88,2.847,103,3.085,104,3.085,107,3.085,108,3.085,109,3.085,110,1.369,112,3.085,113,2.105,114,0.752,115,2.281,116,2.492,117,1.822,119,1.954,120,2.281,121,1.954,122,1.822,123,3.209,124,1.26,127,2.291,130,2.281,131,1.335,132,1.26,133,2.281,134,1.6,135,3.496,165,1.557,313,3.729,341,2.847,342,3.111,343,4.935,344,4.935,345,4.935,346,3.648,347,4.935,348,3.648,349,4.935,350,3.648,351,3.729,352,4.935,353,3.648,354,4.208,355,4.935,356,3.648,357,2.492,358,3.648,359,4.935,360,3.648,361,3.648,362,3.648]],["title/components/BookmarksComponent.html",[144,0.687,225,1.154]],["body/components/BookmarksComponent.html",[0,0.106,3,0.184,4,0.184,5,0.163,9,2.531,11,0.299,12,0.4,15,0.348,16,0.023,17,0.761,18,0.562,19,0.597,20,0.451,22,1.302,27,0.184,33,1.284,34,1.145,35,0.013,36,0.038,61,0.844,63,1.031,70,0.893,77,1.145,78,0.865,79,1.145,84,1.212,99,2.521,110,1.311,114,0.597,124,1.001,132,1.45,144,0.958,145,1.001,146,1.63,147,1.195,148,1.195,149,1.195,150,1.195,154,1.06,155,2.793,156,2.63,157,1.731,159,1.731,165,1.558,166,3.173,172,2.036,178,2.47,183,2.47,214,1.841,216,1.963,217,2.375,219,1.195,220,1.731,221,1.731,222,2.233,223,1.195,224,1.271,225,1.766,226,1.271,227,0.945,228,1.06,229,1.271,230,0.945,231,1.271,232,0.945,233,1.271,234,0.945,235,1.125,236,1.841,237,0.945,238,0.893,239,1.271,240,0.945,241,1.271,242,0.945,243,1.271,244,0.945,245,1.271,246,1.271,247,1.271,313,4.877,332,1.354,333,1.731,341,3.458,357,1.979,363,2.47,364,2.645,365,4.939,366,4.199,367,4.939,368,2.901,369,4.199,370,2.897,371,2.89,372,4.199,373,2.897,374,4.199,375,4.939,376,2.897,377,2.897,378,2.897,379,2.897,380,2.897,381,4.199,382,2.897,383,2.47,384,2.897,385,2.189,386,1.672,387,1.447,388,1.447,389,2.897,390,2.897,391,1.552,392,2.897,393,2.897,394,2.897,395,2.897,396,2.897,397,2.897,398,2.422,399,2.47,400,4.199,401,4.199,402,3.173,403,1.354,404,1.354,405,1.672,406,3.064,407,3.594,408,3.594,409,3.594,410,1.447,411,3.316,412,1.672,413,2.249,414,2.308,415,2.901,416,3.124,417,2.467,418,1.963,419,2.249,420,2.625,421,2.308,422,1.811,423,1.811,424,1.963,425,1.811,426,2.47,427,2.47,428,2.47,429,1.672,430,1.672,431,1.672,432,1.672,433,1.811,434,1.811,435,1.672,436,2.422,437,1.552,438,1.447,439,1.552,440,1.552,441,1.672,442,3.58,443,2.189,444,2.249,445,1.811,446,2.47,447,2.47]],["title/classes/Category.html",[0,0.129,448,1.552]],["body/classes/Category.html",[0,0.179,2,1.423,3,0.311,4,0.311,5,0.275,7,0.686,10,1.506,11,0.348,12,0.568,15,0.361,16,0.023,17,0.939,18,0.667,19,0.712,20,0.458,27,0.311,28,1.38,29,1.548,30,2.095,31,2.312,32,2.095,33,1.548,34,1.38,35,0.018,36,0.055,78,0.966,448,3.007,449,4.167,450,4.887,451,4.887,452,4.887]],["title/classes/CreateQuiz.html",[0,0.129,453,2.042]],["body/classes/CreateQuiz.html",[0,0.166,2,0.942,3,0.206,4,0.206,5,0.182,7,0.916,10,1.4,11,0.231,12,0.433,15,0.395,16,0.023,17,0.987,18,0.688,19,0.688,20,0.472,22,1.409,27,0.289,28,0.75,29,0.841,30,1.055,31,1.256,32,1.055,33,1.745,34,1.48,35,0.014,36,0.042,44,2.165,45,2.039,51,2.165,78,0.961,82,1.334,89,3.586,448,2.801,453,2.621,454,2.445,455,4.826,456,4.302,457,4.826,458,2.844,459,3.889,460,3.236,461,3.967,462,3.236,463,3.236,464,4.477,465,3.236,466,3.236,467,3.236,468,3.236,469,3.967,470,3.967,471,3.967,472,3.236,473,3.586,474,4.477,475,3.236,476,4.477,477,4.477,478,4.477]],["title/classes/CreateUser.html",[0,0.129,479,1.768]],["body/classes/CreateUser.html",[0,0.232,2,0.925,3,0.202,4,0.202,5,0.179,7,0.447,10,0.979,11,0.226,12,0.428,15,0.348,16,0.023,17,1.012,18,0.642,19,0.642,20,0.44,27,0.36,28,0.737,29,0.826,30,1.037,32,1.037,33,1.652,34,1.309,35,0.014,36,0.041,78,0.85,165,1.758,458,3.174,479,2.822,480,1.987,481,3.251,482,3.552,483,2.598,484,3.251,485,2.805,486,3.379,487,3.437,488,3.162,489,3.807,490,3.807,491,3.179,492,4.097,493,4.069,494,3.179,495,3.259,496,3.179,497,3.179,498,3.552,499,3.179,500,3.179,501,1.987,502,2.171,503,2.589,504,2.171,505,2.241,506,1.987,507,2.241]],["title/components/EditProfileComponent.html",[144,0.687,227,1.154]],["body/components/EditProfileComponent.html",[0,0.076,3,0.133,4,0.133,5,0.117,7,0.293,11,0.148,12,0.312,14,1.117,15,0.227,16,0.023,18,0.216,19,0.216,20,0.437,22,0.889,27,0.133,35,0.01,36,0.03,60,1.271,61,1.177,63,0.804,70,1.246,74,1.635,77,0.483,78,0.749,79,0.483,82,1.35,84,1.554,110,1.088,114,0.43,127,1.934,131,2.346,132,0.72,144,0.785,145,0.72,146,1.271,147,0.859,148,0.859,149,0.859,150,0.859,154,0.763,155,2.61,156,2.458,157,1.35,159,1.35,165,1.596,172,0.859,174,1.436,191,1.117,213,2.047,214,2.009,215,1.754,216,0.974,217,2.009,219,0.859,220,1.35,221,1.35,222,1.889,223,0.859,224,0.914,225,0.68,226,0.914,227,1.494,228,2.155,229,0.914,230,0.68,231,0.914,232,0.68,233,0.914,234,0.68,235,0.809,236,1.436,237,0.68,238,0.642,239,0.914,240,0.68,241,0.914,242,0.68,243,0.914,244,0.68,245,0.914,246,0.914,247,0.914,271,1.117,276,4.264,305,1.575,309,2.474,387,1.041,398,1.203,403,2.327,404,1.53,405,1.203,406,2.87,407,3.112,408,3.112,409,3.112,410,1.041,411,2.872,412,1.203,413,2.454,414,2.327,415,2.454,416,2.643,417,2.02,418,1.53,419,1.754,420,2.047,421,2.327,422,1.303,423,1.303,424,1.53,425,1.303,429,1.203,430,1.203,431,1.203,432,1.203,433,1.303,434,1.303,435,1.203,436,1.889,437,1.117,438,1.041,439,1.117,440,1.117,441,1.203,444,1.754,445,1.303,483,3.266,486,3.118,487,1.203,488,2.995,489,3.475,490,3.475,492,1.889,495,1.889,505,1.635,508,5.322,509,1.777,510,4.043,511,3.274,512,4.043,513,3.055,514,3.4,515,3.543,516,4.581,517,2.474,518,4.712,519,4.712,520,1.575,521,2.085,522,3.274,523,3.906,524,2.792,525,2.085,526,3.112,527,3.957,528,4.264,529,2.474,530,2.474,531,3.112,532,2.762,533,2.085,534,2.474,535,2.474,536,2.474,537,2.474,538,2.085,539,3.274,540,2.474,541,2.236,542,2.085,543,1.777,544,2.085,545,4.264,546,1.777,547,2.085,548,1.777,549,2.085,550,1.575,551,2.085,552,1.575,553,2.085,554,1.777,555,2.085,556,1.575,557,1.777,558,1.777,559,2.085,560,2.085,561,2.085,562,2.085,563,2.085,564,2.085,565,2.085,566,2.085,567,2.085,568,1.777,569,1.777,570,1.777,571,1.777,572,1.777,573,1.777,574,1.777,575,2.085,576,1.575,577,2.085,578,1.777,579,2.085,580,2.085,581,2.085,582,2.085,583,2.085,584,2.085,585,2.085,586,4.716,587,2.474,588,2.474,589,2.792,590,1.424,591,2.792,592,1.575,593,1.575,594,1.575,595,1.424,596,1.203,597,1.889,598,1.203,599,1.203,600,1.117,601,1.203,602,2.762,603,1.575,604,1.575,605,1.754,606,2.236,607,1.575,608,1.424,609,1.575,610,1.575,611,1.575,612,1.575,613,1.575,614,1.575,615,1.575,616,1.889,617,2.236,618,1.424,619,2.474,620,1.424,621,1.203,622,1.203,623,1.424]],["title/guards/EditProfileGuard.html",[298,2.417,624,2.674]],["body/guards/EditProfileGuard.html",[0,0.164,3,0.284,4,0.284,5,0.251,7,0.628,11,0.318,15,0.251,16,0.023,20,0.318,27,0.284,35,0.017,36,0.052,44,2.324,45,1.736,47,3.523,56,2.063,60,2.188,61,1.641,63,1.384,77,1.036,78,0.672,79,1.036,84,1.384,85,3.306,110,1.35,114,0.921,117,2.233,121,2.395,122,2.233,123,3.019,127,2.063,165,1.604,174,2.472,189,2.09,191,2.395,193,1.843,298,3.85,307,5.048,333,1.843,541,3.85,625,3.378,626,4.806,627,3.812,628,3.812,629,5.526,630,5.526,631,5.526,632,4.471,633,5.636,634,5.636,635,3.561,636,4.806,637,5.263,638,3.812,639,2.795,640,3.053,641,4.471,642,4.471,643,3.812,644,4.471,645,4.471]],["title/classes/EditUser.html",[0,0.129,505,1.768]],["body/classes/EditUser.html",[0,0.234,2,0.943,3,0.206,4,0.206,5,0.182,7,0.455,10,0.998,11,0.231,12,0.433,15,0.337,16,0.023,17,1.014,18,0.623,19,0.623,20,0.427,27,0.363,28,0.751,29,0.842,30,1.057,32,1.057,33,1.56,34,1.218,35,0.014,36,0.042,78,0.857,165,1.746,458,2.846,479,2.272,480,2.025,481,3.285,482,3.589,483,2.625,484,3.285,485,2.025,486,3.391,487,3.462,488,3.173,489,3.824,490,3.824,492,4.106,493,4.099,495,3.287,498,3.106,501,2.025,502,2.213,503,2.624,504,2.213,505,2.846,506,2.843,507,2.272,646,3.24,647,3.24,648,3.24,649,3.24,650,3.24]],["title/pipes/FilterPipe.html",[134,1.552,257,2.212]],["body/pipes/FilterPipe.html",[0,0.182,3,0.317,4,0.317,5,0.28,15,0.28,16,0.022,17,0.91,20,0.355,22,1.306,27,0.317,35,0.018,36,0.055,63,1.223,77,1.155,78,0.975,79,1.155,84,1.223,99,2.643,110,1.318,114,1.027,127,2.206,134,2.643,154,1.824,257,3.768,323,3.765,327,3.404,328,5.139,329,5.878,331,5.139,332,2.329,333,2.055,334,4.249,335,4.249,600,3.228,651,4.249,652,4.983,653,4.249,654,4.983]],["title/components/HomeComponent.html",[144,0.687,230,1.154]],["body/components/HomeComponent.html",[0,0.104,1,2.221,3,0.181,4,0.181,5,0.16,8,1.643,9,2.511,11,0.203,12,0.466,13,1.174,14,1.526,15,0.346,16,0.023,17,0.864,18,0.593,19,0.667,20,0.458,22,1.311,27,0.181,35,0.013,36,0.038,61,0.829,63,1.018,70,0.878,77,1.133,78,0.859,79,1.133,84,1.201,88,1.643,99,2.504,102,2.152,110,1.345,114,0.587,124,0.984,132,0.984,144,1.043,145,0.984,146,1.61,147,1.174,148,1.174,149,1.174,150,1.174,154,1.043,155,2.784,156,2.622,157,1.71,159,1.71,165,1.549,172,2.016,191,2.221,203,4.314,205,3.133,214,2.356,216,1.331,217,1.249,219,1.174,220,1.71,221,1.71,222,2.215,223,1.174,224,1.249,225,0.929,226,1.249,227,0.929,228,1.043,229,1.249,230,1.752,231,1.249,232,0.929,233,1.249,234,0.929,235,1.106,236,1.819,237,0.929,238,0.878,239,1.249,240,0.929,241,1.249,242,0.929,243,1.249,244,0.929,245,1.249,246,1.249,247,1.249,332,1.331,333,1.71,341,3.549,357,1.945,364,2.62,368,2.878,371,2.785,383,4.581,385,2.152,386,1.643,387,1.423,388,2.072,391,2.62,402,3.133,404,1.331,406,1.331,410,2.072,414,1.331,417,1.423,418,1.938,421,1.331,424,1.331,438,1.423,444,1.526,448,2.145,513,3.133,541,2.833,596,1.643,597,2.393,598,1.643,599,1.643,600,1.526,601,1.643,605,1.526,621,1.643,639,1.78,640,1.945,653,4.17,655,2.428,656,4.891,657,4.147,658,4.891,659,5.372,660,5.372,661,3.536,662,4.147,663,2.152,664,4.891,665,2.848,666,3.536,667,2.848,668,2.848,669,4.147,670,2.848,671,2.848,672,2.848,673,2.848,674,2.848,675,2.848,676,1.945,677,2.428,678,3.057,679,2.848,680,2.428,681,2.848,682,2.848,683,2.428,684,2.848,685,2.848,686,2.428,687,2.428,688,2.428,689,2.428,690,2.428,691,2.428,692,2.428,693,3.536,694,2.152,695,2.428,696,2.152,697,1.945,698,2.428,699,2.848,700,2.848,701,4.147,702,2.848,703,2.848,704,2.848,705,4.147,706,3.536,707,3.536,708,3.133,709,2.428,710,2.428,711,2.152,712,1.945,713,2.848,714,1.945,715,3.133]],["title/components/LoginComponent.html",[144,0.687,232,1.154]],["body/components/LoginComponent.html",[0,0.094,3,0.164,4,0.164,5,0.145,7,0.362,11,0.184,12,0.367,15,0.145,16,0.023,17,0.542,18,0.268,19,0.268,20,0.39,22,0.994,27,0.164,35,0.012,36,0.035,60,1.497,61,1.344,63,0.946,70,1.422,74,1.926,77,0.598,78,0.694,79,0.598,82,1.589,84,1.346,110,1.198,114,0.532,124,0.891,127,1.411,131,2.105,132,0.891,144,0.896,145,0.891,146,1.497,147,1.064,148,1.064,149,1.064,150,1.064,154,0.944,155,2.732,156,2.573,157,1.589,159,1.589,165,1.549,169,4.278,172,1.064,174,1.691,193,1.064,204,2.913,213,2.41,214,2.246,215,2.065,216,1.206,217,2.246,219,1.064,220,1.589,221,1.589,222,2.111,223,1.064,224,1.131,225,0.841,226,1.131,227,0.841,228,0.944,229,1.131,230,0.841,231,1.131,232,1.67,233,1.131,234,0.841,235,1.002,236,1.691,237,0.841,238,0.795,239,1.131,240,0.841,241,1.131,242,0.841,243,1.131,244,0.841,245,1.131,246,1.131,247,1.131,271,1.382,306,2.913,308,4.356,387,1.289,388,1.289,391,1.382,398,1.488,403,1.206,404,1.802,405,1.488,406,3.026,407,3.426,408,3.426,409,3.426,410,1.289,411,3.162,412,1.488,413,2.743,414,2.562,415,2.743,416,2.954,417,2.306,418,1.802,419,2.065,420,2.41,421,2.562,422,1.613,423,1.613,424,1.802,425,1.613,426,2.2,427,2.2,428,2.2,429,1.488,430,1.488,431,1.488,432,1.488,433,1.613,434,1.613,435,1.488,436,2.224,437,1.382,438,1.289,439,1.382,440,1.382,441,1.488,444,2.065,445,1.613,483,2.872,486,3.342,488,3.064,507,1.926,514,3.153,515,3.318,517,2.913,520,1.949,526,3.426,527,3.426,528,3.498,529,2.913,530,2.913,531,2.886,534,2.913,535,2.913,536,2.913,537,2.913,545,3.498,550,1.949,552,1.949,556,1.949,578,2.2,586,3.869,587,2.913,588,2.913,590,1.762,595,1.762,596,1.488,597,2.224,598,1.488,599,1.488,600,1.382,601,1.488,602,3.153,603,1.949,604,1.949,605,2.065,606,2.633,607,1.949,608,1.762,609,1.949,610,1.949,611,1.949,612,1.949,613,1.949,614,1.949,615,1.949,616,2.224,617,2.633,618,1.762,619,2.913,620,1.762,621,1.488,622,1.488,623,1.762,716,2.2,717,4.616,718,3.855,719,4.616,720,2.58,721,2.913,722,2.58,723,2.58,724,2.58,725,2.58,726,2.58,727,3.855,728,2.58,729,2.2,730,2.58,731,2.58,732,2.58,733,2.58,734,2.58,735,2.58,736,2.58,737,2.58]],["title/guards/LoginGuard.html",[301,2.417,624,2.674]],["body/guards/LoginGuard.html",[0,0.175,3,0.304,4,0.304,5,0.269,11,0.34,15,0.269,16,0.022,20,0.34,27,0.304,35,0.018,36,0.054,44,2.421,45,1.854,56,2.15,63,1.442,77,1.107,78,0.718,79,1.107,84,1.172,85,3.406,110,1.39,114,0.984,117,2.385,121,2.558,122,2.385,127,2.15,165,1.241,189,2.232,191,2.558,193,1.969,301,4.011,307,5.147,333,1.969,625,3.608,628,4.072,629,5.657,630,5.423,631,5.657,635,3.388,636,5.007,637,5.423,638,4.072,639,2.985,640,3.262,738,4.072,739,4.776,740,4.072,741,4.776]],["title/classes/LoginUser.html",[0,0.129,507,1.768]],["body/classes/LoginUser.html",[0,0.232,2,1.003,3,0.219,4,0.219,5,0.194,7,0.484,10,1.462,11,0.245,12,0.452,15,0.267,16,0.023,17,1.012,18,0.492,19,0.492,20,0.338,27,0.372,28,0.798,29,0.895,30,1.123,32,1.123,33,1.595,34,1.258,35,0.014,36,0.043,78,0.816,165,1.721,458,2.922,479,2.37,480,2.153,481,2.966,482,3.241,483,2.37,484,2.966,485,2.153,486,3.43,487,3.132,488,3.21,489,3.658,490,3.658,492,4.106,493,4.19,495,3.132,498,3.241,501,2.153,502,2.352,503,2.737,504,2.352,505,2.37,506,2.153,507,2.922,742,3.444,743,3.444]],["title/components/MasterAnswerComponent.html",[144,0.687,234,1.154]],["body/components/MasterAnswerComponent.html",[0,0.128,3,0.222,4,0.222,5,0.196,11,0.249,12,0.456,13,2.254,15,0.347,16,0.022,17,0.768,18,0.611,19,0.611,20,0.454,22,1.364,27,0.222,33,0.908,35,0.014,36,0.044,37,1.654,51,2.254,61,1.017,63,1.176,70,1.076,77,0.809,78,0.822,79,0.809,84,0.857,110,1.286,114,0.72,124,1.206,131,1.753,144,1.142,145,1.206,146,1.86,147,1.44,148,1.44,149,1.44,150,1.44,154,1.278,155,2.881,156,2.713,157,1.975,159,1.975,165,0.908,172,1.44,193,1.44,219,1.44,220,1.975,221,1.975,222,2.426,223,1.44,224,1.531,225,1.139,226,1.531,227,1.139,228,1.278,229,1.531,230,1.139,231,1.531,232,1.139,233,1.531,234,1.919,235,2.579,236,2.1,237,1.139,238,1.076,239,1.531,240,1.139,241,1.531,242,1.139,243,1.531,244,1.139,245,1.531,246,1.531,247,1.531,286,4.454,332,1.632,333,1.975,364,2.928,368,3.151,371,2.977,386,2.014,388,1.744,391,1.87,410,2.393,473,2.385,635,3.154,663,2.638,677,2.977,678,2.183,744,5.561,745,2.638,746,4.662,747,4.084,748,5.467,749,4.662,750,4.019,751,3.492,752,2.977,753,3.492,754,3.492,755,3.492,756,2.977,757,3.492,758,3.492,759,2.183,760,2.385,761,3.492,762,2.385,763,3.492,764,2.977,765,4.79,766,3.492,767,3.492,768,4.79,769,3.492]],["title/classes/NewAnswer.html",[0,0.129,53,1.895]],["body/classes/NewAnswer.html",[0,0.212,2,1.143,3,0.25,4,0.25,5,0.221,7,0.552,10,1.788,11,0.28,12,0.494,15,0.395,16,0.023,17,0.987,18,0.64,19,0.708,20,0.44,26,3.628,27,0.369,28,0.91,29,1.021,30,1.281,31,1.525,32,1.281,33,1.021,34,0.91,35,0.016,36,0.047,37,2.509,38,2.682,39,4.315,40,4.215,44,2.545,45,2.396,47,3.858,48,4.663,50,2.276,51,2.393,53,3.108,54,2.991,55,2.266,770,3.927,771,3.927,772,3.927,773,3.927]],["title/classes/NewQuestion.html",[0,0.129,774,1.895]],["body/classes/NewQuestion.html",[0,0.218,2,1.209,3,0.264,4,0.264,5,0.234,7,0.583,10,1.837,11,0.296,12,0.512,13,2.808,15,0.396,16,0.023,17,0.995,18,0.619,19,0.655,20,0.425,27,0.379,28,0.963,29,1.08,30,1.355,31,1.613,32,1.355,33,1.08,34,0.963,35,0.016,36,0.049,37,2.06,50,2.523,51,2.459,55,2.396,131,1.52,403,1.941,774,2.88,775,2.837,776,4.154,777,4.073,778,4.154,779,3.728,780,4.154,781,4.506,782,4.506,783,2.396]],["title/classes/NewQuestionAnswer.html",[0,0.129,784,2.417]],["body/classes/NewQuestionAnswer.html",[0,0.172,2,1.372,3,0.3,4,0.3,5,0.265,7,0.662,10,1.452,11,0.336,12,0.555,13,2.798,15,0.371,16,0.023,17,0.971,18,0.685,19,0.685,20,0.47,27,0.3,35,0.018,36,0.053,37,2.344,39,3.952,44,2.402,50,2.464,189,2.723,777,3.979,779,3.641,784,3.979,785,4.018,786,4.018,787,4.713,788,4.713,789,4.713,790,4.713]],["title/classes/Question.html",[0,0.129,50,1.222]],["body/classes/Question.html",[0,0.214,2,1.163,3,0.254,4,0.254,5,0.225,7,0.561,10,1.803,11,0.285,12,0.5,13,2.782,15,0.399,16,0.023,17,0.996,18,0.67,19,0.687,20,0.46,27,0.372,28,1.215,29,1.363,30,1.909,31,2.036,32,1.909,33,1.363,34,1.215,35,0.016,36,0.048,37,2.021,50,2.519,51,2.413,55,2.305,403,1.868,774,2.14,775,2.729,777,3.997,779,3.659,781,4.422,782,4.422,783,2.305,791,3.996,792,3.996,793,3.996,794,3.996,795,3.996]],["title/injectables/QuestionService.html",[56,1.295,796,2.212]],["body/injectables/QuestionService.html",[0,0.109,3,0.191,4,0.191,5,0.168,7,0.421,11,0.213,12,0.41,15,0.366,16,0.023,17,0.851,18,0.522,19,0.311,20,0.455,22,1.067,27,0.191,28,1.274,29,1.117,35,0.013,36,0.039,50,2.5,56,1.574,58,1.727,60,1.669,61,1.252,62,3.145,63,1.055,70,1.55,71,1.871,72,3.437,74,2.148,75,3.359,76,2.48,77,1.405,78,0.912,79,1.405,82,1.773,84,1.658,85,3.65,88,2.48,89,2.937,90,2.937,99,1.885,102,3.248,103,2.688,104,2.688,107,2.688,108,2.688,109,2.688,110,1.325,111,1.871,112,3.437,113,1.727,114,0.617,115,1.871,116,2.045,117,1.495,119,1.604,120,1.871,121,1.604,122,1.495,123,3.345,124,1.034,127,2.219,128,2.262,130,3.145,131,1.841,132,1.738,133,2.688,134,1.885,135,3.64,354,3.666,448,1.313,676,2.045,759,3.994,774,3.345,779,2.688,783,2.902,796,2.688,797,2.553,798,4.299,799,4.299,800,4.299,801,4.299,802,5.498,803,4.299,804,2.994,805,4.299,806,2.994,807,4.299,808,2.994,809,4.299,810,2.994,811,4.299,812,4.299,813,2.994,814,4.299,815,2.994,816,4.299,817,2.994,818,2.994,819,3.666,820,4.299,821,2.994,822,2.262,823,5.498,824,4.299,825,2.553,826,2.994,827,2.994,828,2.994,829,2.994,830,2.994,831,2.994,832,2.994,833,2.994,834,2.994,835,2.994]],["title/classes/Quiz.html",[0,0.129,22,0.687]],["body/classes/Quiz.html",[0,0.163,2,0.914,3,0.2,4,0.2,5,0.177,7,0.909,10,1.37,11,0.224,12,0.424,15,0.397,16,0.023,17,0.988,18,0.7,19,0.7,20,0.481,22,1.408,27,0.283,28,1.031,29,1.156,30,1.685,31,1.727,32,1.685,33,1.754,34,1.499,35,0.013,36,0.041,44,2.129,45,2.005,51,2.129,78,0.952,89,3.528,448,2.777,453,1.811,454,2.372,455,4.784,456,4.244,457,4.784,458,2.806,459,3.837,461,3.902,464,4.404,469,3.902,470,3.902,471,3.902,473,3.528,474,4.404,476,4.404,477,4.404,478,4.404,836,3.139,837,3.139,838,3.139,839,3.139,840,3.139,841,3.139,842,3.139,843,3.139,844,3.139,845,3.139,846,3.139]],["title/components/QuizAnswerComponent.html",[144,0.687,237,1.154]],["body/components/QuizAnswerComponent.html",[0,0.084,3,0.146,4,0.146,5,0.129,7,0.322,11,0.163,12,0.336,15,0.359,16,0.023,18,0.5,19,0.54,20,0.474,22,1.291,27,0.146,33,0.595,34,0.994,35,0.011,36,0.032,37,2.092,44,1.452,45,0.889,50,1.796,51,1.452,57,3.576,60,1.367,61,1.249,63,0.864,70,0.705,77,0.531,78,0.645,79,0.531,84,1.183,90,3.552,110,1.251,114,0.472,118,1.73,124,0.791,131,1.289,144,1.009,145,0.791,146,1.367,147,0.944,148,0.944,149,0.944,150,0.944,154,0.838,155,2.666,156,2.51,157,1.452,159,1.452,172,1.986,174,2.113,189,1.646,193,0.944,211,2.66,214,2.281,215,1.226,217,1.544,219,0.944,220,1.452,221,1.452,222,2.144,223,0.944,224,1.004,225,0.747,226,1.004,227,0.747,228,0.838,229,1.004,230,0.747,231,1.004,232,0.747,233,1.004,234,0.747,235,0.889,236,1.544,237,1.571,238,0.705,239,1.004,240,0.747,241,1.004,242,0.747,243,1.004,244,0.747,245,1.004,246,1.004,247,1.004,261,1.73,271,1.226,279,4.58,333,1.452,364,2.298,368,2.58,388,2.598,403,1.07,404,1.646,406,2.006,413,2.298,414,2.006,418,1.07,419,2.58,421,1.646,424,1.07,425,1.431,437,1.226,438,1.143,439,1.226,440,1.886,443,1.73,459,3.751,461,2.66,473,3.29,526,2.682,527,2.201,531,1.431,592,1.73,593,1.73,594,1.73,605,1.886,616,1.321,635,2.476,678,2.201,712,1.564,714,3.29,745,1.73,746,3.659,747,3.002,750,3.29,752,1.952,756,1.952,759,2.682,760,1.564,762,1.564,796,3.433,822,1.73,847,4.192,848,3.659,849,4.291,850,4.291,851,4.291,852,4.291,853,4.291,854,5.201,855,3.659,856,5.201,857,4.818,858,4.108,859,4.818,860,3.521,861,5.201,862,2.289,863,3.521,864,3.521,865,2.289,866,2.66,867,2.289,868,2.289,869,3.002,870,2.66,871,3.521,872,2.289,873,4.291,874,2.289,875,2.289,876,2.289,877,2.289,878,2.289,879,2.289,880,2.289,881,2.289,882,3.521,883,2.66,884,2.289,885,1.952,886,1.952,887,1.952,888,2.289,889,2.289,890,2.289,891,3.521,892,2.289,893,2.289,894,2.289,895,2.289,896,2.289,897,2.289,898,2.289,899,2.289,900,2.289,901,4.291,902,3.521,903,2.289,904,2.289,905,2.289,906,1.952,907,3.521,908,4.291,909,2.289,910,2.289,911,2.289,912,2.289,913,2.289,914,2.289,915,2.289,916,2.289,917,2.289,918,3.521,919,3.521,920,3.002,921,3.521,922,3.659,923,1.952,924,2.289,925,2.289,926,3.242,927,3.521,928,2.289,929,2.289,930,2.289,931,2.289,932,2.289,933,1.73,934,2.289,935,1.73,936,1.73,937,1.73]],["title/components/QuizCreateComponent.html",[144,0.687,238,1.09]],["body/components/QuizCreateComponent.html",[0,0.082,3,0.084,4,0.084,5,0.074,7,0.413,8,3.065,11,0.16,12,0.214,13,0.543,15,0.299,16,0.022,18,0.535,19,0.495,20,0.405,22,1.37,27,0.084,34,1.231,35,0.007,37,1.997,39,2.652,44,0.927,45,1.141,50,2.125,51,1.606,53,1.204,57,2.831,61,0.384,63,0.552,70,0.406,77,0.521,78,0.586,79,0.521,82,1.967,84,0.956,88,1.297,90,3.522,99,1.86,110,1.192,114,0.272,118,0.996,124,0.455,131,2.407,132,1.719,144,0.57,146,0.512,147,0.543,148,1.606,149,0.543,150,0.543,154,0.482,155,0.927,156,0.873,157,0.927,159,0.927,163,0.996,165,1.381,172,1.606,174,0.578,189,1.623,191,0.706,196,1.916,211,1.698,213,0.824,214,2.33,215,2.666,216,1.983,217,2.492,219,0.543,220,0.927,221,0.927,222,0.543,223,0.543,228,0.823,238,0.693,271,0.706,287,3.948,309,1.698,327,1.535,332,1.051,333,0.927,351,2.22,364,1.574,368,1.86,371,1.983,386,0.76,387,0.658,388,2.383,391,1.574,398,1.695,399,2.505,404,2.41,405,0.76,406,2.781,411,2.613,413,2.426,414,1.051,415,1.204,416,1.297,417,1.734,418,1.623,419,2.272,421,2.548,424,1.051,429,0.76,430,1.297,431,1.297,432,1.297,435,2.447,436,1.297,437,1.204,438,1.468,439,1.204,440,2.426,441,2.447,442,1.916,443,0.996,444,1.86,445,1.837,446,1.124,447,1.124,448,1.86,453,2.975,455,0.996,456,0.996,457,0.996,458,0.658,459,2.007,471,1.698,483,1.123,484,1.405,503,2.003,514,1.535,526,2.436,527,3.614,528,4.009,531,0.824,540,0.996,590,0.9,595,2.661,596,0.76,597,1.297,598,0.76,599,0.76,600,1.574,601,0.76,605,2.92,606,2.371,616,2.248,617,1.535,618,0.9,620,2.007,621,2.447,622,0.76,623,0.9,643,1.916,663,0.996,676,0.9,678,2.17,680,1.124,694,1.698,696,0.996,697,1.535,708,1.698,711,3.422,712,1.535,714,3.093,715,0.996,749,1.916,759,3.321,764,1.124,774,1.204,784,3.093,786,1.124,796,2.831,822,0.996,825,2.96,847,3.614,883,2.22,885,1.124,886,1.124,920,1.916,922,1.124,923,1.124,926,2.944,933,3.422,935,2.623,936,0.996,937,0.996,938,1.124,939,2.938,940,2.248,941,2.505,942,2.938,943,2.938,944,2.938,945,3.472,946,2.938,947,2.248,948,1.318,949,1.318,950,1.318,951,1.318,952,1.318,953,2.248,954,1.318,955,1.318,956,2.248,957,2.248,958,2.248,959,2.248,960,1.318,961,2.248,962,2.248,963,1.318,964,1.318,965,1.318,966,1.318,967,1.318,968,1.318,969,1.318,970,1.318,971,2.505,972,1.318,973,1.318,974,1.318,975,2.248,976,1.916,977,1.318,978,1.318,979,2.505,980,2.248,981,1.318,982,2.248,983,1.318,984,2.248,985,1.318,986,2.248,987,1.318,988,2.248,989,1.318,990,1.318,991,1.318,992,1.318,993,1.916,994,1.916,995,1.318,996,1.318,997,2.248,998,2.248,999,1.318,1000,2.248,1001,1.318,1002,1.318,1003,1.318,1004,1.318,1005,1.318,1006,1.318,1007,1.318,1008,1.318,1009,1.318,1010,1.318,1011,1.318,1012,1.318,1013,1.318,1014,1.318,1015,1.124,1016,1.318,1017,1.318,1018,1.318,1019,1.318,1020,1.318,1021,1.318,1022,1.318,1023,1.318,1024,1.318,1025,2.248,1026,2.248,1027,4.771,1028,5.157,1029,5.869,1030,2.248,1031,2.248,1032,2.248,1033,2.248,1034,2.248,1035,3.472,1036,2.248,1037,2.248,1038,2.248,1039,2.248,1040,2.248,1041,2.248,1042,2.248,1043,2.248,1044,2.248,1045,2.248,1046,2.248,1047,2.248,1048,2.248,1049,2.248,1050,2.248,1051,2.248,1052,2.248,1053,2.248,1054,2.248,1055,2.248,1056,2.248,1057,2.248,1058,2.248,1059,2.248,1060,2.248,1061,2.248,1062,2.248,1063,2.248,1064,2.248,1065,3.472,1066,2.248,1067,2.248,1068,5.451,1069,2.248,1070,2.248,1071,2.248,1072,2.248,1073,2.248,1074,2.248,1075,2.248,1076,2.248,1077,2.248,1078,2.248,1079,4.242,1080,2.248,1081,2.248,1082,3.472,1083,4.242,1084,2.248,1085,6.263,1086,2.248,1087,2.248,1088,2.248,1089,2.248,1090,2.248,1091,3.472,1092,2.248,1093,2.248,1094,3.472,1095,2.248,1096,2.248,1097,2.248,1098,4.771,1099,2.248,1100,2.248,1101,2.248,1102,1.916,1103,4.242,1104,2.248,1105,2.248,1106,2.248,1107,2.248,1108,2.248,1109,2.248,1110,2.248,1111,2.248,1112,2.248,1113,2.96,1114,2.938,1115,2.248,1116,2.248,1117,2.248,1118,1.318,1119,1.318,1120,2.248,1121,2.248,1122,1.318,1123,1.318,1124,1.318,1125,2.938,1126,2.505,1127,1.318,1128,1.124,1129,1.318,1130,1.318,1131,1.318,1132,1.318,1133,1.318,1134,1.318,1135,1.318,1136,0.996,1137,1.318,1138,1.318,1139,1.318,1140,1.318,1141,1.318,1142,2.248,1143,2.248,1144,1.916,1145,1.124,1146,1.124,1147,2.248,1148,2.248,1149,1.318,1150,1.318,1151,1.318,1152,2.248,1153,3.472,1154,1.318,1155,2.248,1156,1.318,1157,1.318,1158,1.318,1159,1.318,1160,4.242,1161,1.318,1162,2.938,1163,1.318,1164,1.318,1165,1.318]],["title/components/QuizInfoComponent.html",[144,0.687,240,1.154]],["body/components/QuizInfoComponent.html",[0,0.092,3,0.29,4,0.161,5,0.142,7,0.831,11,0.18,12,0.361,15,0.357,16,0.022,18,0.262,19,0.262,20,0.465,22,1.314,27,0.161,28,1.056,33,0.656,34,0.879,35,0.011,36,0.035,61,0.735,63,0.931,70,0.777,77,0.585,78,0.954,79,0.585,84,0.931,97,2.151,110,1.107,114,0.52,124,0.871,132,1.31,144,0.983,145,0.871,146,1.472,147,1.04,148,1.04,149,1.04,150,1.04,154,0.924,155,2.72,156,2.562,157,1.563,159,1.563,163,1.906,172,1.563,193,1.04,214,1.106,215,1.351,216,1.772,217,2.594,219,1.04,220,1.563,221,1.563,222,2.088,223,1.04,224,1.106,225,0.823,226,1.106,227,0.823,228,0.924,229,1.106,230,0.823,231,1.106,232,0.823,233,1.106,234,0.823,235,0.98,236,1.663,237,0.823,238,0.777,239,1.106,240,1.652,241,1.106,242,0.823,243,1.106,244,0.823,245,1.106,246,1.106,247,1.106,282,4.507,318,2.151,327,3.895,332,1.179,333,1.563,364,2.44,368,2.713,371,2.765,386,1.456,388,2.53,398,1.456,404,1.179,405,1.456,406,3.05,407,3.394,408,3.394,409,3.394,410,1.26,411,3.132,412,1.456,413,2.031,414,1.772,415,2.908,416,2.922,417,1.894,418,1.772,419,2.908,420,2.37,421,2.845,422,1.577,423,1.577,424,1.772,429,2.187,430,1.456,431,1.456,432,1.456,433,1.577,434,1.577,435,1.456,436,2.187,437,1.351,438,2.275,439,1.351,440,2.44,441,2.628,448,2.594,469,2.865,470,2.865,524,2.151,605,2.031,608,1.723,616,1.456,621,2.187,622,2.187,635,2.187,697,1.723,698,2.151,712,1.723,714,1.723,715,1.906,750,3.459,760,1.723,762,1.723,847,4.125,848,3.883,855,3.883,858,4.318,887,2.151,906,2.151,926,4.309,933,2.865,935,1.906,936,1.906,937,1.906,1015,2.151,1128,2.151,1136,2.865,1144,3.233,1145,3.883,1146,2.151,1166,2.151,1167,4.555,1168,3.792,1169,5.429,1170,5.916,1171,4.555,1172,5.429,1173,2.151,1174,3.792,1175,2.523,1176,2.523,1177,2.523,1178,2.523,1179,2.523,1180,2.523,1181,2.523,1182,2.523,1183,2.523,1184,2.523,1185,2.523,1186,2.523,1187,2.523,1188,2.523,1189,2.151,1190,2.523,1191,2.523,1192,2.523,1193,2.523,1194,2.523,1195,2.523,1196,2.523,1197,2.523,1198,2.523,1199,2.523,1200,2.523,1201,2.523,1202,2.523,1203,2.523,1204,2.523,1205,3.792,1206,3.792,1207,2.523,1208,2.523,1209,2.523,1210,2.523,1211,2.523,1212,2.523,1213,2.523,1214,4.555,1215,4.555,1216,2.523,1217,2.523,1218,2.523,1219,2.523,1220,2.523,1221,2.523,1222,2.523,1223,2.523,1224,2.523,1225,2.523,1226,3.792,1227,2.523]],["title/components/QuizSearchComponent.html",[144,0.687,242,1.154]],["body/components/QuizSearchComponent.html",[0,0.116,1,2.397,3,0.202,4,0.202,5,0.178,8,1.827,9,2.426,11,0.226,12,0.426,13,1.306,14,1.696,15,0.317,16,0.023,17,0.445,18,0.539,19,0.539,20,0.44,22,1.372,27,0.202,28,1.203,35,0.014,36,0.041,61,0.922,63,1.099,70,0.976,77,1.037,78,0.848,79,1.037,84,1.099,99,2.276,110,1.388,114,0.653,124,1.094,132,1.094,144,1.007,145,1.094,146,1.737,147,1.306,148,1.306,149,1.306,150,1.306,154,1.159,155,2.836,156,2.671,157,1.845,159,1.845,165,1.546,166,3.381,172,2.14,191,2.397,193,1.306,205,3.381,214,2.276,216,1.48,217,1.389,219,1.306,220,1.845,221,1.845,222,2.325,223,1.306,224,1.389,225,1.033,226,1.389,227,1.033,228,1.159,229,1.389,230,1.033,231,1.389,232,1.033,233,1.389,234,1.033,235,1.229,236,1.962,237,1.033,238,0.976,239,1.389,240,1.033,241,1.389,242,1.839,243,1.389,244,1.033,245,1.389,246,1.389,247,1.389,289,4.336,332,1.48,333,1.845,341,3.662,357,2.163,364,2.78,368,3.021,371,2.967,385,2.393,386,1.827,387,1.582,388,2.235,391,1.696,402,3.381,404,1.48,406,1.48,410,2.235,414,1.48,417,1.582,418,1.48,421,1.48,444,1.696,513,3.381,541,2.163,596,1.827,597,2.582,598,1.827,599,1.827,600,1.696,601,1.827,635,2.582,639,1.98,640,2.163,661,3.815,666,3.815,683,2.7,686,2.7,687,2.7,688,2.7,689,2.7,690,2.7,691,2.7,692,2.7,693,3.815,694,2.393,695,2.7,696,2.393,706,3.815,707,3.815,708,3.381,709,2.7,710,2.7,711,2.393,750,3.852,760,2.163,762,2.163,847,3.968,1173,2.7,1189,2.7,1228,2.7,1229,5.19,1230,4.475,1231,3.167,1232,3.167,1233,3.167,1234,3.167,1235,3.167,1236,3.167,1237,3.167,1238,3.167]],["title/injectables/QuizService.html",[56,1.295,371,1.654]],["body/injectables/QuizService.html",[0,0.103,3,0.179,4,0.179,5,0.159,7,0.396,11,0.201,12,0.392,13,1.697,15,0.366,16,0.023,17,0.968,18,0.293,19,0.293,20,0.464,22,1.389,27,0.179,28,1.562,29,1.39,35,0.012,36,0.038,56,1.507,58,1.627,60,1.598,61,1.199,62,3.04,63,1.011,70,1.498,71,1.763,72,3.342,74,2.056,75,3.281,76,2.375,77,1.421,78,0.922,79,1.421,84,1.701,85,3.712,88,2.375,99,1.805,103,2.573,104,3.342,107,2.573,108,2.573,109,2.573,110,1.298,111,1.763,112,3.04,113,1.627,114,0.581,115,1.763,116,1.926,117,1.408,119,1.51,120,1.763,121,1.51,122,1.408,123,3.284,124,0.974,127,2.301,128,2.13,130,2.573,131,1.957,132,1.422,133,2.573,134,1.805,135,3.929,332,1.318,351,3.11,371,1.924,403,2.499,448,2.689,453,3.281,676,1.926,819,3.51,941,3.51,976,3.51,994,3.51,1239,2.404,1240,4.117,1241,4.117,1242,4.117,1243,4.117,1244,5.347,1245,5.347,1246,4.117,1247,4.117,1248,2.82,1249,4.117,1250,2.82,1251,4.117,1252,2.82,1253,4.117,1254,2.82,1255,4.117,1256,4.117,1257,4.117,1258,2.82,1259,2.82,1260,3.11,1261,2.82,1262,4.117,1263,2.82,1264,4.117,1265,2.82,1266,4.117,1267,4.117,1268,2.82,1269,4.117,1270,2.82,1271,2.82,1272,2.82,1273,2.82,1274,2.82,1275,2.82,1276,2.82,1277,2.82,1278,2.82,1279,4.117,1280,2.82,1281,2.82,1282,2.82,1283,2.82]],["title/components/RegistrationComponent.html",[144,0.687,244,1.154]],["body/components/RegistrationComponent.html",[0,0.072,3,0.126,4,0.126,5,0.111,7,0.278,11,0.141,12,0.3,15,0.22,16,0.023,18,0.406,19,0.205,20,0.431,22,1.003,27,0.126,34,0.728,35,0.009,36,0.029,45,0.769,47,1.238,61,0.576,63,0.772,70,0.61,74,1.57,75,1.142,77,0.459,78,0.73,79,0.459,82,1.296,83,1.688,84,1.535,109,1.238,110,1.13,114,0.408,123,1.684,127,1.892,131,2.369,132,1.086,144,1.051,145,0.684,146,1.22,147,0.816,148,0.816,149,0.816,150,0.816,154,0.725,155,2.578,156,2.428,157,1.296,159,1.296,165,1.408,169,4.271,172,0.816,174,1.379,184,2.68,189,0.925,193,0.816,204,2.375,213,1.965,214,1.952,215,1.684,216,1.469,217,2.465,219,0.816,220,1.296,221,1.296,222,1.835,223,0.816,224,0.868,225,0.646,226,0.868,227,0.646,228,0.725,229,0.868,230,0.646,231,0.868,232,0.646,233,0.868,234,0.646,235,0.769,236,1.379,237,0.646,238,0.61,239,0.868,240,0.646,241,0.868,242,0.646,243,0.868,244,1.452,245,2.129,246,0.868,247,0.868,271,1.06,306,3.669,308,2.147,387,0.989,391,1.06,398,1.142,404,1.827,405,1.813,406,3.077,407,3.035,408,3.035,409,3.035,410,1.953,411,2.801,412,1.142,413,2.384,414,2.27,415,2.384,416,2.568,417,1.953,418,1.469,419,2.094,420,1.965,421,2.416,422,1.238,423,1.238,424,2.416,425,1.965,429,1.813,430,1.813,431,1.813,432,1.813,433,1.965,434,1.965,435,1.813,436,2.568,437,1.684,438,1.57,439,1.684,440,1.684,441,1.813,445,1.238,458,0.989,479,1.57,481,1.238,483,3.164,486,3.164,487,1.142,488,2.961,489,3.423,490,3.423,495,2.255,514,3.839,515,3.493,517,2.375,518,4.619,519,4.619,520,1.496,526,3.035,527,3.909,528,4.208,529,2.375,530,2.375,531,3.035,532,2.67,534,2.375,535,2.375,536,2.375,537,2.375,543,1.688,545,4.208,546,1.688,548,1.688,550,1.496,552,1.496,554,1.688,556,1.496,557,1.688,558,1.688,568,1.688,569,1.688,570,1.688,571,1.688,572,1.688,576,1.496,586,4.655,587,2.375,588,2.375,589,2.68,590,1.352,591,2.68,592,1.496,593,1.496,594,1.496,595,1.352,596,1.142,597,1.813,598,1.142,599,1.142,600,1.06,601,1.142,602,2.67,603,1.496,604,1.496,605,1.684,606,2.147,607,1.496,608,1.352,609,1.496,610,1.496,611,1.496,612,1.496,613,1.496,614,1.496,615,1.496,616,2.255,617,2.147,618,1.352,619,2.375,620,1.352,621,1.142,622,1.142,623,1.352,721,2.375,740,3.333,866,1.496,1126,1.688,1136,1.496,1284,1.688,1285,3.909,1286,3.143,1287,3.909,1288,4.452,1289,1.98,1290,3.143,1291,1.98,1292,1.98,1293,3.143,1294,1.98,1295,1.98,1296,1.98,1297,1.98,1298,1.98,1299,1.98,1300,1.98,1301,3.143,1302,1.98,1303,1.98,1304,1.98,1305,1.98,1306,1.98,1307,1.98,1308,1.98,1309,1.98,1310,1.98,1311,1.98,1312,1.98,1313,1.98,1314,1.98,1315,1.98,1316,1.98,1317,1.98,1318,1.98,1319,1.98,1320,2.68,1321,3.143,1322,3.143,1323,1.98,1324,1.98,1325,1.98,1326,1.98,1327,1.98,1328,1.98,1329,1.98]],["title/classes/UpdateAnswer.html",[0,0.129,54,2.042]],["body/classes/UpdateAnswer.html",[0,0.217,2,1.192,3,0.26,4,0.26,5,0.23,7,0.575,10,1.824,11,0.292,12,0.508,15,0.375,16,0.023,17,0.977,18,0.553,19,0.692,20,0.379,26,3.33,27,0.377,28,0.948,29,1.064,30,1.335,31,1.589,32,1.335,33,1.064,34,0.948,35,0.016,36,0.049,37,2.513,38,2.796,39,4.349,40,3.638,44,2.586,45,2.435,47,3.92,48,4.738,50,2.166,51,2.196,53,2.192,54,3.618,55,3.073,1330,4.093,1331,4.093]],["title/classes/UpdateQuestion.html",[0,0.129,783,2.042]],["body/classes/UpdateQuestion.html",[0,0.223,2,1.272,3,0.278,4,0.278,5,0.246,7,0.614,10,1.882,11,0.311,12,0.529,13,2.65,15,0.373,16,0.023,17,0.989,18,0.453,19,0.634,20,0.311,27,0.389,28,1.013,29,1.136,30,1.425,31,1.696,32,1.425,33,1.136,34,1.013,35,0.017,36,0.051,37,1.919,50,2.523,51,2.29,55,3.205,403,2.597,774,2.341,775,2.985,777,3.795,779,3.473,781,4.197,782,4.197,783,3.205,1332,4.37]],["title/classes/User.html",[0,0.129,165,0.92]],["body/classes/User.html",[0,0.229,2,0.884,3,0.193,4,0.193,5,0.171,7,0.427,10,0.936,11,0.216,12,0.414,15,0.367,16,0.023,17,1.012,18,0.678,19,0.678,20,0.465,27,0.352,28,1.007,29,1.318,30,1.654,32,1.654,33,1.667,34,1.357,35,0.013,36,0.04,78,0.832,165,1.76,458,3.133,479,2.17,480,1.899,481,2.715,482,2.967,483,2.17,484,2.715,485,1.899,486,3.349,487,3.378,488,3.134,489,3.767,490,3.767,492,4.09,493,3.999,495,3.193,498,3.464,501,2.715,502,2.967,503,3.378,504,2.967,505,2.17,506,1.899,507,2.17,576,2.295,1333,3.037,1334,3.037,1335,3.037,1336,3.037,1337,3.037,1338,3.037,1339,3.037,1340,3.037,1341,3.037,1342,3.037]],["title/injectables/UserService.html",[56,1.295,515,2.042]],["body/injectables/UserService.html",[0,0.116,3,0.33,4,0.201,5,0.178,7,0.444,11,0.225,12,0.426,14,3.019,15,0.376,16,0.023,17,0.891,18,0.464,19,0.585,20,0.452,27,0.201,35,0.014,36,0.041,45,1.736,56,1.636,58,1.825,60,1.736,61,1.302,62,3.242,63,1.098,70,1.598,71,1.977,72,3.524,74,2.233,75,3.431,76,2.579,77,1.378,78,0.894,79,1.378,82,1.843,84,1.591,85,3.531,103,2.795,104,2.795,107,2.795,108,2.795,110,1.3,111,1.977,112,3.524,113,1.825,114,0.652,115,1.977,117,1.58,119,1.694,120,1.977,121,1.694,122,1.58,123,3.399,124,1.092,127,2.063,130,3.242,131,2.413,132,1.791,133,3.242,134,2.274,135,3.524,165,1.876,189,2.09,212,3.812,308,3.054,387,1.58,403,2.09,479,2.816,486,2.97,488,1.478,505,2.816,507,2.816,515,2.579,523,3.812,729,2.697,866,3.378,883,3.378,971,3.812,1343,2.697,1344,4.471,1345,4.471,1346,4.471,1347,3.163,1348,4.471,1349,3.163,1350,4.471,1351,4.471,1352,3.163,1353,4.806,1354,4.471,1355,3.163,1356,4.471,1357,3.163,1358,4.471,1359,3.163,1360,4.471,1361,4.471,1362,3.163,1363,3.163,1364,3.163,1365,3.163,1366,5.186,1367,3.163,1368,3.163,1369,3.163,1370,3.163]],["title/coverage.html",[1371,3.652]],["body/coverage.html",[0,0.261,1,1.966,5,0.206,6,3.743,9,1.715,15,0.206,16,0.022,22,0.712,34,1.578,35,0.015,36,0.045,37,1.267,38,3.831,50,1.267,53,1.966,54,2.117,56,2.296,57,2.294,59,3.129,119,1.966,131,1.343,134,2.173,144,1.348,145,1.267,151,3.129,165,0.954,174,1.609,225,1.197,227,1.197,230,1.197,232,1.197,234,1.197,237,1.197,238,1.131,240,1.197,242,1.197,244,1.197,256,2.294,257,2.294,276,2.506,279,2.506,282,2.506,286,2.506,287,2.506,289,2.506,298,2.506,301,2.506,324,3.129,325,3.129,341,2.117,342,3.129,363,3.129,371,1.715,448,1.609,449,3.129,453,2.117,454,3.743,479,1.833,480,3.755,505,1.833,507,1.833,508,3.129,509,3.129,515,2.117,532,2.506,540,2.773,622,4.193,624,3.743,626,3.129,627,3.129,651,3.129,655,3.129,716,3.129,738,3.129,744,3.129,745,3.743,774,1.966,775,3.831,783,2.117,784,2.506,785,3.129,796,2.294,797,3.129,847,3.755,938,3.129,1166,3.129,1228,3.129,1239,3.129,1284,3.129,1343,3.129,1371,2.773,1372,3.129,1373,3.67,1374,3.67,1375,3.67,1376,3.67,1377,3.67,1378,3.67,1379,3.67,1380,4.955,1381,3.67,1382,3.67,1383,5.609,1384,4.955,1385,4.955,1386,4.955,1387,5.609,1388,3.67,1389,3.67,1390,5.609,1391,4.955,1392,3.67,1393,4.955,1394,3.67,1395,3.67,1396,3.67,1397,3.67,1398,3.67,1399,3.67,1400,4.955,1401,3.67,1402,3.67,1403,3.67,1404,3.67,1405,3.129,1406,4.955,1407,3.129,1408,3.67,1409,3.67]],["title/dependencies.html",[251,2.908,1410,2.518]],["body/dependencies.html",[16,0.022,35,0.019,36,0.057,114,1.085,117,2.63,193,2.17,251,3.596,268,5.31,269,4.706,271,2.82,1411,5.265,1412,7.22,1413,5.265,1414,5.265,1415,5.265,1416,5.265,1417,5.265,1418,5.265,1419,5.265,1420,5.265,1421,5.265,1422,5.265,1423,5.265,1424,5.265]],["title/miscellaneous/functions.html",[870,3.217,1425,2.017]],["body/miscellaneous/functions.html",[11,0.391,15,0.309,16,0.02,35,0.019,36,0.059,77,1.273,78,0.826,79,1.273,111,3.992,119,3.616,174,2.409,573,4.684,574,4.684,870,4.151,979,4.684,1405,4.684,1425,3.753,1426,5.494,1427,5.494,1428,5.494,1429,5.494,1430,5.494]],["title/index.html",[11,0.21,1431,2.953,1432,2.953]],["body/index.html",[16,0.019,22,1.254,35,0.019,36,0.056,37,1.531,50,1.531,60,1.72,76,2.556,82,2.311,99,2.458,187,3.778,319,3.778,424,2.071,485,2.77,492,3.547,501,2.77,503,2.556,506,2.77,602,3.027,678,2.77,697,3.027,721,3.348,759,3.504,869,5.894,1102,3.778,1113,3.778,1260,3.348,1320,5.508,1353,3.778,1371,3.348,1372,5.508,1433,4.431,1434,5.605,1435,5.605,1436,4.431,1437,4.431,1438,6.148,1439,4.431,1440,4.431,1441,4.431,1442,4.431,1443,4.431,1444,4.431,1445,4.431,1446,4.431,1447,4.431,1448,4.431,1449,4.431,1450,4.431,1451,4.431,1452,4.431,1453,4.431,1454,4.431,1455,4.431,1456,4.431,1457,4.431,1458,6.664,1459,5.605,1460,4.431,1461,4.431,1462,4.431,1463,4.431,1464,4.431,1465,5.605,1466,5.605,1467,4.431,1468,6.148,1469,5.605,1470,6.148,1471,4.431,1472,4.431,1473,4.431,1474,4.431,1475,4.431,1476,4.431,1477,5.605,1478,4.431,1479,4.431,1480,4.431,1481,4.431,1482,4.431,1483,4.431,1484,4.431,1485,4.431,1486,4.431,1487,4.431,1488,4.431,1489,4.431,1490,4.431,1491,4.431,1492,4.431,1493,4.431,1494,4.431,1495,4.431,1496,4.431,1497,4.431]],["title/modules.html",[250,3.022]],["body/modules.html",[16,0.02,35,0.02,36,0.059,249,3.862,250,3.535,258,3.535,269,4.272,1260,4.272,1498,5.654,1499,5.654,1500,6.493,1501,5.654]],["title/overview.html",[1502,4.122]],["body/overview.html",[2,1.327,16,0.022,35,0.017,36,0.052,58,2.63,145,2.403,146,1.77,225,2.032,227,2.032,230,2.032,232,2.032,234,2.032,237,2.032,238,1.919,240,2.032,242,2.032,244,2.032,249,5.097,250,2.85,251,3.898,252,3.888,253,3.888,254,3.888,255,3.888,256,3.894,257,3.894,258,3.894,259,4.865,260,3.888,261,3.445,297,3.114,323,3.445,412,3.292,415,2.442,444,3.336,625,3.445,1502,3.888,1503,4.56]],["title/properties.html",[12,0.406,1410,2.518]],["body/properties.html",[12,0.546,16,0.021,31,2.225,35,0.02,36,0.06,1504,5.732]],["title/routes.html",[297,3.302]],["body/routes.html",[16,0.02,35,0.02,36,0.06,297,3.942]],["title/miscellaneous/variables.html",[1425,2.017,1505,3.63]],["body/miscellaneous/variables.html",[11,0.369,15,0.291,16,0.022,18,0.537,19,0.537,35,0.019,36,0.056,127,1.895,174,2.271,189,2.42,305,4.66,488,2.883,532,4.499,545,3.537,639,3.855,993,4.415,1407,4.415,1425,3.537,1505,4.415,1506,5.178,1507,5.178,1508,5.178,1509,5.178,1510,6.168,1511,5.178,1512,6.168,1513,5.178,1514,5.178,1515,5.178,1516,5.178,1517,5.178,1518,5.178]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":34,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1504,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["0.9.4",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1218,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["1",{"_index":398,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["1.1.19",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1141,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1/1",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":410,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["10/10",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":622,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":906,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["10000",{"_index":1219,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["1001682.jpg",{"_index":428,"title":{},"body":{"components/BookmarksComponent.html":{},"components/LoginComponent.html":{}}}],["100vh",{"_index":439,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["1020",{"_index":1049,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1080",{"_index":1050,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["10px",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["11",{"_index":412,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["1140",{"_index":1051,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["12/12",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1034,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1200",{"_index":1052,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1260",{"_index":1053,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1320",{"_index":1054,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1380",{"_index":1055,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1440",{"_index":1056,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["15",{"_index":598,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["15.2.0",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":1057,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1560",{"_index":1058,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["15px",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1503,"title":{},"body":{"overview.html":{}}}],["1620",{"_index":1059,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1680",{"_index":1060,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["16px",{"_index":929,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["1740",{"_index":1061,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["180",{"_index":1035,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1px",{"_index":1142,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["1rem",{"_index":617,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["2",{"_index":444,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1139,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["2/2",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1217,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["20px",{"_index":933,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["240",{"_index":1036,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["242325",{"_index":422,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["24px",{"_index":927,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["255",{"_index":597,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["28fcb.web.app",{"_index":1491,"title":{},"body":{"index.html":{}}}],["2s",{"_index":1215,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["3",{"_index":1086,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["3.2",{"_index":1213,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["3/3",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":864,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["300",{"_index":1037,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["30px",{"_index":1157,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["333",{"_index":1162,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["360",{"_index":1038,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["3c887e",{"_index":409,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["4",{"_index":1087,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["4/4",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1128,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["41",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["420",{"_index":1039,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["42a948",{"_index":607,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["480",{"_index":1040,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["48px",{"_index":1216,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["4caf50",{"_index":934,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["5",{"_index":415,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["5/5",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1153,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["50px",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["5129486.jpg",{"_index":1329,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["5220092.jpg",{"_index":1326,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["540",{"_index":1041,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["55",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":619,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6",{"_index":416,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["6/6",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":471,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["600",{"_index":1042,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["66",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["660",{"_index":1043,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["666",{"_index":1156,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["6em",{"_index":420,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["7",{"_index":1088,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["7.8.0",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["7/17",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["7069762.jpg",{"_index":1121,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["720",{"_index":1044,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["780",{"_index":1045,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["8",{"_index":1089,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["80",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["820000",{"_index":615,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["83",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["840",{"_index":1046,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["87",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1090,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["9/9",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1047,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["960",{"_index":1048,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["__v",{"_index":32,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["_id",{"_index":30,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["a94442",{"_index":610,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["a::after",{"_index":1164,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ability",{"_index":1109,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["absolute",{"_index":1152,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["abstractcontrol",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":1065,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["access",{"_index":642,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["accessors",{"_index":517,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["account",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["activate",{"_index":633,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["activatedroute",{"_index":750,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["activatedroutesnapshot",{"_index":629,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["active",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/QuizCreateComponent.html":{}}}],["actual_component",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["add",{"_index":8,"title":{},"body":{"classes/AddBookmark.html":{},"modules/AppRoutingModule.html":{},"classes/Bookmark.html":{},"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["add_bookmark",{"_index":343,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["add_bookmark(bookmark",{"_index":347,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["addbookmark",{"_index":1,"title":{"classes/AddBookmark.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["added",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["additionally",{"_index":1445,"title":{},"body":{"index.html":{}}}],["address",{"_index":493,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["alert",{"_index":612,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["alert(\"bookmark",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["alert(\"email",{"_index":1310,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["alert(\"invalid",{"_index":1012,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["alert(\"please",{"_index":991,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["alert(\"quiz",{"_index":998,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["alert(\"time",{"_index":904,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["alert(\"you",{"_index":640,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizSearchComponent.html":{}}}],["alert(res['message",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":440,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["allowance",{"_index":474,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["along",{"_index":537,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["already",{"_index":740,"title":{},"body":{"guards/LoginGuard.html":{},"components/RegistrationComponent.html":{}}}],["alter",{"_index":1111,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["angular",{"_index":60,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":113,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":114,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1313,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["answer",{"_index":37,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["answer'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["answer.answer",{"_index":921,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["answer.component.html",{"_index":747,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.scss",{"_index":746,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts",{"_index":745,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer.component.ts:104",{"_index":865,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:15",{"_index":751,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:17",{"_index":754,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:18",{"_index":753,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:19",{"_index":756,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:20",{"_index":755,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answer.component.ts:21",{"_index":752,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:22",{"_index":874,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:24",{"_index":880,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:30",{"_index":877,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:34",{"_index":881,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:38",{"_index":879,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:40",{"_index":876,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:42",{"_index":863,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:46",{"_index":878,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:48",{"_index":875,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:53",{"_index":868,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:89",{"_index":867,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:96",{"_index":872,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer/:id",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answer/master",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["answer/quiz",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer:updateanswer",{"_index":141,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer[element._id",{"_index":892,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer_form",{"_index":849,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer_id",{"_index":850,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answerarr",{"_index":91,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answering",{"_index":757,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["answerquiz",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["answers",{"_index":90,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["answerservice",{"_index":57,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["api",{"_index":573,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["app",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["app.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1158,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["application",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["application/json",{"_index":133,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":249,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":258,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apron",{"_index":104,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["array",{"_index":1003,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["associated",{"_index":779,"title":{},"body":{"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{}}}],["auto",{"_index":924,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["available",{"_index":1260,"title":{},"body":{"injectables/QuizService.html":{},"index.html":{},"modules.html":{}}}],["average",{"_index":455,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["back",{"_index":1136,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["backdrop",{"_index":599,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["background",{"_index":406,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["base",{"_index":107,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["base_url",{"_index":62,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"index.html":{}}}],["being",{"_index":23,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["belonging",{"_index":354,"title":{},"body":{"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{}}}],["belongs",{"_index":26,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["below",{"_index":1026,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["best",{"_index":1322,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["between",{"_index":447,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizCreateComponent.html":{}}}],["beyond",{"_index":1096,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["blend",{"_index":430,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["block",{"_index":445,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["blur(5px",{"_index":601,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["body",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["bold",{"_index":1146,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["bookfilter",{"_index":326,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["bookfilterpipe",{"_index":256,"title":{"pipes/BookFilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/BookFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["bookmark",{"_index":9,"title":{"classes/Bookmark.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["bookmarked",{"_index":24,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{}}}],["bookmarks",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{}}}],["bookmarks'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["bookmarks.component.html",{"_index":366,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks.component.scss",{"_index":365,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["bookmarks/bookmarks.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bookmarkscomponent",{"_index":225,"title":{"components/BookmarksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookmarkservice",{"_index":341,"title":{"injectables/BookmarkService.html":{}},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{}}}],["booltimesup",{"_index":851,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":605,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["both",{"_index":1444,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":413,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["box",{"_index":595,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["brett",{"_index":1327,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["browse",{"_index":1500,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":932,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["building",{"_index":1482,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["bulmaio",{"_index":1494,"title":{},"body":{"index.html":{}}}],["button",{"_index":1015,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["button:hover",{"_index":1225,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["buttonback",{"_index":1220,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["buttonback:hover",{"_index":1227,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["buttons",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["cadetblue",{"_index":1224,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["call",{"_index":574,"title":{},"body":{"components/EditProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":979,"title":{},"body":{"components/QuizCreateComponent.html":{},"miscellaneous/functions.html":{}}}],["calls",{"_index":109,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{}}}],["can't",{"_index":641,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["canactivate",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["canactivate(route",{"_index":628,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["cancel",{"_index":1092,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["card",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["cards",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["cat",{"_index":329,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["catagories",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["catagory.name",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["catcherror",{"_index":115,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["catcherror(handleerror",{"_index":135,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["categories",{"_index":941,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["categorized",{"_index":1453,"title":{},"body":{"index.html":{}}}],["category",{"_index":448,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"classes/CreateQuiz.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["category.name",{"_index":1031,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["catergories",{"_index":653,"title":{},"body":{"pipes/FilterPipe.html":{},"components/HomeComponent.html":{}}}],["ccc",{"_index":1143,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["cd",{"_index":1459,"title":{},"body":{"index.html":{}}}],["center",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["change",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["changedetectionstrategy",{"_index":384,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["changedetectorref",{"_index":383,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{}}}],["changes",{"_index":1083,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["character",{"_index":1070,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["check",{"_index":866,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["check_email_exists",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["check_email_exists(email",{"_index":1348,"title":{},"body":{"injectables/UserService.html":{}}}],["checkanswers",{"_index":857,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["choice",{"_index":478,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["choose",{"_index":1084,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["churchman",{"_index":427,"title":{},"body":{"components/BookmarksComponent.html":{},"components/LoginComponent.html":{}}}],["ci",{"_index":1480,"title":{},"body":{"index.html":{}}}],["circle",{"_index":1479,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"overview.html":{}}}],["clearinterval(this.countdowntimer",{"_index":902,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cli",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["click",{"_index":1082,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["clicks",{"_index":1014,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["client",{"_index":76,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["clouds",{"_index":1208,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["cluster_appmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["codecov",{"_index":1487,"title":{},"body":{"index.html":{}}}],["color",{"_index":421,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["colors.jpg",{"_index":594,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["column",{"_index":1126,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["command",{"_index":1470,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1488,"title":{},"body":{"index.html":{}}}],["competitions",{"_index":1448,"title":{},"body":{"index.html":{}}}],["complete",{"_index":992,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["completed",{"_index":1024,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["compodoc",{"_index":1475,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["compodocto",{"_index":1474,"title":{},"body":{"index.html":{}}}],["component",{"_index":144,"title":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["component:quizinfocomponent",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["confirm",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_password",{"_index":519,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirmpassword",{"_index":532,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log(\"quiz",{"_index":769,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["console.log(\"toggled",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`searched",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(json.stringify(this.quiz",{"_index":1018,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["console.log(qna",{"_index":1010,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["console.log(res",{"_index":1304,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["console.log(response",{"_index":577,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["console.log(this.quizzes",{"_index":1238,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["const",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["constructor(bookmarkservice",{"_index":370,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["constructor(http",{"_index":71,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":124,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":558,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(questionservice",{"_index":862,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["constructor(quizservice",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["constructor(route",{"_index":1173,"title":{},"body":{"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["constructor(router",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":520,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contact",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["container",{"_index":923,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["content",{"_index":132,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["continue",{"_index":1001,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["continuous",{"_index":1434,"title":{},"body":{"index.html":{}}}],["control",{"_index":545,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get(\"confirm_password",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get(\"password",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":535,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contructor",{"_index":1290,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["correct",{"_index":39,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{}}}],["countdown",{"_index":931,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["countdowntimer",{"_index":852,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cover",{"_index":437,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["coverage",{"_index":1371,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":82,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create'},{'name",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["create.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":940,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.scss",{"_index":939,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts",{"_index":938,"title":{},"body":{"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:110",{"_index":954,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:121",{"_index":952,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:18",{"_index":948,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:20",{"_index":968,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:21",{"_index":965,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:22",{"_index":966,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:24",{"_index":967,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:25",{"_index":955,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:26",{"_index":964,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:28",{"_index":951,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:36",{"_index":960,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:54",{"_index":963,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:66",{"_index":950,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:92",{"_index":949,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create/quiz",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["create_answer",{"_index":64,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_answer(answer",{"_index":80,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_answers",{"_index":65,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_answers(answerarr",{"_index":86,"title":{},"body":{"injectables/AnswerService.html":{}}}],["create_many_questions",{"_index":798,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_many_questions(questions",{"_index":805,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question",{"_index":799,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_question(question",{"_index":807,"title":{},"body":{"injectables/QuestionService.html":{}}}],["create_quiz",{"_index":1240,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_quiz(newquiz",{"_index":1249,"title":{},"body":{"injectables/QuizService.html":{}}}],["create_user",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user(user",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["createanswer",{"_index":129,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createbookmark",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["createbookmark(quiz",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["created",{"_index":1205,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["created_by",{"_index":1169,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["createquestion",{"_index":825,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{}}}],["createquiz",{"_index":453,"title":{"classes/CreateQuiz.html":{}},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizform",{"_index":942,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["creates",{"_index":88,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["createuser",{"_index":479,"title":{"classes/CreateUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":485,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["creation",{"_index":1023,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["creator",{"_index":464,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["creatorid",{"_index":456,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["css",{"_index":1134,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ctrl",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl.value",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":523,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":936,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["customize",{"_index":1025,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["data",{"_index":484,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"classes/User.html":{}}}],["database",{"_index":29,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["declarations",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":1163,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["decorator",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{}}}],["decorators",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":94,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer",{"_index":66,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_answer(id",{"_index":92,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delete_bookmark",{"_index":344,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_bookmark(bookmark",{"_index":349,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["delete_question",{"_index":800,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_question(question",{"_index":809,"title":{},"body":{"injectables/QuestionService.html":{}}}],["delete_quiz",{"_index":1241,"title":{},"body":{"injectables/QuizService.html":{}}}],["delete_quiz(id",{"_index":1251,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletequiz/\"+id).pipe",{"_index":1278,"title":{},"body":{"injectables/QuizService.html":{}}}],["dependencies",{"_index":251,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":1477,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["direction",{"_index":1125,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["directive",{"_index":61,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["directives",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["directory",{"_index":1463,"title":{},"body":{"index.html":{}}}],["display",{"_index":404,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["displaying",{"_index":1188,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["displays",{"_index":758,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["div",{"_index":613,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["docs",{"_index":1437,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1372,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["don't",{"_index":590,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["don\\'t",{"_index":623,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["dynamic",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":476,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["each",{"_index":536,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit_user",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["edit_user(user",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["editprofilecomponent",{"_index":227,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editprofileguard",{"_index":298,"title":{"guards/EditProfileGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["edituser",{"_index":505,"title":{"classes/EditUser.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["element",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["element._id",{"_index":911,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["element.correct",{"_index":912,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["elementref",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{}}}],["email",{"_index":486,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email).pipe",{"_index":1364,"title":{},"body":{"injectables/UserService.html":{}}}],["email_status",{"_index":1302,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["end",{"_index":1078,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ends",{"_index":1073,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["error",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":782,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["even",{"_index":1446,"title":{},"body":{"index.html":{}}}],["executing",{"_index":1440,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1311,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["express",{"_index":1496,"title":{},"body":{"index.html":{}}}],["f7f7f7",{"_index":1138,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["failed",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["false",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewQuestionAnswer.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["favourite",{"_index":401,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["feature",{"_index":643,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/QuizCreateComponent.html":{}}}],["featuring",{"_index":1112,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["fed3d3",{"_index":614,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fetching",{"_index":1187,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["fff",{"_index":1144,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["field",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["fields",{"_index":993,"title":{},"body":{"components/QuizCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fill",{"_index":1013,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["filter",{"_index":600,"title":{},"body":{"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["filter.pipe",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["filter.pipe.ts",{"_index":325,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:9",{"_index":330,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["filterpipe",{"_index":257,"title":{"pipes/FilterPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":400,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["finish",{"_index":1030,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["firebase",{"_index":1484,"title":{},"body":{"index.html":{}}}],["first",{"_index":495,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["first_name",{"_index":518,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["firstname",{"_index":487,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["fit",{"_index":1130,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["flex",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["following",{"_index":1469,"title":{},"body":{"index.html":{}}}],["font",{"_index":926,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["for(let",{"_index":399,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizCreateComponent.html":{}}}],["force",{"_index":1081,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["forget",{"_index":1101,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["form",{"_index":483,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["format",{"_index":1333,"title":{},"body":{"classes/User.html":{}}}],["formbuilder",{"_index":884,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["formcontrol",{"_index":527,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["formcontrol('false",{"_index":962,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["formgroup",{"_index":526,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup(answer",{"_index":897,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["friends",{"_index":503,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/QuizCreateComponent.html":{},"classes/User.html":{},"index.html":{}}}],["front",{"_index":1107,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["full",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuizInfoComponent.html":{}}}],["function",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":870,"title":{"miscellaneous/functions.html":{}},"body":{"components/QuizAnswerComponent.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":1472,"title":{},"body":{"index.html":{}}}],["generated",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["genereated",{"_index":501,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["get_bookmarks",{"_index":345,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_bookmarks(userid",{"_index":352,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["get_category_byid",{"_index":1242,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_category_byid(id",{"_index":1253,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_question_answer",{"_index":67,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_question_answer(questionid",{"_index":95,"title":{},"body":{"injectables/AnswerService.html":{}}}],["get_quiz_byid",{"_index":1243,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_byid(id",{"_index":1257,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_categories",{"_index":1244,"title":{},"body":{"injectables/QuizService.html":{}}}],["get_quiz_questions",{"_index":801,"title":{},"body":{"injectables/QuestionService.html":{}}}],["get_quiz_questions(id",{"_index":812,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallanswers",{"_index":68,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getallquestions",{"_index":802,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getallquiz",{"_index":1245,"title":{},"body":{"injectables/QuizService.html":{}}}],["getallquizzes\").pipe",{"_index":1272,"title":{},"body":{"injectables/QuizService.html":{}}}],["getconfirm_password",{"_index":554,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getemail",{"_index":550,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfirst_name",{"_index":543,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getmodulefactory",{"_index":969,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["getpassword",{"_index":552,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["gets",{"_index":816,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getsurname",{"_index":546,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":1431,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":548,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["given",{"_index":1255,"title":{},"body":{"injectables/QuizService.html":{}}}],["global",{"_index":539,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["go",{"_index":1462,"title":{},"body":{"index.html":{}}}],["gradient(circle",{"_index":408,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":1501,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":429,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["green",{"_index":608,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["grid",{"_index":405,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["groups",{"_index":1447,"title":{},"body":{"index.html":{}}}],["guard",{"_index":624,"title":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":625,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"overview.html":{}}}],["guards/edit",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/login.guard",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h2",{"_index":925,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["handleerror",{"_index":119,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headers",{"_index":130,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":438,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["here",{"_index":741,"title":{},"body":{"guards/LoginGuard.html":{}}}],["hide",{"_index":1074,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["hint",{"_index":1075,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["home",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["home.component.html",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":230,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hosting",{"_index":1485,"title":{},"body":{"index.html":{}}}],["html",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["http",{"_index":75,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":72,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httperrorresponse",{"_index":111,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":112,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://aksharnana.github.io/quizplatform",{"_index":1436,"title":{},"body":{"index.html":{}}}],["https://clumsy",{"_index":103,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["https://quiz",{"_index":1490,"title":{},"body":{"index.html":{}}}],["i=0",{"_index":1020,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["id,nupdate",{"_index":1276,"title":{},"body":{"injectables/QuizService.html":{}}}],["identifier",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":375,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["idx+1",{"_index":919,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["if(!this.createquizform.valid",{"_index":990,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(cat",{"_index":334,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["if(res.hasownproperty('message",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(res['creatorid",{"_index":1017,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(res['message",{"_index":396,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["if(res['quizid",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["if(this.questionform.valid",{"_index":1004,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["if(this.toggled",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.user",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["if(user",{"_index":638,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["if(value",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["image",{"_index":424,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["implements",{"_index":333,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["import",{"_index":110,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1122,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["imports",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":48,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["info'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["info.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info.component.html",{"_index":1168,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.scss",{"_index":1167,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts",{"_index":1166,"title":{},"body":{"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:13",{"_index":1180,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:14",{"_index":1174,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:17",{"_index":1181,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:19",{"_index":1179,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:21",{"_index":1182,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:23",{"_index":1177,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:25",{"_index":1184,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:27",{"_index":1178,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:29",{"_index":1183,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:31",{"_index":1176,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info.component.ts:47",{"_index":1175,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["info/:id",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["info/quiz",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":524,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizInfoComponent.html":{}}}],["initialised",{"_index":871,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["inject",{"_index":74,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1148,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["input",{"_index":883,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"injectables/UserService.html":{}}}],["input[type=\"text",{"_index":930,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["inputs",{"_index":860,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["install",{"_index":1456,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1455,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1460,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1435,"title":{},"body":{"index.html":{}}}],["interface",{"_index":10,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["invalid",{"_index":587,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invalid:not(form",{"_index":609,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["involves",{"_index":1439,"title":{},"body":{"index.html":{}}}],["issue",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["it's",{"_index":1256,"title":{},"body":{"injectables/QuizService.html":{}}}],["items",{"_index":441,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["itself",{"_index":777,"title":{},"body":{"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["jetpunk",{"_index":1443,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(correct",{"_index":1009,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["json.parse(this.user",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["json.parse(use",{"_index":973,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["json.parse(user",{"_index":560,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.parse(window.sessionstorage.getitem(\"user",{"_index":381,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["json.stringify(answer",{"_index":126,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(answerarr",{"_index":136,"title":{},"body":{"injectables/AnswerService.html":{}}}],["json.stringify(bookmark",{"_index":360,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["json.stringify(newquiz",{"_index":1270,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(question",{"_index":824,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(questions",{"_index":827,"title":{},"body":{"injectables/QuestionService.html":{}}}],["json.stringify(response",{"_index":579,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.stringify(update",{"_index":1274,"title":{},"body":{"injectables/QuizService.html":{}}}],["json.stringify(user",{"_index":1366,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user[0",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{}}}],["justify",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["kellie",{"_index":426,"title":{},"body":{"components/BookmarksComponent.html":{},"components/LoginComponent.html":{}}}],["kondratiev",{"_index":593,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["label",{"_index":618,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["last",{"_index":1066,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["left",{"_index":414,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["li",{"_index":1161,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["lightblue",{"_index":1123,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["link",{"_index":1113,"title":{},"body":{"components/QuizCreateComponent.html":{},"index.html":{}}}],["list",{"_index":502,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["live",{"_index":1489,"title":{},"body":{"index.html":{}}}],["load",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":1473,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1461,"title":{},"body":{"index.html":{}}}],["log",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["logged",{"_index":541,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["logging",{"_index":645,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["login",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["login(user",{"_index":1356,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.html",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_form",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":232,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguard",{"_index":301,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuard.html":{},"coverage.html":{}}}],["loginuser",{"_index":507,"title":{"classes/LoginUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["lose",{"_index":1108,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["made",{"_index":498,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["main",{"_index":1118,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["many",{"_index":89,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateQuiz.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{}}}],["manyans",{"_index":1022,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["margin",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["marked",{"_index":1117,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["master",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["masteranswercomponent",{"_index":234,"title":{"components/MasterAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["match",{"_index":591,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["match_ctrl",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_ctrl.value",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1127,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["mcq",{"_index":1032,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["menu",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["method",{"_index":975,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["methods",{"_index":63,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":1150,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["min",{"_index":1124,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["miscellaneous",{"_index":1425,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":431,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["models/answer",{"_index":118,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["models/bookmarks",{"_index":357,"title":{},"body":{"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["models/categories",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["models/qna",{"_index":970,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["models/question",{"_index":822,"title":{},"body":{"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["models/quiz",{"_index":332,"title":{},"body":{"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{}}}],["models/user",{"_index":387,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":248,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":250,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1497,"title":{},"body":{"index.html":{}}}],["more",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["much",{"_index":882,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["multiple",{"_index":477,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{}}}],["multiplechoice",{"_index":781,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{}}}],["multiply",{"_index":432,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["name",{"_index":78,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nans",{"_index":125,"title":{},"body":{"injectables/AnswerService.html":{}}}],["navbar",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar_menu",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["nbookmark",{"_index":359,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["need",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["new",{"_index":131,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newanswer",{"_index":53,"title":{"classes/NewAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["newq",{"_index":1021,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["newquestion",{"_index":774,"title":{"classes/NewQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["newquestionanswer",{"_index":784,"title":{"classes/NewQuestionAnswer.html":{}},"body":{"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["newquestions",{"_index":1019,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["newquiz",{"_index":994,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["next",{"_index":1016,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ng",{"_index":602,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":858,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["ngoninit",{"_index":368,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["nicely",{"_index":434,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["node",{"_index":1495,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1457,"title":{},"body":{"index.html":{}}}],["none",{"_index":935,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["note",{"_index":1106,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["npm",{"_index":1458,"title":{},"body":{"index.html":{}}}],["nquestion",{"_index":823,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquestions",{"_index":826,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nquiz",{"_index":1269,"title":{},"body":{"injectables/QuizService.html":{}}}],["null",{"_index":639,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":33,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{}}}],["number(this.createquizform.get(\"quiztimer\")?.value",{"_index":989,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["numcorrect",{"_index":908,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["nupdate",{"_index":1273,"title":{},"body":{"injectables/QuizService.html":{}}}],["object",{"_index":976,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["observable",{"_index":85,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["occurs",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["once",{"_index":1097,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ondestroy",{"_index":848,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["opacity",{"_index":423,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["openrunning",{"_index":1467,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1027,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["order",{"_index":1079,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ordered",{"_index":457,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{}}}],["out",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/QuizAnswerComponent.html":{},"overview.html":{}}}],["overall",{"_index":1185,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["overview",{"_index":1502,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":928,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["package",{"_index":1410,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":616,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["page",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"index.html":{}}}],["panel",{"_index":442,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizCreateComponent.html":{}}}],["param",{"_index":123,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params['id",{"_index":762,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["parse",{"_index":482,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["particular",{"_index":1266,"title":{},"body":{"injectables/QuizService.html":{}}}],["pass",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":488,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":589,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":1306,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["pipe",{"_index":134,"title":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"pipes/FilterPipe.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pipes",{"_index":323,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{},"overview.html":{}}}],["pipes/book",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/filter.pipe",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":331,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["places",{"_index":1100,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["platform",{"_index":1320,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["play",{"_index":1115,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["played",{"_index":470,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["players",{"_index":1105,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["plays",{"_index":458,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/Quiz.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["please",{"_index":1000,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pointer",{"_index":937,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["populate",{"_index":522,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["position",{"_index":435,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["previous",{"_index":1132,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["prior",{"_index":1076,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["private",{"_index":388,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["profile",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/QuizCreateComponent.html":{}}}],["profile'},{'name",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":511,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":510,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":509,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":551,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:110",{"_index":553,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:116",{"_index":555,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":538,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":533,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":521,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":542,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":525,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:86",{"_index":544,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:92",{"_index":547,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":549,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.guard",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.guard.ts",{"_index":627,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["profile.guard.ts:18",{"_index":632,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["profile/edit",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":918,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["progress",{"_index":1062,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["project",{"_index":1438,"title":{},"body":{"index.html":{}}}],["promise",{"_index":636,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provided",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizInfoComponent.html":{}}}],["providedin",{"_index":121,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":514,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["publish",{"_index":1103,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["published",{"_index":1098,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["publishquiz",{"_index":946,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pushes",{"_index":1002,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["pushing",{"_index":1483,"title":{},"body":{"index.html":{}}}],["qcategory",{"_index":984,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qdescription",{"_index":982,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qna",{"_index":786,"title":{},"body":{"classes/NewQuestionAnswer.html":{},"components/QuizCreateComponent.html":{}}}],["qname",{"_index":980,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qtimer",{"_index":988,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["qtype",{"_index":986,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["question",{"_index":50,"title":{"classes/Question.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{},"index.html":{}}}],["question.answer",{"_index":1064,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["question.question",{"_index":920,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["question:updatequestion",{"_index":833,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionform",{"_index":943,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["questionid",{"_index":40,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{}}}],["questions",{"_index":759,"title":{},"body":{"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"index.html":{}}}],["questionservice",{"_index":796,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["quiz",{"_index":22,"title":{"classes/Quiz.html":{}},"body":{"classes/AddBookmark.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"components/BookmarksComponent.html":{},"classes/CreateQuiz.html":{},"components/EditProfileComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["quiz._id",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.category",{"_index":654,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["quiz.creatorid",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.description",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name",{"_index":402,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["quiz.name.includes(cat",{"_index":336,"title":{},"body":{"pipes/BookFilterPipe.html":{}}}],["quiz_id",{"_index":853,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["quiz_platform",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["quiz_platformstart",{"_index":1464,"title":{},"body":{"index.html":{}}}],["quizanswercomponent",{"_index":237,"title":{"components/QuizAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizcategory",{"_index":958,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizcreatecomponent",{"_index":238,"title":{"components/QuizCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdescription",{"_index":957,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizid",{"_index":13,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateQuestion.html":{}}}],["quizinfocomponent",{"_index":240,"title":{"components/QuizInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizname",{"_index":956,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizsaved",{"_index":944,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quizsearchcomponent",{"_index":242,"title":{"components/QuizSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizservice",{"_index":371,"title":{"injectables/QuizService.html":{}},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quiztime",{"_index":748,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["quiztimer",{"_index":959,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["quiztype",{"_index":749,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["quizzes",{"_index":99,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"components/BookmarksComponent.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"index.html":{}}}],["quizzes.filter(quiz",{"_index":335,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["radial",{"_index":407,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["radius",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["randomize",{"_index":1080,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["rated",{"_index":1454,"title":{},"body":{"index.html":{}}}],["rating",{"_index":1170,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["raw",{"_index":1133,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["ray.cyclic.app/api/answer",{"_index":105,"title":{},"body":{"injectables/AnswerService.html":{}}}],["ray.cyclic.app/api/bookmark",{"_index":355,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["ray.cyclic.app/api/category/getallcategories\").pipe",{"_index":1280,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/category/getcategory/\"+id).pipe",{"_index":1282,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/question",{"_index":820,"title":{},"body":{"injectables/QuestionService.html":{}}}],["ray.cyclic.app/api/quiz",{"_index":1267,"title":{},"body":{"injectables/QuizService.html":{}}}],["ray.cyclic.app/api/user",{"_index":1358,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["ready",{"_index":1093,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["red",{"_index":611,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["redirectto",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registered",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser",{"_index":1288,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1286,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":1285,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration_form",{"_index":1287,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":244,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reintegrate",{"_index":1135,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["related",{"_index":1360,"title":{},"body":{"injectables/UserService.html":{}}}],["relative",{"_index":1147,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["remove",{"_index":351,"title":{},"body":{"injectables/BookmarkService.html":{},"components/QuizCreateComponent.html":{},"injectables/QuizService.html":{}}}],["removebookmark",{"_index":369,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removebookmark(quiz",{"_index":374,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["removequestion",{"_index":947,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["removequestion(question",{"_index":953,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["removes",{"_index":811,"title":{},"body":{"injectables/QuestionService.html":{}}}],["repeat",{"_index":436,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["replaceid",{"_index":1008,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["report",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["represents",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{}}}],["request",{"_index":83,"title":{},"body":{"injectables/AnswerService.html":{},"components/RegistrationComponent.html":{}}}],["requests",{"_index":1361,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":586,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["res",{"_index":391,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["res?._id",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["res['userid",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["reserve",{"_index":1110,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["reset",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":576,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["responsible",{"_index":1186,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["result",{"_index":1301,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["result.foreach(element",{"_index":894,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["result['email_status",{"_index":1305,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"injectables/AnswerService.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"injectables/QuestionService.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["rgba(255",{"_index":596,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["right",{"_index":417,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":122,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["route",{"_index":635,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["router",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["routermodule",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":631,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["routes",{"_index":297,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":869,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["running",{"_index":1481,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":117,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ryutaro",{"_index":1324,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["s",{"_index":914,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["save",{"_index":1029,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["saved",{"_index":999,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["saves",{"_index":977,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["sayles",{"_index":1328,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["scale",{"_index":433,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["scale(1.1",{"_index":1226,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["scale(1.2",{"_index":1222,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["score",{"_index":461,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["scored",{"_index":916,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["scoredisplay",{"_index":854,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["search",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/QuizSearchComponent.html":{}}}],["search'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["search(value",{"_index":377,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["search.component",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["search.component.html",{"_index":1230,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.scss",{"_index":1229,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts",{"_index":1228,"title":{},"body":{"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:14",{"_index":1231,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:18",{"_index":1234,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:19",{"_index":1235,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:21",{"_index":1236,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:23",{"_index":1233,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search.component.ts:33",{"_index":1232,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["search/:id",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search/quiz",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["search_bar",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["search_quiz",{"_index":1246,"title":{},"body":{"injectables/QuizService.html":{}}}],["search_quiz(id",{"_index":1262,"title":{},"body":{"injectables/QuizService.html":{}}}],["searchable",{"_index":1104,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["searcheditem",{"_index":367,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["second",{"_index":898,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["seconds",{"_index":1033,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["see",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["select",{"_index":620,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["select::before",{"_index":1151,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["selected",{"_index":1091,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["selectedcategory",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectedcatid",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["self",{"_index":1131,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["send",{"_index":1116,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["serve",{"_index":1466,"title":{},"body":{"index.html":{}}}],["servecontinuous",{"_index":1476,"title":{},"body":{"index.html":{}}}],["server",{"_index":1465,"title":{},"body":{"index.html":{}}}],["service",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["services/answer.service",{"_index":886,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["services/bookmark.service",{"_index":385,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["services/question.service",{"_index":885,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["services/quiz.service",{"_index":386,"title":{},"body":{"components/BookmarksComponent.html":{},"components/HomeComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["services/user.service",{"_index":556,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/HomeComponent.html":{},"guards/LoginGuard.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{}}}],["sessionstorage.setitem(\"user",{"_index":578,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{}}}],["setinterval",{"_index":900,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["setup",{"_index":534,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["share",{"_index":1102,"title":{},"body":{"components/QuizCreateComponent.html":{},"index.html":{}}}],["short",{"_index":588,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["show",{"_index":1094,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["sign",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1441,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1452,"title":{},"body":{"index.html":{}}}],["single",{"_index":1069,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["site",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":419,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["sizing",{"_index":1159,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["solid",{"_index":606,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["space",{"_index":446,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizCreateComponent.html":{}}}],["specifc",{"_index":814,"title":{},"body":{"injectables/QuestionService.html":{}}}],["specific",{"_index":97,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuizInfoComponent.html":{}}}],["specified",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["sporcle",{"_index":1442,"title":{},"body":{"index.html":{}}}],["src/.../errorhandler.ts",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/bookmarks/bookmarks.component.ts",{"_index":363,"title":{},"body":{"components/BookmarksComponent.html":{},"coverage.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:15",{"_index":379,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:16",{"_index":380,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:17",{"_index":382,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:18",{"_index":372,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:21",{"_index":373,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:32",{"_index":376,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/bookmarks/bookmarks.component.ts:50",{"_index":378,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["src/app/edit",{"_index":508,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/guards/edit",{"_index":626,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts",{"_index":738,"title":{},"body":{"guards/LoginGuard.html":{},"coverage.html":{}}}],["src/app/guards/login.guard.ts:9",{"_index":739,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/app/home/home.component.ts",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:15",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:25",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:35",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:55",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:61",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:67",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/master",{"_index":744,"title":{},"body":{"components/MasterAnswerComponent.html":{},"coverage.html":{}}}],["src/app/models/answer.ts",{"_index":38,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["src/app/models/answer.ts:12",{"_index":773,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:16",{"_index":770,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:20",{"_index":771,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/answer.ts:31",{"_index":49,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:35",{"_index":52,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:39",{"_index":43,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:43",{"_index":46,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:47",{"_index":42,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:51",{"_index":41,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/models/answer.ts:61",{"_index":1330,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:65",{"_index":1331,"title":{},"body":{"classes/UpdateAnswer.html":{}}}],["src/app/models/answer.ts:8",{"_index":772,"title":{},"body":{"classes/NewAnswer.html":{}}}],["src/app/models/bookmarks.ts",{"_index":6,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"coverage.html":{}}}],["src/app/models/bookmarks.ts:12",{"_index":340,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:16",{"_index":339,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:21",{"_index":337,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/bookmarks.ts:30",{"_index":25,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:34",{"_index":21,"title":{},"body":{"classes/AddBookmark.html":{}}}],["src/app/models/bookmarks.ts:8",{"_index":338,"title":{},"body":{"classes/Bookmark.html":{}}}],["src/app/models/categories.ts",{"_index":449,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/models/categories.ts:12",{"_index":452,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:16",{"_index":450,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/categories.ts:8",{"_index":451,"title":{},"body":{"classes/Category.html":{}}}],["src/app/models/qna.ts",{"_index":785,"title":{},"body":{"classes/NewQuestionAnswer.html":{},"coverage.html":{}}}],["src/app/models/qna.ts:13",{"_index":789,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:18",{"_index":787,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:20",{"_index":788,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/qna.ts:8",{"_index":790,"title":{},"body":{"classes/NewQuestionAnswer.html":{}}}],["src/app/models/question.ts",{"_index":775,"title":{},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["src/app/models/question.ts:13",{"_index":780,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:18",{"_index":776,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/question.ts:28",{"_index":794,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:33",{"_index":795,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:38",{"_index":793,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:43",{"_index":792,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:48",{"_index":791,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:58",{"_index":1332,"title":{},"body":{"classes/UpdateQuestion.html":{}}}],["src/app/models/question.ts:8",{"_index":778,"title":{},"body":{"classes/NewQuestion.html":{}}}],["src/app/models/quiz.ts",{"_index":454,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts:12",{"_index":465,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:16",{"_index":463,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:20",{"_index":462,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:24",{"_index":475,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:28",{"_index":468,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:32",{"_index":460,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:36",{"_index":467,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:40",{"_index":472,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:49",{"_index":842,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:53",{"_index":841,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:57",{"_index":840,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:61",{"_index":839,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:65",{"_index":846,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:69",{"_index":844,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:73",{"_index":838,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:77",{"_index":843,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:8",{"_index":466,"title":{},"body":{"classes/CreateQuiz.html":{}}}],["src/app/models/quiz.ts:81",{"_index":845,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:86",{"_index":837,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:90",{"_index":836,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/user.ts",{"_index":480,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:100",{"_index":648,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:110",{"_index":742,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:114",{"_index":743,"title":{},"body":{"classes/LoginUser.html":{}}}],["src/app/models/user.ts:13",{"_index":1342,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1337,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1341,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1336,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1339,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1340,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1338,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:42",{"_index":1334,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:52",{"_index":500,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:57",{"_index":494,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:61",{"_index":499,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:65",{"_index":491,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:69",{"_index":496,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:73",{"_index":497,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:8",{"_index":1335,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:83",{"_index":650,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:88",{"_index":647,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:92",{"_index":649,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:96",{"_index":646,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/pipes/book",{"_index":324,"title":{},"body":{"pipes/BookFilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts",{"_index":651,"title":{},"body":{"pipes/FilterPipe.html":{},"coverage.html":{}}}],["src/app/pipes/filter.pipe.ts:14",{"_index":652,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/quiz",{"_index":847,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1284,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:103",{"_index":1297,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:109",{"_index":1298,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:115",{"_index":1299,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":1289,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:22",{"_index":1293,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:27",{"_index":1292,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:53",{"_index":1291,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:85",{"_index":1294,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:91",{"_index":1295,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:97",{"_index":1296,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/services/answer.service.ts",{"_index":59,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/services/answer.service.ts:13",{"_index":73,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:24",{"_index":106,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:29",{"_index":81,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:45",{"_index":87,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:60",{"_index":98,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:71",{"_index":96,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:83",{"_index":101,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:97",{"_index":93,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/bookmark.service.ts",{"_index":342,"title":{},"body":{"injectables/BookmarkService.html":{},"coverage.html":{}}}],["src/app/services/bookmark.service.ts:13",{"_index":346,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:24",{"_index":356,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:31",{"_index":353,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:42",{"_index":348,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/bookmark.service.ts:58",{"_index":350,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["src/app/services/question.service.ts",{"_index":797,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:100",{"_index":810,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:14",{"_index":804,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:25",{"_index":821,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:32",{"_index":808,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:48",{"_index":806,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:63",{"_index":815,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:74",{"_index":813,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:86",{"_index":818,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":1239,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:108",{"_index":1254,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:114",{"_index":1263,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:14",{"_index":1248,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:25",{"_index":1268,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:32",{"_index":1250,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:48",{"_index":1261,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:60",{"_index":1265,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:76",{"_index":1252,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:86",{"_index":1259,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:97",{"_index":1258,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/user.service.ts",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:25",{"_index":1359,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1362,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":1349,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:44",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:60",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:76",{"_index":1357,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/utilities/errorhandler.ts",{"_index":1405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utilities/password.validator.ts",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":1493,"title":{},"body":{"index.html":{}}}],["stanislav",{"_index":592,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["start",{"_index":1206,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["started",{"_index":1432,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1077,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["state",{"_index":630,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["statements",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1433,"title":{},"body":{"index.html":{}}}],["still",{"_index":1114,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["stop",{"_index":873,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["stoptimer",{"_index":859,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["style",{"_index":1155,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["styles",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["sub",{"_index":855,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["submit",{"_index":922,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["subtiles",{"_index":1223,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["subtitle",{"_index":1140,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["such",{"_index":1451,"title":{},"body":{"index.html":{}}}],["sun.jpg",{"_index":1210,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["sunset",{"_index":1209,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["supplies",{"_index":1120,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["support",{"_index":1498,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":489,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["svg",{"_index":1499,"title":{},"body":{"modules.html":{}}}],["tabcontent",{"_index":1129,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["table",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1160,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tag",{"_index":1085,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tags",{"_index":1028,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["take",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["taken",{"_index":1300,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["tech",{"_index":1492,"title":{},"body":{"index.html":{}}}],["template",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["temporary",{"_index":978,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["tempquiz",{"_index":945,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["test",{"_index":634,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["testauto",{"_index":1471,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1468,"title":{},"body":{"index.html":{}}}],["text",{"_index":51,"title":{},"body":{"classes/Answer.html":{},"classes/CreateQuiz.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["this.answer_form",{"_index":896,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(element._id)?.value",{"_index":909,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answers.foreach(element",{"_index":910,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answers.push(element",{"_index":895,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answerservice.get_question_answer(element._id).subscribe((result",{"_index":893,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.bookmarks",{"_index":390,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarks.foreach(element",{"_index":392,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.add_bookmark(bookmark).subscribe((res",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.bookmarkservice.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res",{"_index":395,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.bookmarkservice.get_bookmarks(this.user._id).subscribe((res",{"_index":389,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.booltimesup",{"_index":903,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.catagories",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.catagories.find(val",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categories",{"_index":974,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.category",{"_index":1196,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.checkanswers",{"_index":905,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.confirm_password?.setvalue(this.userobj.password",{"_index":566,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.countdowntimer",{"_index":899,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.created_by",{"_index":1200,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.createquizform.get(\"quizcategory\")?.value",{"_index":985,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quizdescription\")?.value",{"_index":983,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quizname\")?.value",{"_index":981,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.createquizform.get(\"quiztype\")?.value",{"_index":987,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.description",{"_index":1193,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.email?.setvalue(this.userobj.email",{"_index":564,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.email?.value",{"_index":571,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.first_name?.setvalue(this.userobj.firstname",{"_index":561,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.first_name?.value",{"_index":568,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.http.delete(this.base_url",{"_index":1277,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.delete(this.base_url+\"/deleteanswer/\"+id).pipe",{"_index":143,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.delete(this.base_url+\"/deletebookmark/\"+bookmark._id).pipe",{"_index":362,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.delete(this.base_url+\"/deletequestion/\"+question._id).pipe",{"_index":835,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(\"https://clumsy",{"_index":1279,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url",{"_index":1271,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/emailexists",{"_index":1363,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.base_url+\"/getallanswers\").pipe",{"_index":138,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getallquestions\").pipe",{"_index":830,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getanswers/\"+questionid).pipe",{"_index":139,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.get(this.base_url+\"/getbookmarks/\"+userid).pipe",{"_index":358,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.get(this.base_url+\"/getquestions/\"+id).pipe",{"_index":831,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.get(this.base_url+\"/getquiz/\"+id).pipe",{"_index":1281,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(this.base_url+\"/searchquiz/\"+id).pipe",{"_index":1283,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(this.base_url+\"/updateanswer/\"+id",{"_index":142,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.patch(this.base_url+\"/updatequestion/\"+id",{"_index":834,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.patch(this.base_url+\"/updatequiz",{"_index":1275,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(this.base_url+\"/updateuser/\"+userid,userupdated",{"_index":1369,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url",{"_index":128,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["this.http.post(this.base_url+\"/createbookmark",{"_index":361,"title":{},"body":{"injectables/BookmarkService.html":{}}}],["this.http.post(this.base_url+\"/createmanyanswers\",nans",{"_index":137,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.http.post(this.base_url+\"/createmanyquestions\",nquestions",{"_index":828,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.http.post(this.base_url+\"/createuser\",usernew",{"_index":1367,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url+\"/login\",body",{"_index":1370,"title":{},"body":{"injectables/UserService.html":{}}}],["this.id",{"_index":1189,"title":{},"body":{"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.login_form.get(\"email",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"email\")?.value",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password\")?.value",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.reset",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.name",{"_index":1191,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.add(\"is",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.remove(\"is",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password?.setvalue(this.userobj.password",{"_index":565,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.password?.value",{"_index":572,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.questionform.get(\"answer\")?.value",{"_index":1006,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.get(\"question\")?.value",{"_index":1005,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.get(\"truth\")?.value",{"_index":1007,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionform.valid",{"_index":1063,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questions",{"_index":890,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.questions.foreach(element",{"_index":891,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.questions.length",{"_index":917,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.questions.push(qna",{"_index":1011,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questionservice.get_quiz_questions(this.quiz_id).subscribe((value",{"_index":889,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.quiz",{"_index":764,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["this.quiz.timer",{"_index":768,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz.type",{"_index":766,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiz_id",{"_index":888,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.quizid",{"_index":761,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizsaved",{"_index":997,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.quizservice.get_quiz_byid(element.quizid).subscribe((res",{"_index":393,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.id).subscribe((value",{"_index":1190,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.quizservice.get_quiz_byid(this.quizid).subscribe((res",{"_index":763,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizservice.get_quiz_categories().subscribe((res",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizCreateComponent.html":{}}}],["this.quizservice.getallquiz().subscribe((res",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.quizservice.search_quiz(this.id).subscribe(res",{"_index":1237,"title":{},"body":{"components/QuizSearchComponent.html":{}}}],["this.quiztime",{"_index":767,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quiztype",{"_index":765,"title":{},"body":{"components/MasterAnswerComponent.html":{}}}],["this.quizzes",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.quizzes.push(res",{"_index":394,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.quizzes.splice(idx,1",{"_index":397,"title":{},"body":{"components/BookmarksComponent.html":{}}}],["this.rating",{"_index":1195,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.registration_form.get(\"confirm_password",{"_index":1319,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"email",{"_index":1317,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"first_name",{"_index":1314,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"password",{"_index":1318,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"surname",{"_index":1315,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"username",{"_index":1316,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.reset",{"_index":1309,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":760,"title":{},"body":{"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{}}}],["this.router.navigate(['/home",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1308,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/quiz",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scoredisplay",{"_index":915,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.search_bar?.nativeelement.value",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectedcategory",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectedcatid",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.stoptimer",{"_index":907,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.sub",{"_index":887,"title":{},"body":{"components/QuizAnswerComponent.html":{},"components/QuizInfoComponent.html":{}}}],["this.sub.unsubscribe",{"_index":1204,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.surname?.setvalue(this.userobj.surname",{"_index":562,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.surname?.value",{"_index":569,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.tempquiz",{"_index":996,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.timeleft",{"_index":901,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.timeleftdisplay",{"_index":913,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.timevalue",{"_index":1202,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.toggled",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.total_played",{"_index":1198,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["this.update_form.get(\"confirm_password",{"_index":585,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"email",{"_index":583,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"first_name",{"_index":580,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"password",{"_index":584,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"surname",{"_index":581,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"username",{"_index":582,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.user",{"_index":972,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.user._id",{"_index":995,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.username?.setvalue(this.userobj.username",{"_index":563,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.value",{"_index":570,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.userobj",{"_index":559,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userobj._id",{"_index":567,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.check_email_exists(user.email).subscribe((res",{"_index":1303,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.create_user(user).subscribe",{"_index":1307,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.edit_user(user,userid).subscribe",{"_index":575,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.login(body).subscribe((res",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":116,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["thy're",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["tilemain",{"_index":1211,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["tilesub",{"_index":1212,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["tilesub:hover",{"_index":1221,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["time",{"_index":473,"title":{},"body":{"classes/CreateQuiz.html":{},"components/MasterAnswerComponent.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{}}}],["timeleft",{"_index":861,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timeleftdisplay",{"_index":856,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timer",{"_index":459,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["times",{"_index":469,"title":{},"body":{"classes/CreateQuiz.html":{},"classes/Quiz.html":{},"components/QuizInfoComponent.html":{}}}],["timevalue",{"_index":1171,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["title",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["toggle",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["toggled",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":418,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["total_played",{"_index":1172,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["transform",{"_index":327,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["transform(quizzes",{"_index":328,"title":{},"body":{"pipes/BookFilterPipe.html":{},"pipes/FilterPipe.html":{}}}],["transition",{"_index":1214,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["translatex",{"_index":1165,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["translatey",{"_index":1154,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["transparent",{"_index":411,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["true",{"_index":45,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"classes/CreateQuiz.html":{},"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{},"classes/NewAnswer.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"injectables/UserService.html":{}}}],["truth",{"_index":961,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["try",{"_index":1312,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["tslib",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["tsukata",{"_index":1325,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"pipes/BookFilterPipe.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"pipes/FilterPipe.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":829,"title":{},"body":{"injectables/QuestionService.html":{}}}],["types",{"_index":1450,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":504,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{}}}],["up",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["update",{"_index":403,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"components/QuizAnswerComponent.html":{},"injectables/QuizService.html":{},"classes/UpdateQuestion.html":{},"injectables/UserService.html":{}}}],["update_answer",{"_index":69,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id",{"_index":100,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_answer(id:string",{"_index":140,"title":{},"body":{"injectables/AnswerService.html":{}}}],["update_form",{"_index":512,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["update_question",{"_index":803,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id",{"_index":817,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_question(id:string",{"_index":832,"title":{},"body":{"injectables/QuestionService.html":{}}}],["update_quiz",{"_index":1247,"title":{},"body":{"injectables/QuizService.html":{}}}],["update_quiz(update",{"_index":1264,"title":{},"body":{"injectables/QuizService.html":{}}}],["updateanswer",{"_index":54,"title":{"classes/UpdateAnswer.html":{}},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/NewAnswer.html":{},"classes/UpdateAnswer.html":{},"coverage.html":{}}}],["updated",{"_index":55,"title":{},"body":{"classes/Answer.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{}}}],["updatequestion",{"_index":783,"title":{"classes/UpdateQuestion.html":{}},"body":{"classes/NewQuestion.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestion.html":{},"coverage.html":{}}}],["updates",{"_index":102,"title":{},"body":{"injectables/AnswerService.html":{},"components/HomeComponent.html":{},"injectables/QuestionService.html":{}}}],["updateuser",{"_index":516,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updatevalue",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatevalue(value",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["updating",{"_index":506,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["url",{"_index":108,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["url(\"../../assets/images/dark",{"_index":1207,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["url(\"../../assets/images/pexels",{"_index":425,"title":{},"body":{"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["url(\"../../assets/pexels",{"_index":1323,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["url(\"./src/app/school",{"_index":1137,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["url('../../assets/images/school",{"_index":1119,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["urltree",{"_index":637,"title":{},"body":{"guards/EditProfileGuard.html":{},"guards/LoginGuard.html":{}}}],["use",{"_index":971,"title":{},"body":{"components/QuizCreateComponent.html":{},"injectables/UserService.html":{}}}],["used",{"_index":481,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["user",{"_index":165,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuard.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":14,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":490,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["usernew",{"_index":1365,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj",{"_index":513,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["userobj._id",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{},"components/QuizSearchComponent.html":{}}}],["users",{"_index":492,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/LoginUser.html":{},"classes/User.html":{},"index.html":{}}}],["userservice",{"_index":515,"title":{"injectables/UserService.html":{}},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userupdated",{"_index":1368,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":1478,"title":{},"body":{"index.html":{}}}],["utilities/errorhandler",{"_index":120,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/BookmarkService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["utilities/password.validator",{"_index":557,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["val.name",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid.required",{"_index":604,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":603,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":531,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":529,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":530,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":528,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/RegistrationComponent.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"classes/Bookmark.html":{},"injectables/BookmarkService.html":{},"components/BookmarksComponent.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/LoginUser.html":{},"components/MasterAnswerComponent.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/NewQuestionAnswer.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"injectables/QuizService.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.category",{"_index":1197,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.creatorid",{"_index":1201,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.description",{"_index":1194,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.name",{"_index":1192,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.plays",{"_index":1199,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["value.timer",{"_index":1203,"title":{},"body":{"components/QuizInfoComponent.html":{}}}],["values",{"_index":819,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/QuizService.html":{}}}],["var",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":540,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1505,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1449,"title":{},"body":{"index.html":{}}}],["version",{"_index":31,"title":{},"body":{"classes/AddBookmark.html":{},"classes/Answer.html":{},"classes/Bookmark.html":{},"classes/Category.html":{},"classes/CreateQuiz.html":{},"classes/NewAnswer.html":{},"classes/NewQuestion.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/UpdateAnswer.html":{},"classes/UpdateQuestion.html":{},"properties.html":{}}}],["vertical",{"_index":1149,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["viewable",{"_index":1099,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["viewchild",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{}}}],["viewchild('navbar_menu",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('search_bar",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BookmarksComponent.html":{},"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MasterAnswerComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/QuizSearchComponent.html":{},"components/RegistrationComponent.html":{}}}],["weight",{"_index":1145,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{}}}],["well",{"_index":1486,"title":{},"body":{"index.html":{}}}],["whether",{"_index":47,"title":{},"body":{"classes/Answer.html":{},"guards/EditProfileGuard.html":{},"classes/NewAnswer.html":{},"components/RegistrationComponent.html":{},"classes/UpdateAnswer.html":{}}}],["white",{"_index":443,"title":{},"body":{"components/BookmarksComponent.html":{},"components/QuizAnswerComponent.html":{},"components/QuizCreateComponent.html":{}}}],["width",{"_index":621,"title":{},"body":{"components/EditProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizInfoComponent.html":{},"components/RegistrationComponent.html":{}}}],["within",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["without",{"_index":644,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["word",{"_index":1067,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["words",{"_index":1071,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["world",{"_index":1095,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["worlds",{"_index":1321,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["wrong",{"_index":1072,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["yes",{"_index":1068,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["zone.js",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddBookmark.html":{"url":"classes/AddBookmark.html","title":"class - AddBookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddBookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Add Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:34\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:30\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                Answer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:51\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:47\n                        \n                    \n\n            \n                \n                    id of Answer from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:39\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:43\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:31\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:35\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/answer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_answer\n                            \n                            \n                                create_many_answers\n                            \n                            \n                                delete_answer\n                            \n                            \n                                get_question_answer\n                            \n                            \n                                getAllAnswers\n                            \n                            \n                                update_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/answer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Angular Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_answer\n                        \n                    \n                \n            \n            \n                \ncreate_answer(answer: NewAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Answer request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                NewAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_answers\n                        \n                    \n                \n            \n            \n                \ncreate_many_answers(answerArr: NewAnswer[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:45\n                \n            \n\n\n            \n                \n                    Creates many answers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answerArr\n                                    \n                                            NewAnswer[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_answer\n                        \n                    \n                \n            \n            \n                \ndelete_answer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:97\n                \n            \n\n\n            \n                \n                    Delete the answer from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_question_answer\n                        \n                    \n                \n            \n            \n                \nget_question_answer(QuestionID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:71\n                \n            \n\n\n            \n                \n                    Get answers to a specific question\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    QuestionID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAnswers\n                        \n                    \n                \n            \n            \n                \ngetAllAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:60\n                \n            \n\n\n            \n                \n                    Get all answers for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_answer\n                        \n                    \n                \n            \n            \n                \nupdate_answer(id: String, answer: UpdateAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:83\n                \n            \n\n\n            \n                \n                    Updates an answer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                UpdateAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Answer\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/answer\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/answer.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for answer calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Answer, NewAnswer, UpdateAnswer } from '../models/answer';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  /**\n   * Angular Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for answer calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/answer\";\n\n    /**\n   * Create Answer request\n   */\n  create_answer(answer: NewAnswer): Observable {\n    let nans = JSON.stringify(answer);\n    return this.http.post(this.base_url + \"/createAnswer\", nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates many answers\n   * @param answerArr \n   * @returns Answer[]\n   */\n  create_many_answers(answerArr: NewAnswer[]) : Observable{\n    let nans = JSON.stringify(answerArr);\n    return this.http.post(this.base_url+\"/createManyAnswers\",nans, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Get all answers for all quizzes\n   * @returns Answer[]\n   */\n  getAllAnswers() : Observable{\n    return this.http.get(this.base_url+\"/getAllAnswers\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get answers to a specific question\n   * @param QuestionID \n   * @returns Answer[]\n   */\n  get_question_answer(QuestionID: String) : Observable{\n    return this.http.get(this.base_url+\"/getAnswers/\"+QuestionID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Updates an answer\n   * @param id \n   * @param answer \n   * @returns Answer\n   */\n  update_answer(id:String, answer:UpdateAnswer) : Observable{\n    let nans = JSON.stringify(answer);\n    return this.http.patch(this.base_url+\"/updateAnswer/\"+id, nans,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n  \n  /**\n   * Delete the answer from database\n   * @param id \n   * @returns any\n   */\n  delete_answer(id: string) : Observable{\n    return this.http.delete(this.base_url+\"/deleteAnswer/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular @Component generated by cli\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navbar_menu\n                            \n                            \n                                search_bar\n                            \n                            \n                                title\n                            \n                            \n                                toggled\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n                    Function to toggle menu on mobile navbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navbar_menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbar_menu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Angular @ViewChild Decorator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_bar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('search_bar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz_Platform'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Title of site\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Boolean value toggled: Is navbar-mobile toggled?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Angular @Component generated by cli\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of site\n   */\n  title = 'Quiz_Platform';\n\n  constructor(private router: Router){}\n\n  user = sessionStorage.getItem(\"User\");\n\n  /**\n   * Angular @ViewChild Decorator\n   */\n  @ViewChild('navbar_menu') navbar_menu: ElementRef | undefined;\n\n  @ViewChild('search_bar') search_bar: ElementRef | undefined;\n\n  /**\n   * Boolean value toggled: Is navbar-mobile toggled?\n   */\n  toggled = false;\n\n  /**\n   * Function to toggle menu on mobile navbar\n   */\n  toggle(){\n    if(this.toggled == false){\n      this.navbar_menu?.nativeElement.classList.add(\"is-active\");\n      this.toggled = true;\n    }else{\n      this.navbar_menu?.nativeElement.classList.remove(\"is-active\");\n      this.toggled = false;\n    }\n    console.log(\"toggled navbar!\");\n  }\n\n  search(){\n    let id = this.search_bar?.nativeElement.value;\n    console.log(`Searched for ${id}!`);\n\n    this.router.navigate(['/quiz-search', id]);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n      \n        Home\n      \n\n      \n        My Account\n      \n\n      \n        \n          More\n        \n\n        \n          \n            About\n          \n          \n            Jobs\n          \n          \n            Contact\n          \n          \n          \n            Report an issue\n          \n        \n      \n    \n    \n      \n        \n           \n            \n              \n              \n                \n              \n            \n          \n          \n            \n               \n            \n            Create Quiz\n          \n          \n            \n               \n            \n            Bookmark\n          \n          \n            Sign up\n          \n          \n            Log in\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .field{\n  margin: 5px;\n  justify-content: center;\n}\n\n.buttons{\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Home                    My Account                              More                                      About                                Jobs                                Contact                                          Report an issue                                                                                                                                                                                                                  Create Quiz                                                                       Bookmark                                Sign up                                Log in                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BookFilterPipe\n                        \n                        \n                            BookmarksComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MasterAnswerComponent\n                        \n                        \n                            QuizAnswerComponent\n                        \n                        \n                            QuizCreateComponent\n                        \n                        \n                            QuizInfoComponent\n                        \n                        \n                            QuizSearchComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { HomeComponent } from './home/home.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\nimport { BookFilterPipe } from './pipes/book-filter.pipe';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    EditProfileComponent,\n    LoginComponent,\n    QuizAnswerComponent,\n    HomeComponent,\n    QuizInfoComponent,\n    BookmarksComponent,\n    FilterPipe,\n    MasterAnswerComponent,\n    QuizCreateComponent,\n    QuizSearchComponent,\n    BookFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [FilterPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { EditProfileGuard } from './guards/edit-profile.guard';\nimport { LoginGuard } from './guards/login.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { QuizInfoComponent } from './quiz-info/quiz-info.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { MasterAnswerComponent } from './master-answer/master-answer.component';\nimport { QuizCreateComponent } from './quiz-create/quiz-create.component';\nimport { QuizSearchComponent } from './quiz-search/quiz-search.component';\n\n\n/**\n * Add component and the path at which they will load in the router\n */\nconst routes: Routes = [\n  {path: \"home\", component: HomeComponent},\n  {path: \"register\", component: RegistrationComponent, canActivate: [LoginGuard]},\n  {path: \"login\", component: LoginComponent, canActivate: [LoginGuard]},\n  {path: \"edit-profile\", component: EditProfileComponent, canActivate: [EditProfileGuard]},\n  {path: \"answerQuiz\", component: QuizAnswerComponent},\n  {path: \"quiz-info/:id\", component:QuizInfoComponent},\n  {path: \"bookmarks\", component: BookmarksComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-answer/:id\", component: MasterAnswerComponent},\n  {path: \"quiz-create\", component: QuizCreateComponent, canActivate: [EditProfileGuard]},\n  {path: \"quiz-search/:id\", component: QuizSearchComponent},\n  {path: '**', redirectTo: 'home', pathMatch: 'full'}\n];\n\n\n/**\n * Angular generated code to export the Routes defined within this module.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BookFilterPipe.html":{"url":"pipes/BookFilterPipe.html","title":"pipe - BookFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BookFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/book-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bookFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/book-filter.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'bookFilter'\n})\nexport class BookFilterPipe implements PipeTransform {\n\n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"\"){\n      return quizzes\n    }\n    return quizzes.filter(quiz=> quiz.Name.includes(cat));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bookmark.html":{"url":"classes/Bookmark.html","title":"class - Bookmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bookmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bookmarks.ts\n        \n\n\n            \n                Description\n            \n            \n                Bookmark interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                QuizID\n                            \n                            \n                                UserID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:21\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:8\n                        \n                    \n\n            \n                \n                    ID from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:16\n                        \n                    \n\n            \n                \n                    QuizID: Which quiz is being bookmarked?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bookmarks.ts:12\n                        \n                    \n\n            \n                \n                    UserID to which bookmark belongs\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bookmark{\n    /**\n     * ID from database\n     */\n    _id: string = \"\";\n    /**\n     * UserID to which bookmark belongs\n     */\n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n/**\n * Add Bookmark interface\n */\nexport class AddBookmark{\n    /**\n     * UserID to which bookmark belongs \n     */    \n    UserID: string = \"\";\n    /**\n     * QuizID: Which quiz is being bookmarked?\n     */\n    QuizID: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookmarkService.html":{"url":"injectables/BookmarkService.html","title":"injectable - BookmarkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookmarkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bookmark.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_bookmark\n                            \n                            \n                                delete_bookmark\n                            \n                            \n                                get_bookmarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bookmark.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add_bookmark\n                        \n                    \n                \n            \n            \n                \nadd_bookmark(bookMark: AddBookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:42\n                \n            \n\n\n            \n                \n                    Creates a bookmark for user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                AddBookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_bookmark\n                        \n                    \n                \n            \n            \n                \ndelete_bookmark(bookMark: Bookmark)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:58\n                \n            \n\n\n            \n                \n                    Remove bookmark from database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookMark\n                                    \n                                                Bookmark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_bookmarks\n                        \n                    \n                \n            \n            \n                \nget_bookmarks(UserID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bookmark.service.ts:31\n                \n            \n\n\n            \n                \n                    Return all bookmarks belonging to user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    UserID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Bookmark[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/bookmark\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bookmark.service.ts:24\n                        \n                    \n\n            \n                \n                    Base url for bookmark calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { AddBookmark, Bookmark } from '../models/bookmarks';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for bookmark calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/bookmark\";\n\n  /**\n   * Return all bookmarks belonging to user\n   * @param UserID \n   * @returns Bookmark[]\n   */\n  get_bookmarks(UserID: String) : Observable{\n    return this.http.get(this.base_url+\"/getBookmarks/\"+UserID).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Creates a bookmark for user\n   * @param bookMark \n   * @returns Bookmark\n   */\n  add_bookmark(bookMark : AddBookmark) : Observable{\n    let nbookmark = JSON.stringify(bookMark);\n    return this.http.post(this.base_url+\"/createBookmark\", nbookmark, {\n      headers: new HttpHeaders({\n        'content-type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove bookmark from database\n   * @param bookMark \n   * @returns any\n   */\n  delete_bookmark(bookMark: Bookmark) : Observable{\n    return this.http.delete(this.base_url+\"/deleteBookmark/\"+bookMark._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookmarksComponent.html":{"url":"components/BookmarksComponent.html","title":"component - BookmarksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookmarksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bookmarks/bookmarks.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bookmarks\n            \n\n            \n                styleUrls\n                ./bookmarks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bookmarks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookmarks\n                            \n                            \n                                quizzes\n                            \n                            \n                                searchedItem\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                removeBookmark\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookmarkService: BookmarkService, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/bookmarks/bookmarks.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBookmark\n                        \n                    \n                \n            \n            \n                \nremoveBookmark(quiz: Quiz, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/bookmarks/bookmarks.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookmarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookmark[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchedItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(window.sessionStorage.getItem(\"User\")!)\n                    \n                \n                    \n                        \n                                Defined in src/app/bookmarks/bookmarks.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, ElementRef} from '@angular/core';\nimport { Bookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { QuizService } from '../services/quiz.service';\nimport { User } from '../models/user';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.scss'],\n})\n\nexport class BookmarksComponent implements OnInit{\n  bookmarks: Bookmark[] = [];\n  quizzes: Quiz[] = [];\n  user: User = JSON.parse(window.sessionStorage.getItem(\"User\")!);\n  searchedItem: string =  \"\";\n  constructor(private bookmarkService: BookmarkService, private quizService: QuizService){}\n  \n  ngOnInit(){\n    this.bookmarkService.get_bookmarks(this.user._id).subscribe((res: Bookmark[]) =>{\n      this.bookmarks = res;\n      this.bookmarks.forEach(element => {\n        this.quizService.get_quiz_byID(element.QuizID).subscribe((res : Quiz) =>{\n          this.quizzes.push(res)\n        });\n      });\n    });\n  }\n\n  removeBookmark(quiz : Quiz, idx: number){\n    this.bookmarkService.delete_bookmark(this.bookmarks.at(idx)!).subscribe((res) =>{\n      if(res['message']){\n        this.quizzes.splice(idx,1);\n        let index = -1;\n        for(let i = 0; i \n    \n\n    \n        \n    \n\n        \n            \n                Bookmarks\n            \n            \n                Find your favourite quizzes!\n            \n            \n                \n                    \n                    \n                        \n                    \n                \n            \n\n            \n                \n                    {{quiz.Name}}\n                \n                \n                    \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                You have 0 bookmarks.\n            \n        \n    \n\n    \n\n    \n                \n                    ./bookmarks.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n\n.panel{\n    background-color: white;\n    margin-left: 2%;\n    margin-right: 2%;\n}\n\n.panel-block{\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Bookmarks                                        Find your favourite quizzes!                                                                                                                                                                                                        {{quiz.Name}}                                                                                                                                                                                                            You have 0 bookmarks.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookmarksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/categories.ts\n        \n\n\n            \n                Description\n            \n            \n                Category Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:16\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:8\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/categories.ts:12\n                        \n                    \n\n            \n                \n                    The category value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category{\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * The category value\n     */\n    Name: string = \"\";\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuiz.html":{"url":"classes/CreateQuiz.html","title":"class - CreateQuiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Create Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:32\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:20\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:16\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:12\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:8\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:36\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:28\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:40\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:24\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateUser class, used to parse form data when creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:65\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:57\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:69\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:73\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:61\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:52\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Friends: string[] = [];\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                update_form\n                            \n                            \n                                userObj\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject userService and to populate form with current users information\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:64\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        update_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n            \n                \n                    Global variable for logged in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:86\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:92\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:98\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:104\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:110\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:116\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent{\n  /**\n   * Global variable for logged in user\n   */\n  userObj : User;\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  update_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Constructor to inject userService and to populate form with current users information\n   */\n  constructor(public userService: UserService){\n    let user = sessionStorage.getItem(\"User\");\n    this.userObj = JSON.parse(user!);\n    this.first_name?.setValue(this.userObj.FirstName);\n    this.surname?.setValue(this.userObj.Surname);\n    this.username?.setValue(this.userObj.Username);\n    this.email?.setValue(this.userObj.Email);\n    this.password?.setValue(this.userObj.Password);\n    this.confirm_password?.setValue(this.userObj.Password);\n  }\n\n  /**\n   * Function that will update current user\n  */\n  public updateUser() {\n    const userId = this.userObj._id;\n    let user: EditUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n    }\n    /**\n     * Edit user api call\n     */\n    this.userService.edit_user(user,userId).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n      });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.update_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.update_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.update_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.update_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.update_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.update_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            First Name is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Surname is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Username is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Passwords don't match.\n                        \n                    \n                \n                \n                    \n                        \n                            Update\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                            First Name is required.                                                                                                                                                                                                                                                                                                Surname is required.                                                                                                                                                                                                                                                                                                Username is required.                                                                                                                                                                                                                                                                                                                                                                            Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                                                                                                                                                                Password is required.                                                                            Passwords don\\'t match.                                                                                                                                                    Update                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditProfileGuard.html":{"url":"guards/EditProfileGuard.html","title":"guard - EditProfileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditProfileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/edit-profile.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Angular Directive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/edit-profile.guard.ts:18\n                \n            \n\n\n            \n                \n                    Can Activate function to test whether or not a user is logged in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileGuard implements CanActivate {\n  /**\n   * Can Activate function to test whether or not a user is logged in\n   * @param route \n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        alert(\"You can't access this feature without logging in!\");\n        return false;\n      }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                EditUser class, used to parse form data when updating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:96\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:88\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:100\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:92\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:83\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Friends: string[] = [];\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(quizzes: Quiz[], cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filter.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizzes\n                                    \n                                                Quiz[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Quiz } from '../models/quiz';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(quizzes: Quiz[], cat: string): any[]{\n    if(cat === \"Catergories\" || cat === ''){\n      return quizzes;\n    }else{\n      return quizzes.filter(quiz=> quiz.Category === cat);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catagories\n                            \n                            \n                                quizzes\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                selectedCatID\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, bookmarkService: BookmarkService, change: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        change\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        catagories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCatID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { Category } from '../models/categories';\nimport { Quiz } from '../models/quiz';\nimport { BookmarkService } from '../services/bookmark.service';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n//This component represents the home page of the quiz application.\nexport class HomeComponent implements OnInit{\n\n  constructor(private quizService: QuizService, private bookmarkService: BookmarkService, private change: ChangeDetectorRef){}\n  \n  user = sessionStorage.getItem(\"User\");\n\n  catagories: Category[] = [];\n  quizzes: Quiz[] = [];\n  selectedCategory: string = \"\";\n  selectedCatID: string =  \"\";\n  ngOnInit(){\n    this.quizService.get_quiz_categories().subscribe((res) =>{\n      this.catagories = res;\n    });\n\n    this.quizService.getAllQuiz().subscribe((res) =>{\n      this.quizzes = res;\n    });\n  }\n // This creates a bookmark for the specified quiz and user if thy're logged in\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n//Updates the selectedCategory and selectedCatID properties based on the provided value.\n  updateValue(value: string){\n    this.selectedCategory = value;\n    if(value === \"Catergories\"){\n      this.selectedCatID = \"\";\n    }else{\n      let res = this.catagories.find(val=> val.Name === value);\n      this.selectedCatID = res?._id!;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home Page\n      \n      \n        Quizzes\n      \n    \n  \n  \n    \n      \n        \n          \n            Catergories\n            {{catagory.Name}}\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                \n              \n            \n            \n              {{quiz.Name}}\n              {{quiz.CreatorID}}\n            \n          \n\n          {{quiz.Description}}\n          \n            Bookmark\n            See More\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .cards {\n    margin-left: 10%;\n    margin-right: 10%;\n}\n\n.card{\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n    margin-top: 2%;\n    display: flex;\n    justify-content: center;\n    border-radius: 15px;\n}\n\n.image{\n    margin-top: 10px;\n    width: 50px;\n    height: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home Page                    Quizzes                                                      Catergories            {{catagory.Name}}                                                                                                                                                          {{quiz.Name}}              {{quiz.CreatorID}}                                {{quiz.Description}}                      Bookmark            See More                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login_form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:39\n                \n            \n\n\n            \n                \n                    Function that will login user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:61\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:67\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  /**\n   * Constructor to inject user Service and router\n   */\n  constructor(private userService: UserService, private router: Router){}\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  login_form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  });\n\n  /**\n   * Function that will login user\n  */\n  public login() {\n    let email : string = this.login_form.get(\"email\")?.value!;\n    let pass : string = this.login_form.get(\"password\")?.value!;\n    let body : LoginUser = {\n      Email: email,\n      Password: pass,\n    }\n    this.userService.login(body).subscribe((res) => {\n      if(res.hasOwnProperty('message')){\n        alert(res['message'])  \n      }else{\n        let user : User[] = res;\n        sessionStorage.setItem(\"User\", JSON.stringify(user[0]));\n        this.router.navigate(['/home']);\n        this.login_form.reset();\n      }\n    })\n  }\n\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.login_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.login_form.get(\"password\");\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                            Login\n                        \n                    \n                \n                \n                    \n                      Don't have an account? \n                      Register\n                    \n                  \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                    Login                                                                                                                      Don\\'t have an account?                       Register                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/login.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        return true;\n      }else{\n        alert(\"You already here!\");\n        return false;\n      }\n  }  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUser.html":{"url":"classes/LoginUser.html","title":"class - LoginUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                LoginUser interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                Password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:110\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:114\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Friends: string[] = [];\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MasterAnswerComponent.html":{"url":"components/MasterAnswerComponent.html","title":"component - MasterAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MasterAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/master-answer/master-answer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-master-answer\n            \n\n            \n                styleUrls\n                ./master-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./master-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz\n                            \n                            \n                                quizID\n                            \n                            \n                                quizTime\n                            \n                            \n                                quizType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/master-answer/master-answer.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/master-answer/master-answer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : new Quiz\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/master-answer/master-answer.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-master-answer',\n  templateUrl: './master-answer.component.html',\n  styleUrls: ['./master-answer.component.scss']\n})\n\n // This component represents the page for answering a quiz.\n // Displays the quiz and its questions to the user.\n \nexport class MasterAnswerComponent implements OnInit{\n  constructor(private quizService: QuizService, private route: ActivatedRoute){}\n  quizID: string = \"\"\n  quiz: Quiz = new Quiz;\n  quizType = \"Text\";\n  quizTime = 10;\n  ngOnInit(){\n    this.route.params.subscribe(params =>{\n      this.quizID = params['id'];\n    });\n    this.quizService.get_quiz_byID(this.quizID).subscribe((res) =>{\n      this.quiz = res;\n      this.quizType = \"Text\";\n      this.quizType = this.quiz.Type;\n      this.quizTime = this.quiz.Timer;\n    });\n    console.log(\"Quiz time: \" + this.quiz.Timer);\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./master-answer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MasterAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewAnswer.html":{"url":"classes/NewAnswer.html","title":"class - NewAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                NewAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                QuestionID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:16\n                        \n                    \n\n            \n                \n                    The value for the answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:20\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:8\n                        \n                    \n\n            \n                \n                    Question to which answer belongs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"text\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:12\n                        \n                    \n\n            \n                \n                    Type of question\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestion.html":{"url":"classes/NewQuestion.html","title":"class - NewQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                New Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:18\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:13\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewQuestionAnswer.html":{"url":"classes/NewQuestionAnswer.html","title":"class - NewQuestionAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewQuestionAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/qna.ts\n        \n\n\n            \n                Description\n            \n            \n                QNA interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:18\n                        \n                    \n\n            \n                \n                    The answer for this question\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:13\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/qna.ts:8\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestionAnswer{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * The answer for this question\n    */\n    Answer: string = \"\";\n\n    Correct: boolean = false;\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Question interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Question\n                            \n                            \n                                QuizID\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:48\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:43\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:38\n                        \n                    \n\n            \n                \n                    The question itself\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuizID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:28\n                        \n                    \n\n            \n                \n                    QuizID to which the question is associated with\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:33\n                        \n                    \n\n            \n                \n                    The type of question, multiplechoice, text answer etc\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Default angular directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_many_questions\n                            \n                            \n                                create_question\n                            \n                            \n                                delete_question\n                            \n                            \n                                get_quiz_questions\n                            \n                            \n                                getAllQuestions\n                            \n                            \n                                update_question\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_many_questions\n                        \n                    \n                \n            \n            \n                \ncreate_many_questions(questions: NewQuestion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:48\n                \n            \n\n\n            \n                \n                    Create many questions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questions\n                                    \n                                            NewQuestion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_question\n                        \n                    \n                \n            \n            \n                \ncreate_question(question: NewQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a question for quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_question\n                        \n                    \n                \n            \n            \n                \ndelete_question(question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:100\n                \n            \n\n\n            \n                \n                    Removes question from database and associated answers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_questions\n                        \n                    \n                \n            \n            \n                \nget_quiz_questions(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:74\n                \n            \n\n\n            \n                \n                    Get all questions belonging to a specifc quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuestions\n                        \n                    \n                \n            \n            \n                \ngetAllQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:63\n                \n            \n\n\n            \n                \n                    Gets all questions for all quizzes\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_question\n                        \n                    \n                \n            \n            \n                \nupdate_question(id: String, question: UpdateQuestion)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:86\n                \n            \n\n\n            \n                \n                    Updates question values\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    question\n                                    \n                                                UpdateQuestion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Question\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/question\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/question.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for question calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { NewQuestion, Question, UpdateQuestion } from '../models/question';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Default angular directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  /**\n   * Constructor to inject http client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Base url for question calls\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/question\";\n\n  /**\n   * Creates a question for quiz\n   * @param question \n   * @returns Question\n   */\n  create_question(question: NewQuestion): Observable {\n    let nquestion = JSON.stringify(question);\n    return this.http.post(this.base_url + \"/createQuestion\", nquestion, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Create many questions\n   * @param questions \n   * @returns Question[]\n   */\n  create_many_questions(questions: NewQuestion[]) : Observable{\n    let nquestions = JSON.stringify(questions);\n    return this.http.post(this.base_url+\"/createManyQuestions\",nquestions,{\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Gets all questions for all quizzes\n   * @returns Question[]\n   */\n  getAllQuestions() : Observable{\n    return this.http.get(this.base_url+\"/getAllQuestions\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get all questions belonging to a specifc quiz\n   * @param id \n   * @returns Question[]\n   */\n  get_quiz_questions(id: String) : Observable{\n    return this.http.get(this.base_url+\"/getQuestions/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Updates question values\n   * @param id \n   * @param question \n   * @returns Question\n   */\n  update_question(id:String, question:UpdateQuestion) : Observable{\n    let nquestion = JSON.stringify(question);\n    return this.http.patch(this.base_url+\"/updateQuestion/\"+id, nquestion,{\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  /**\n   * Removes question from database and associated answers.\n   * @param question \n   * @returns \n   */\n  delete_question(question: Question) : Observable{\n    return this.http.delete(this.base_url+\"/deleteQuestion/\"+question._id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n            \n                Description\n            \n            \n                Quiz interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Average\n                            \n                            \n                                Category\n                            \n                            \n                                CreatorID\n                            \n                            \n                                Description\n                            \n                            \n                                Name\n                            \n                            \n                                Ordered\n                            \n                            \n                                Plays\n                            \n                            \n                                Timer\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:90\n                        \n                    \n\n            \n                \n                    Version\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:86\n                        \n                    \n\n            \n                \n                    Id from database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Average\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:73\n                        \n                    \n\n            \n                \n                    Average score in the quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:61\n                        \n                    \n\n            \n                \n                    Quiz Category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatorID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:57\n                        \n                    \n\n            \n                \n                    Quiz Creator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:53\n                        \n                    \n\n            \n                \n                    Description of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:49\n                        \n                    \n\n            \n                \n                    Name of quiz\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Ordered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:77\n                        \n                    \n\n            \n                \n                    Ordered quiz or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:69\n                        \n                    \n\n            \n                \n                    how many times quiz has been played\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:81\n                        \n                    \n\n            \n                \n                    Time allowance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/quiz.ts:65\n                        \n                    \n\n            \n                \n                    Type of quiz e.g. text, multiple choice\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateQuiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n}\n/**\n * Quiz interface\n */\nexport class Quiz{\n    /**\n     * Name of quiz\n     */\n    Name: string = \"\";\n    /**\n     * Description of quiz\n     */\n    Description: string = \"\";\n    /**\n     * Quiz Creator\n     */\n    CreatorID: string = \"\";\n    /**\n     * Quiz Category\n     */\n    Category: string = \"\";\n    /**\n     * Type of quiz e.g. text, multiple choice\n     */\n    Type: string = \"\";\n    /**\n     * how many times quiz has been played\n     */\n    Plays: number = 0;\n    /**\n     * Average score in the quiz\n     */\n    Average: number = 0;\n    /**\n     * Ordered quiz or not\n     */\n    Ordered: boolean = true;\n    /**\n     * Time allowance\n     */\n    Timer: number = 60;\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizAnswerComponent.html":{"url":"components/QuizAnswerComponent.html","title":"component - QuizAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-answer/quiz-answer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-answer\n            \n\n            \n                styleUrls\n                ./quiz-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                answer_id\n                            \n                            \n                                answers\n                            \n                            \n                                boolTimesUp\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                questions\n                            \n                            \n                                quiz_id\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeLeftDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeLeft\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, answerService: AnswerService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeLeft\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:104\n                \n            \n\n\n            \n                \n                    Function to check answers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:53\n                \n            \n\n\n            \n                \n                    Run these functions when the component is initialised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:96\n                \n            \n\n\n            \n                \n                    Function to stop timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boolTimesUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:30\n                        \n                    \n\n            \n                \n                    Timer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:38\n                        \n                    \n\n            \n                \n                    Score\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:34\n                        \n                    \n\n            \n                \n                    Display how much time is left\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-quiz-answer',\n  templateUrl: './quiz-answer.component.html',\n  styleUrls: ['./quiz-answer.component.scss']\n})\n\nexport class QuizAnswerComponent implements OnInit ,OnDestroy{\n  @Input() timeLeft = 30;\n\n  quiz_id: any;\n  answer_id: any;\n\n  private sub: any;\n\n\n  /**\n   * Timer\n   */\n  countdownTimer: any;\n  /**\n   * Display how much time is left\n   */\n  timeLeftDisplay: any;\n  /**\n   * Score\n   */\n  scoreDisplay: any;\n\n  boolTimesUp: boolean = false;\n\n  answer_form!: FormGroup;\n\n  constructor(private questionService: QuestionService, private answerService: AnswerService, private route: ActivatedRoute) { }\n\n  questions: Question[] = [];\n\n  answers: Answer[] = [];\n\n  /**\n   * Run these functions when the component is initialised\n  */\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.quiz_id = params['id'];\n\n      this.questionService.get_quiz_questions(this.quiz_id).subscribe((value) => {\n        this.questions = value;\n\n        let answer: any = {}\n\n        this.questions.forEach(element => {\n          answer[element._id] = new FormControl('')\n          this.answerService.get_question_answer(element._id).subscribe((result: Answer[]) => {\n            result.forEach(element => {\n              this.answers.push(element)\n            });\n          })\n\n        });\n\n        this.answer_form = new FormGroup(answer);\n      });\n      // Update the timer every second\n      this.countdownTimer = setInterval(() => {\n        this.timeLeft--;\n        // Stop the timer when time is up\n        if (this.timeLeft === 0) {\n          clearInterval(this.countdownTimer);\n          this.boolTimesUp = true;\n          alert(\"Time is Up!\");\n          this.checkAnswers();\n        }\n      }, 1000);\n    });\n\n  }\n\n  ngOnDestroy(){\n    this.stopTimer();\n  }\n\n  /**\n   * Function to stop timer\n   */\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n\n  /**\n   * Function to check answers\n   */\n  checkAnswers() {\n    this.stopTimer();\n\n    var numCorrect = 0;\n\n    this.questions.forEach(element => {\n      let answer = this.answer_form.get(element._id)?.value;\n      this.answers.forEach(element => {\n        if (element._id === answer && element.Correct) {\n          numCorrect++;\n        }\n\n      });\n\n    });\n\n    this.timeLeftDisplay = \"Time Left: \" + this.timeLeft + \"s\";\n    this.scoreDisplay = \"You scored \" + numCorrect + \" out of \" + this.questions.length;\n  }\n\n}\n\n    \n\n    \n        \n    Quiz Page\n    \n        Quiz Program\n         {{timeLeft}} \n        \n            \n                \n                    Question {{idx+1}}:\n                    {{question.Question}}\n                    \n                        \n                            \n                                \n                                    \n                                    {{answer.Answer}}\n                                \n                            \n                        \n                    \n                \n                Submit\n            \n            {{timeLeftDisplay}}\n            {{scoreDisplay}}\n        \n    \n    \n\n    \n                \n                    ./quiz-answer.component.scss\n                \n                .quiz-container {\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-size: cover;\n    margin: 0 auto;\n    text-align: center;\n    height: 100vh;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\ninput[type=\"text\"] {\n    margin-bottom: 10px;\n}\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            Quiz Program         {{timeLeft}}                                                         Question {{idx+1}}:                    {{question.Question}}                                                                                                                                                                                {{answer.Answer}}                                                                                                                                        Submit                        {{timeLeftDisplay}}            {{scoreDisplay}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizCreateComponent.html":{"url":"components/QuizCreateComponent.html","title":"component - QuizCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-create/quiz-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-create\n            \n\n            \n                styleUrls\n                ./quiz-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                createQuizForm\n                            \n                            \n                                questionForm\n                            \n                            \n                                questions\n                            \n                            \n                                quiz\n                            \n                            \n                                quizSaved\n                            \n                            \n                                tempQuiz\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuestion\n                            \n                            \n                                createQuiz\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                publishQuiz\n                            \n                            \n                                removeQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, questionService: QuestionService, answerService: AnswerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-create/quiz-create.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerService\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishQuiz\n                        \n                    \n                \n            \n            \n                \npublishQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeQuestion\n                        \n                    \n                \n            \n            \n                \nremoveQuestion(question: NewQuestionAnswer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-create/quiz-create.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                NewQuestionAnswer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    quizName: new FormControl('',[\n      Validators.required,\n    ]),\n    quizDescription: new FormControl('', [\n      Validators.required\n    ]),\n    quizCategory: new FormControl('', [\n      Validators.required\n    ]),\n    quizType: new FormControl('',[\n      Validators.required\n    ]),\n    quizTimer: new FormControl('', [\n      Validators.required\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ]),\n    truth: new FormControl('false',[\n      Validators.required,\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NewQuestionAnswer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : new Quiz\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempQuiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateQuiz\n\n                    \n                \n                \n                    \n                        Default value : new CreateQuiz\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-create/quiz-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, getModuleFactory } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateQuiz } from '../models/quiz';\nimport { User } from '../models/user';\nimport { Quiz } from '../models/quiz';\nimport { QuizService } from '../services/quiz.service'\nimport { Category } from '../models/categories';\nimport { NewQuestion, Question } from '../models/question';\nimport { NewQuestionAnswer } from '../models/qna';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { Answer, NewAnswer } from '../models/answer';\n@Component({\n  selector: 'app-quiz-create',\n  templateUrl: './quiz-create.component.html',\n  styleUrls: ['./quiz-create.component.scss']\n})\nexport class QuizCreateComponent implements OnInit {\n  constructor(private quizService: QuizService, private questionService: QuestionService, private answerService: AnswerService){}\n  user: User = new User;\n  quiz: Quiz = new Quiz;\n  quizSaved: boolean = false;\n\n  tempQuiz: CreateQuiz = new CreateQuiz;\n  categories: Category[] = [];\n  questions: NewQuestionAnswer[] = [];\n\n  ngOnInit(){\n    let use = sessionStorage.getItem(\"User\");\n    this.user = JSON.parse(use!);\n    this.quizService.get_quiz_categories().subscribe((res)=>{\n      this.categories = res;\n    });\n  }\n\n  createQuizForm = new FormGroup({\n    quizName: new FormControl('',[\n      Validators.required,\n    ]),\n    quizDescription: new FormControl('', [\n      Validators.required\n    ]),\n    quizCategory: new FormControl('', [\n      Validators.required\n    ]),\n    quizType: new FormControl('',[\n      Validators.required\n    ]),\n    quizTimer: new FormControl('', [\n      Validators.required\n    ])\n  });\n\n  questionForm = new FormGroup({\n    question: new FormControl('',[\n      Validators.required,\n    ]),\n    answer: new FormControl('', [\n      Validators.required,\n    ]),\n    truth: new FormControl('false',[\n      Validators.required,\n    ]),\n  });\n//The method creates a new quiz object based on the user input from a form and saves it to a temporary variable called \"tempQuiz\"\n  createQuiz(){\n    let qName = this.createQuizForm.get(\"quizName\")?.value!;\n    let qDescription = this.createQuizForm.get(\"quizDescription\")?.value!;\n    let qCategory = this.createQuizForm.get(\"quizCategory\")?.value!;\n    let qType = this.createQuizForm.get(\"quizType\")?.value!;\n    let qTimer = Number(this.createQuizForm.get(\"quizTimer\")?.value);\n    if(!this.createQuizForm.valid){\n      alert(\"Please complete all the fields!\");\n    }else{\n      let newQuiz: CreateQuiz = {\n        Name: qName,\n        Description: qDescription,\n        CreatorID: this.user._id,\n        Category: qCategory,\n        Type: qType,\n        Plays: 0,\n        Average: 0,\n        Ordered: true,\n        Timer: qTimer,\n      }\n      this.tempQuiz = newQuiz;\n      this.quizSaved = !this.quizSaved;\n      alert(\"Quiz saved, please continue to add questions!\");\n    }\n  }\n//method creates a new question object based on the user input from a form and pushes it to an array called \"questions\".\n  createQuestion(){\n    if(this.questionForm.valid){\n      let question = this.questionForm.get(\"question\")?.value;\n      let answer = this.questionForm.get(\"answer\")?.value;\n      let correct = this.questionForm.get(\"truth\")?.value;\n      let qna: NewQuestionAnswer = {\n        QuizID: \"ReplaceID\",\n        Question: question!,\n        Answer: answer!,\n        Correct: JSON.parse(correct!)\n      }\n      console.log(qna);\n      this.questions.push(qna);\n    }else{\n      alert(\"Invalid question and answer, please fill in all the fields!\");\n    }\n  }\n//This function is called when the user clicks the \"Remove\" button next to a question.\n  removeQuestion(question: NewQuestionAnswer){\n    let index = -1;\n    for(let i = 0; i {\n        if(res['CreatorID']){\n          this.quiz = res;\n        }\n        console.log(JSON.stringify(this.quiz));\n\n        let newQuestions: NewQuestion[] = [];\n        for(let i=0; i {\n          let newQ: Question[] = res;\n          let manyAns: NewAnswer[] = [];\n          for(let i = 0; i {\n            alert(\"Quiz creation completed!\");\n          });\n        });\n      });\n    }\n  }\n}\n    \n\n    \n        \n\n\n\n\n  \n    \n      \n        \n          Create a Quiz\n        \n        \n          Customize your quiz below!\n        \n      \n      \n        \n          \n            \n              \n                \n                Create Quiz\n              \n            \n            \n              \n                \n                Questions\n              \n            \n            \n              \n                \n                Options\n              \n            \n            \n                    \n                        \n                        Styles\n                    \n                 -->\n            \n              \n                \n                Tags\n              \n            \n            \n              \n                \n                Save & Finish\n              \n            \n          \n        \n        \n        \n          \n          \n            \n              Create Quiz\n              \n                Quiz Name\n                \n                  \n                \n              \n              \n                Description\n                \n                  \n                \n              \n              \n                Category\n                \n                  \n                    \n                      {{category.Name}}\n                    \n                  \n                \n              \n              \n                Quiz Type\n                \n                  \n                    \n                      Text-MCQ\n                    \n                  \n                \n              \n              \n                Quiz Timer (seconds)\n                \n                  \n                    \n                      ---\n                      60\n                      120\n                      180\n                      240\n                      300\n                      360\n                      420\n                      480\n                      540\n                      600\n                      660\n                      720\n                      780\n                      840\n                      900\n                      960\n                      1020\n                      1080\n                      1140\n                      1200\n                      1260\n                      1320\n                      1380\n                      1440\n                      1500\n                      1560\n                      1620\n                      1680\n                      1740\n                      180\n                    \n                  \n                \n              \n              \n                \n                  \n                    \n                    Save Progress\n                  \n                \n              \n            \n          \n\n          \n          \n            \n              \n                \n                  Add Question Data\n                  \n                    Question\n                    \n                      \n                    \n                  \n                  \n                    Answer\n                    \n                      \n                    \n                  \n                  \n                    Is Answer Correct?\n                    \n                      \n                        \n                          true\n                          false\n                        \n                      \n                    \n                  \n                  \n                    \n                      Questions Added\n                      Add Question\n                    \n                  \n                \n              \n            \n            {{this.questionForm.valid}}\n            \n              \n                \n                  \n                      Questions\n                       \n                  \n                      \n                          {{question.Question}}: {{question.Answer}}\n                      \n                      \n                          \n                              \n                          \n                      \n                  \n              \n              \n            \n          \n\n          \n          \n            \n              Quiz Options\n              \n                Accept last word in answers\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Accept single character answers\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Filter default words from answers (a, an, and, the, and '&')\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Wrong Answer ends the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Hide hint text prior to starting the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n                Do not display correct answers at the end of the quiz\n                \n                  \n                    \n                    Yes\n                  \n                \n              \n              \n              \n                Answer Order\n                \n                  \n                  Randomize question order\n                \n                \n                  \n                  Force answers in order\n                \n              \n              \n                \n                  \n                    \n                      \n                    \n                    Save Options\n                  \n                  \n                    You must click 'Save Options' to save your changes.\n                  \n                \n              \n            \n          \n\n\n          \n                    \n                        Styles\n                        \n                    \n                 -->\n\n          \n          \n            \n              Tags\n              \n                \n                  Choose Tags:\n                  \n                  \n                    Tag 1\n                    Tag 2\n                    Tag 3\n                    Tag 4\n                    Tag 5\n                    Tag 6\n                    Tag 7\n                    Tag 8\n                    Tag 9\n                    \n                  \n                  \n                  Add Your Own Tag:\n                  \n                    \n                      \n                    \n                    \n                      Add Tag\n                    \n                  \n                \n                \n                  Selected Tags:\n                  \n                    \n                  \n                  \n                    \n                      \n                        \n                          \n                        \n                        Save Tags\n                      \n                    \n                    \n                      \n                        \n                          \n                        \n                        Cancel\n                      \n                    \n                  \n                  You must click 'Save Changes' to save your changes\n                \n              \n            \n          \n\n\n          \n          \n            \n              \n                \n                  Ready to show your quiz to the world, and beyond?\n                  Once published, this quiz will be viewable on your 'Published\n                    Quizzes' page, among other places. Don't forget to share your new quiz with your friends!\n                  \n                    Publish Quiz\n                  \n                  OR\n                  \n                    Publish Quiz\n                  \n                \n                \n                  Public\n                  Your quiz will be searchable by other players. We may also feature and publish your quiz.\n                  NOTE: If the quiz is published on the front page, you will lose the ability to\n                    edit this quiz. We also reserve the right to add, remove, or alter quizzes selected for featuring.\n                  \n                  \n                  Private\n                  A link to your quiz will only show up on your private profile. You can still use the link to play\n                    your quiz, send to friends, and see results. Quizzes marked as private will not be published by us.\n                  \n                \n              \n            \n          \n        \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-create.component.scss\n                \n                .main {\n  background-image: url('../../assets/images/school-supplies-7069762.jpg') !important;\n  background-color: lightblue;\n  background-blend-mode: multiply;\n  background-size: cover;\n  background-position: center center;\n  min-height: 100vh;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 400px;\n}\n\n.tabcontent {\n  display: none;\n  width: fit-content;\n  justify-content: center;\n  align-items: center;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.box {\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(5px);\n}\n\n.submit-question{\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.panel{\n  background-color: white;\n  margin-left: 2%;\n  margin-right: 2%;\n}\n\n.panel-block{\n  justify-content: space-between;\n}\n\n/* from previous raw css, still need to reintegrate */\n/*\n  .back {\n    display: grid;\n    background-image: url(\"./src/app/school-supplies-7069762.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .class {\n  background-color: #f7f7f7;\n  padding: 50px;\n  }\n  \n  .title {\n  font-size: 2.5rem;\n  margin-top: 0;\n  margin-bottom: 20px;\n  }\n  \n  .subtitle {\n  font-size: 1.5rem;\n  margin-top: 0;\n  margin-bottom: 20px;\n  }\n  \n  .box {\n  border: 1px solid #ccc;\n  background-color: #fff;\n  padding: 20px;\n  }\n  \n  .field {\n  margin-bottom: 20px;\n  }\n  \n  .label {\n  font-size: 1rem;\n  font-weight: bold;\n  margin-bottom: 5px;\n  }\n  \n  .input {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 5px;\n  }\n  \n  .select {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  margin-bottom: 10px;\n  }\n  \n  .select::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n  border-style: solid;\n  border-width: 5px 5px 0 5px;\n  border-color: #666 transparent transparent transparent;\n  }\n  \n  .select select {\n  font-size: 1rem;\n  padding: 5px 30px 5px 10px;\n  appearance: none;\n  background-color: transparent;\n  border: none;\n  border-radius: 0;\n  width: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  }\n  \n  .tabs {\n  margin-bottom: 20px;\n  }\n  \n  .tabs li {\n  display: inline-block;\n  }\n  \n  .tabs a {\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 10px 20px;\n  color: #333;\n  text-decoration: none;\n  }\n  \n  .tabs .is-active a {\n  background-color: #333;\n  color: #fff;\n  }\n  \n  .tabs .is-active a::after {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 10px 10px 10px;\n  border-color: transparent transparent #333 transparent;\n  }\n  \n  .tabs .box {\n  margin-top: 20px;\n  }\n  */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Create a Quiz                          Customize your quiz below!                                                                                                Create Quiz                                                                                    Questions                                                                                    Options                                                                                                          Styles                                     -->                                                          Tags                                                                                    Save & Finish                                                                                                          Create Quiz                              Quiz Name                                                                                              Description                                                                                              Category                                                                            {{category.Name}}                                                                                                  Quiz Type                                                                            Text-MCQ                                                                                                  Quiz Timer (seconds)                                                                            ---                      60                      120                      180                      240                      300                      360                      420                      480                      540                      600                      660                      720                      780                      840                      900                      960                      1020                      1080                      1140                      1200                      1260                      1320                      1380                      1440                      1500                      1560                      1620                      1680                      1740                      180                                                                                                                                                            Save Progress                                                                                                                                                      Add Question Data                                      Question                                                                                                                      Answer                                                                                                                      Is Answer Correct?                                                                                            true                          false                                                                                                                                                Questions Added                      Add Question                                                                                            {{this.questionForm.valid}}                                                                                  Questions                                                                                         {{question.Question}}: {{question.Answer}}                                                                                                                                                                                                                                                                      Quiz Options                              Accept last word in answers                                                                          Yes                                                                              Accept single character answers                                                                          Yes                                                                              Filter default words from answers (a, an, and, the, and \\'&\\')                                                                          Yes                                                                              Wrong Answer ends the quiz                                                                          Yes                                                                              Hide hint text prior to starting the quiz                                                                          Yes                                                                              Do not display correct answers at the end of the quiz                                                                          Yes                                                                                            Answer Order                                                    Randomize question order                                                                    Force answers in order                                                                                                                                                                Save Options                                                        You must click \\'Save Options\\' to save your changes.                                                                                                                            Styles                                                             -->                                              Tags                                                Choose Tags:                                                        Tag 1                    Tag 2                    Tag 3                    Tag 4                    Tag 5                    Tag 6                    Tag 7                    Tag 8                    Tag 9                                                                          Add Your Own Tag:                                                                                                                          Add Tag                                                                                        Selected Tags:                                                                                                                                                                                                                      Save Tags                                                                                                                                                                                      Cancel                                                                              You must click \\'Save Changes\\' to save your changes                                                                                                                                    Ready to show your quiz to the world, and beyond?                  Once published, this quiz will be viewable on your \\'Published                    Quizzes\\' page, among other places. Don\\'t forget to share your new quiz with your friends!                                      Publish Quiz                                    OR                                      Publish Quiz                                                                    Public                  Your quiz will be searchable by other players. We may also feature and publish your quiz.                  NOTE: If the quiz is published on the front page, you will lose the ability to                    edit this quiz. We also reserve the right to add, remove, or alter quizzes selected for featuring.                                                      Private                  A link to your quiz will only show up on your private profile. You can still use the link to play                    your quiz, send to friends, and see results. Quizzes marked as private will not be published by us.                                                                                                "},"components/QuizInfoComponent.html":{"url":"components/QuizInfoComponent.html","title":"component - QuizInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-info/quiz-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-info\n            \n\n            \n                styleUrls\n                ./quiz-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Category\n                            \n                            \n                                Created_By\n                            \n                            \n                                Description\n                            \n                            \n                                id\n                            \n                            \n                                Name\n                            \n                            \n                                Rating\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                timeValue\n                            \n                            \n                                Total_Played\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-info/quiz-info.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-info/quiz-info.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Created_By\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Total_Played\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-info/quiz-info.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\n\n@Component({\n  selector: 'app-quiz-info',\n  templateUrl: './quiz-info.component.html',\n  styleUrls: ['./quiz-info.component.scss']\n})\n//Overall, this component is responsible for fetching and displaying information about a specific quiz based on the provided\nexport class QuizInfoComponent implements OnInit, OnDestroy {\n  id: any;\n  private sub: any;\n  constructor(private route: ActivatedRoute, private quizService: QuizService){}\n\n  Name: any;\n\n  Description: any;\n\n  Rating: any;\n\n  Category: any;\n\n  Total_Played: any;\n\n  Created_By: any;\n\n  timeValue = 0;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params =>{\n      this.id = params['id'];\n\n      this.quizService.get_quiz_byID(this.id).subscribe((value : Quiz) =>{\n        this.Name = value.Name;\n        this.Description = value.Description;\n        this.Rating = 5;\n        this.Category = value.Category;\n        this.Total_Played = value.Plays;\n        this.Created_By = value.CreatorID;\n        this.timeValue = value.Timer;\n      })\n    });\n  }\n\n  ngOnDestroy(){\n      this.sub.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Back\n      \n        \n          \n            Description\n            {{Description}}\n          \n          \n            Times Played\n            {{Total_Played}}\n          \n        \n        \n          \n            Name\n            {{Name}}\n          \n          \n            Created By\n            {{Created_By}}\n          \n        \n        \n          \n            Category\n            {{Category}}\n          \n          \n            Rating\n            {{Rating}}\n          \n        \n      \n    \n  \n  Start Quiz\n\n    \n\n    \n                \n                    ./quiz-info.component.scss\n                \n                .Full {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/dark-clouds-sunset-sun.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.tileMain {\n    align-items: center;\n    height: 100%;\n    width: 100%;\n\n}\n\n.tilesub {\n    margin: 3.2%;\n    transition: transform .2s;\n}\n\n.title {\n    font-size: 48px;\n    width: 400px;\n    height: 200px;\n    color: #000;\n    font-weight: 10000;\n}\n\n.buttonBack {\n    font-size: 20px;\n    color: #fff;\n    font-weight: 1000;\n    transition: transform .2s;\n    background-color: gray;\n}\n\n.tilesub:hover {\n    transform: scale(1.2);\n}\n\n.subTiles {\n    justify-content: center;\n    align-items: center;\n}\n\n\n\n.button {\n    background-color: cadetblue;\n    color: #fff;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 50px;\n    font-weight: bold;\n    transition: transform .2s;\n}\n\n.button:hover {\n    background-color: green;\n    transform: scale(1.1);\n}\n\n.buttonBack:hover {\n    transform: scale(1.1);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                                    Description            {{Description}}                                Times Played            {{Total_Played}}                                                Name            {{Name}}                                Created By            {{Created_By}}                                                Category            {{Category}}                                Rating            {{Rating}}                                Start Quiz'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizSearchComponent.html":{"url":"components/QuizSearchComponent.html","title":"component - QuizSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-search/quiz-search.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-search\n            \n\n            \n                styleUrls\n                ./quiz-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                quizzes\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBookmark\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, quizService: QuizService, bookmarkService: BookmarkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz-search/quiz-search.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookmarkService\n                                                  \n                                                        \n                                                                        BookmarkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBookmark\n                        \n                    \n                \n            \n            \n                \ncreateBookmark(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-search/quiz-search.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionStorage.getItem(\"User\")\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-search/quiz-search.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { Quiz } from '../models/quiz';\nimport { User } from '../models/user';\nimport { AddBookmark } from '../models/bookmarks';\nimport { BookmarkService } from '../services/bookmark.service';\n\n@Component({\n  selector: 'app-quiz-search',\n  templateUrl: './quiz-search.component.html',\n  styleUrls: ['./quiz-search.component.scss']\n})\nexport class QuizSearchComponent implements OnInit{\n\n  constructor(private route: ActivatedRoute, private quizService: QuizService, private bookmarkService: BookmarkService){}\n\n  id = \"\";\n  quizzes: Quiz[]=[];\n\n  user = sessionStorage.getItem(\"User\");\n\n  ngOnInit(): void {\n      this.route.params.subscribe(params => {\n        this.id = params['id'];\n        this.quizService.search_quiz(this.id).subscribe(res => {\n          this.quizzes = res;\n          console.log(this.quizzes);\n        });\n      });\n  }\n\n  createBookmark(quiz: Quiz){\n    let userOBJ : User;\n    if(this.user != null){\n      userOBJ = JSON.parse(this.user);\n      let bookmark: AddBookmark = {\n        QuizID: quiz._id,\n        UserID: userOBJ._id\n      };\n      this.bookmarkService.add_bookmark(bookmark).subscribe((res) =>{\n        if(res['QuizID'] && res['UserID']){\n          alert(\"Bookmark added!\");\n        }else{\n          alert(\"Bookmark failed to add!\");\n        }\n      });\n    }else{\n      alert(\"You need to be logged in to do that!\");\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            {{quiz.Name}}\n            {{quiz.CreatorID}}\n          \n        \n\n        {{quiz.Description}}\n        \n          Bookmark\n          See More\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./quiz-search.component.scss\n                \n                .cards {\n  margin-left: 10%;\n  margin-right: 10%;\n}\n\n.card{\n  background-color: rgba(255, 255, 255, .15);\n  backdrop-filter: blur(5px);\n  margin-top: 2%;\n  display: flex;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{quiz.Name}}            {{quiz.CreatorID}}                          {{quiz.Description}}                  Bookmark          See More                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_quiz\n                            \n                            \n                                delete_quiz\n                            \n                            \n                                get_category_byID\n                            \n                            \n                                get_quiz_byID\n                            \n                            \n                                get_quiz_categories\n                            \n                            \n                                getAllQuiz\n                            \n                            \n                                search_quiz\n                            \n                            \n                                update_quiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_quiz\n                        \n                    \n                \n            \n            \n                \ncreate_quiz(newQuiz: CreateQuiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:32\n                \n            \n\n\n            \n                \n                    Creates a new quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newQuiz\n                                    \n                                                CreateQuiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_quiz\n                        \n                    \n                \n            \n            \n                \ndelete_quiz(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:76\n                \n            \n\n\n            \n                \n                    Remove a quiz from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_category_byID\n                        \n                    \n                \n            \n            \n                \nget_category_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:108\n                \n            \n\n\n            \n                \n                    Get the Category object given it's ID;\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_byID\n                        \n                    \n                \n            \n            \n                \nget_quiz_byID(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:97\n                \n            \n\n\n            \n                \n                    Get Quiz by QuizID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get_quiz_categories\n                        \n                    \n                \n            \n            \n                \nget_quiz_categories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:86\n                \n            \n\n\n            \n                \n                    Returns all Quiz Categories available\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuiz\n                        \n                    \n                \n            \n            \n                \ngetAllQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:48\n                \n            \n\n\n            \n                \n                    Get all Quizzes from Quiz database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search_quiz\n                        \n                    \n                \n            \n            \n                \nsearch_quiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_quiz\n                        \n                    \n                \n            \n            \n                \nupdate_quiz(update: Quiz, id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:60\n                \n            \n\n\n            \n                \n                    Update the values of a particular quiz\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    update\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Quiz\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/quiz\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/quiz.service.ts:25\n                        \n                    \n\n            \n                \n                    Base url for quiz calls\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Category } from '../models/categories';\nimport { CreateQuiz, Quiz } from '../models/quiz';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n * Base url for quiz calls\n */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/quiz\";\n\n  /**\n   * Creates a new quiz\n   * @param newQuiz\n   * @returns Quiz\n   */\n  create_quiz(newQuiz: CreateQuiz): Observable {\n    let nQuiz = JSON.stringify(newQuiz);\n    return this.http.post(this.base_url + \"/createQuiz\", nQuiz,\n      {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      }).pipe(\n        catchError(handleError)\n      );\n  }\n\n  /**\n   * Get all Quizzes from Quiz database\n   * @returns Quiz[]\n   */\n  getAllQuiz(): Observable {\n    return this.http.get(this.base_url + \"/getAllQuizzes\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Update the values of a particular quiz\n   * @param update\n   * @param id\n   * @returns Quiz\n   */\n  update_quiz(update : Quiz, id: String) : Observable{\n    let nupdate = JSON.stringify(update);\n    return this.http.patch(this.base_url+\"/updateQuiz/\"+ id,nupdate, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Remove a quiz from the database\n   * @param id\n   * @returns any\n   */\n  delete_quiz(id: String): Observable {\n    return this.http.delete(this.base_url + \"/deleteQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Returns all Quiz Categories available\n   * @returns Category[]\n   */\n  get_quiz_categories(): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getAllCategories\").pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get Quiz by QuizID\n   * @param id\n   * @returns Quiz\n   */\n  get_quiz_byID(id: string) : Observable{\n    return this.http.get(this.base_url+\"/getQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Get the Category object given it's ID;\n   * @param id\n   * @returns Category\n   */\n  get_category_byID(id: string): Observable{\n    return this.http.get(\"https://clumsy-apron-ray.cyclic.app/api/category/getCategory/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n\n  search_quiz(id: string): Observable{\n    return this.http.get(this.base_url+\"/searchQuiz/\"+id).pipe(\n      catchError(handleError)\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default @Component decorator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registration_form\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n                \n                    \n                            Registration Component Contructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that will register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registration_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:27\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:85\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:91\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:97\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:103\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:109\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:115\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\nimport { Router } from '@angular/router';\n/**\n * Default @Component decorator\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\n\nexport class RegistrationComponent {\n  /**\n   * Registration Component Contructor to inject user Service and router\n   * @param userService \n   * @param router \n   */\n  constructor(public userService: UserService, public router: Router) { }\n\n  /**\n   * Create a FormGroup and setup form controls for each field along with Validators\n  */\n  registration_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Function that will register a new user\n  */\n  public registerUser() {\n    let user: CreateUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n      Plays: 0\n    }\n    // First check whether email is taken or not!\n    let result = { email_status: true };\n    this.userService.check_email_exists(user.Email).subscribe((res) => {\n      console.log(res);\n      result = res;\n      if (result['email_status'] == false) {\n        /**\n         * Calls userService to perform http request\n         */\n        this.userService.create_user(user).subscribe(\n          (response: User) => {\n            this.router.navigate(['/login']);\n          });\n        this.registration_form.reset();\n      }else{\n        alert(\"Email already exists, try another email!\");\n      }\n    });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.registration_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.registration_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.registration_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.registration_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.registration_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.registration_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Quiz Platform\n            \n            \n              Worlds Best!\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  First Name is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Surname is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Username is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              \n                \n                  Email is required.\n                \n                \n                  Invalid Email\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Password too short.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Passwords don't match.\n                \n              \n            \n            \n              \n                \n                  Register\n                \n              \n            \n            \n              \n                Already have an account? Login\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .back {\n    display: grid;\n\n    /* The image used */\n    // background-image: url(\"../../assets/pexels-ryutaro-tsukata-5220092.jpg\");\n    background-image: url(\"../../assets/images/pexels-brett-sayles-5129486.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.column {\n    padding: 0;\n}\n\n.register {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Quiz Platform                                      Worlds Best!                                                                                                                                                                                                                              First Name is required.                                                                                                                                                                                                    Surname is required.                                                                                                                                                                                                    Username is required.                                                                                                                                                                                                                                                      Email is required.                                                  Invalid Email                                                                                                                                                                                                    Password is required.                                                  Password too short.                                                                                                                                                                                                    Password is required.                                                  Passwords don\\'t match.                                                                                                      Register                                                                                    Already have an account? Login                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookmarksComponent', 'selector': 'app-bookmarks'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MasterAnswerComponent', 'selector': 'app-master-answer'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizInfoComponent', 'selector': 'app-quiz-info'},{'name': 'QuizSearchComponent', 'selector': 'app-quiz-search'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnswer.html":{"url":"classes/UpdateAnswer.html","title":"class - UpdateAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer.ts\n        \n\n\n            \n                Description\n            \n            \n                UpdateAnswer Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Answer\n                            \n                            \n                                Correct\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:61\n                        \n                    \n\n            \n                \n                    The value for the Updated answer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/models/answer.ts:65\n                        \n                    \n\n            \n                \n                    Whether it is a correct or incorrect answer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewAnswer{\n    /**\n     * Question to which answer belongs\n     */\n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n\n\n/**\n * Answer Interface\n */\nexport class Answer{\n    /**\n     * Question to which answer belongs \n     */    \n    QuestionID: string = \"\";\n    /**\n     * Type of question\n     */\n    Type: string = \"text\";\n    /**\n     * The value for the answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n    /**\n     * id of Answer from database\n     */\n    _id: string = \"\";\n    /**\n     * Version\n     */\n    __v: number = 0;\n}\n\n/**\n * UpdateAnswer Interface\n */\nexport class UpdateAnswer{\n    /**\n     * The value for the Updated answer\n     */\n    Answer: string = \"\";\n    /**\n     * Whether it is a correct or incorrect answer\n     */\n    Correct: boolean = true;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestion.html":{"url":"classes/UpdateQuestion.html","title":"class - UpdateQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n            \n                Description\n            \n            \n                Update Question Interface\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/question.ts:58\n                        \n                    \n\n            \n                \n                    Updated question value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewQuestion{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n}\n\n/**\n * Question interface\n */\nexport class Question{\n    /**\n     * QuizID to which the question is associated with\n     */\n    QuizID: string = \"\";\n\n    /**\n     * The type of question, multiplechoice, text answer etc\n     */\n    Type: string =  \"\";\n\n    /**\n     * The question itself\n     */\n    Question: string = \"\";\n\n    /**\n     * Id from database\n     */\n    _id: string = \"\";\n\n    /**\n     * Version\n     */\n    __v: Number = 0;\n}\n\n/**\n * Update Question Interface\n */\nexport class UpdateQuestion{\n    /**\n     * Updated question value\n     */\n    Question: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User class, response from database in this format\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Friends\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:42\n                        \n                    \n\n            \n                \n                    Unknown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n            \n                \n                    ID Genereated by Database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    List of users friends!\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:13\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * ID Genereated by Database\n     */\n    _id: string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * List of users friends!\n     */\n    Friends: string[] = [];\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser {\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n\n/**\n * LoginUser interface\n */\nexport class LoginUser {\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_email_exists\n                            \n                            \n                                create_user\n                            \n                            \n                                edit_user\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor to inject http Client\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check_email_exists\n                        \n                    \n                \n            \n            \n                \ncheck_email_exists(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:33\n                \n            \n\n\n            \n                \n                    Check if email can be registered or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        True or false value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_user\n                        \n                    \n                \n            \n            \n                \ncreate_user(user: CreateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:44\n                \n            \n\n\n            \n                \n                    Take user input and create new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit_user\n                        \n                    \n                \n            \n            \n                \nedit_user(user: EditUser, userID: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:60\n                \n            \n\n\n            \n                \n                    Take new info and update current user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: LoginUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:76\n                \n            \n\n\n            \n                \n                    Log the user in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LoginUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        User\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/user\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:25\n                        \n                    \n\n            \n                \n                    All user related requests use this base url\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable } from 'rxjs';\n\nimport { CreateUser, EditUser, LoginUser, User } from '../models/user';\nimport { handleError } from '../utilities/errorhandler';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * Constructor to inject http Client\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * All user related requests use this base url\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/user\";\n  user : User = new User();\n\n  /**\n   * Check if email can be registered or not\n   * @param email \n   * @returns True or false value\n   */\n  check_email_exists(email: string) : Observable{\n    return this.http.get(this.base_url+\"/emailExists/\"+ email).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Take user input and create new user\n   * @param user \n   * @returns \n   */\n  create_user(user: CreateUser) : Observable{\n    let userNew = JSON.stringify(user);\n    return this.http.post(this.base_url+\"/createUser\",userNew,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n  \n  /**\n   * Take new info and update current user.\n   * @param user \n   * @param userID \n   * @returns \n   */\n  edit_user(user: EditUser, userID: String) : Observable{\n    let userUpdated = JSON.stringify(user);\n    return this.http.patch(this.base_url+\"/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Log the user in\n   * @param email \n   * @param password \n   * @returns User\n   */\n  login(user : LoginUser) : Observable{\n    let body = JSON.stringify(user)\n    return this.http.post(this.base_url+\"/login\",body,{\n      headers: new HttpHeaders({\n        'Content-Type' : 'application/json'\n      })\n    }).pipe(\n      catchError(handleError)\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/bookmarks/bookmarks.component.ts\n            \n            component\n            BookmarksComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/guards/edit-profile.guard.ts\n            \n            guard\n            EditProfileGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/master-answer/master-answer.component.ts\n            \n            component\n            MasterAnswerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            Answer\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            NewAnswer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/answer.ts\n            \n            class\n            UpdateAnswer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            AddBookmark\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/bookmarks.ts\n            \n            class\n            Bookmark\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/categories.ts\n            \n            class\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/qna.ts\n            \n            class\n            NewQuestionAnswer\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            NewQuestion\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            Question\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            UpdateQuestion\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            CreateQuiz\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            Quiz\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            CreateUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            EditUser\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            LoginUser\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/pipes/book-filter.pipe.ts\n            \n            pipe\n            BookFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/filter.pipe.ts\n            \n            pipe\n            FilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/quiz-answer/quiz-answer.component.ts\n            \n            component\n            QuizAnswerComponent\n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                src/app/quiz-create/quiz-create.component.ts\n            \n            component\n            QuizCreateComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/quiz-info/quiz-info.component.ts\n            \n            component\n            QuizInfoComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/quiz-search/quiz-search.component.ts\n            \n            component\n            QuizSearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/bookmark.service.ts\n            \n            injectable\n            BookmarkService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/utilities/errorhandler.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utilities/password.validator.ts\n            \n            variable\n            confirmPassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bulma : ^0.9.4\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleError   (src/.../errorhandler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/errorhandler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                    handleError function called when an HttpError occurs in API call\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nService\nStatus\n\n\n\n\nContinuous Integration\n\n\n\nCode Coverage\n\n\n\nDocumentation\nhttps://aksharnana.github.io/QuizPlatform-Docs/\n\n\n\nQuiz Platform\nThis project involves creating and executing a quiz platform similar to Sporcle or Jetpunk, where users can both create and take quizzes. Additionally, users can share their quiz results with friends, and even create groups for competitions. Various types of questions should be available, such as simple question-answer, image-based, and matching questions. Quizzes should also be categorized and rated by users.\nInstallation\nInstall node_modules with npm:\n  cd Quiz_Platform\n  npm installRun Locally\nGo to the project directory\n  cd Quiz_PlatformStart the server\n  ng serve --openRunning Tests\nTo run tests, run the following command\n  npm run testAuto Documentation\nTo generate local documentation, run the following command\n  npm run compodocTo serve the genereated documentation, run the command\n  npm run compodoc-serveContinuous Integration / Continuous Deployment\nQuiz Platform is using Circle CI for running tests, building and pushing to firebase hosting as well as updating the codecov page on every commit.\nDeployment\nThe live project link is:\nhttps://quiz-platform-28fcb.web.app/\nTech Stack\nClient: Angular, BulmaIO\nServer: Node, Express, MongoDB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookFilterPipe\n\nBookFilterPipe\n\nAppModule -->\n\nBookFilterPipe->AppModule\n\n\n\n\n\nBookmarksComponent\n\nBookmarksComponent\n\nAppModule -->\n\nBookmarksComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nAppModule -->\n\nFilterPipe->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMasterAnswerComponent\n\nMasterAnswerComponent\n\nAppModule -->\n\nMasterAnswerComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizInfoComponent\n\nQuizInfoComponent\n\nAppModule -->\n\nQuizInfoComponent->AppModule\n\n\n\n\n\nQuizSearchComponent\n\nQuizSearchComponent\n\nAppModule -->\n\nQuizSearchComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmPassword   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n    const ctrl = control.get(\"password\");\n    const match_ctrl = control.get(\"confirm_password\");\n    return ctrl && match_ctrl && ctrl.value !== match_ctrl.value ? { confirmPassword: false } : null;\n}\n                    \n                \n\n            \n                \n                    Validator Function to validate password and confirm password fields.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
