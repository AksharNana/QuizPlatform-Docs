var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.539,1,0.824]],["body/components/AppComponent.html",[0,0.92,1,1.341,2,1.61,3,0.518,4,0.518,5,1.337,6,1.337,7,1.337,8,1.337,9,0.441,10,2.124,11,0.791,12,1.741,13,2.922,14,3.623,15,1.337,16,2.515,17,2.201,18,2.46,19,1.839,20,4.142,21,1.839,22,3.623,23,0.518,24,0.827,25,4.142,26,4.679,27,4.953,28,1.414,29,4.835,30,1.018,31,2.633,32,1.414,33,3.623,34,4.462,35,4.679,36,1.027,37,0.052,38,1.337,39,0.827,40,4.142,41,3.623,42,2.633,43,3.623,44,2.633,45,4.142,46,2.922,47,1.337,48,0.952,49,1.172,50,2.922,51,2.633,52,3.623,53,3.029,54,2.633,55,2.922,56,0.791,57,0.692,58,0.518,59,0.241,60,2.633,61,2.633,62,3.623,63,3.623,64,2.124,65,2.633,66,2.633,67,3.623,68,2.115,69,3.623,70,3.623,71,3.623,72,3.623,73,3.623,74,3.623,75,3.623,76,2.922,77,3.623,78,1.337,79,1.839,80,1.839,81,1.027,82,2.265,83,1.337,84,0.952,85,1.337,86,0.692,87,0.902,88,1.337,89,0.692,90,1.337,91,0.692,92,0.902,93,1.337,94,0.692,95,1.337,96,1.337,97,1.337,98,0.033,99,0.033]],["title/modules/AppModule.html",[100,1.861,101,1.6]],["body/modules/AppModule.html",[1,1.625,3,0.605,4,0.605,9,0.515,17,1.368,37,0.052,56,1.603,57,0.809,58,0.605,59,0.281,86,1.329,87,1.055,89,1.329,91,1.329,92,1.055,94,1.329,98,0.037,99,0.037,101,3.221,102,1.563,103,2.349,104,2.483,105,2.483,106,2.483,107,2.483,108,2.568,109,3.245,110,2.483,111,2.483,112,3.079,113,4.024,114,3.245,115,4.024,116,3.245,117,4.024,118,2.483,119,2.09,120,4.024,121,1.368,122,4.024,123,2.483,124,3.079,125,3.079,126,2.483,127,1.797,128,2.483,129,2.483,130,1.797,131,2.483,132,3.079]],["title/modules/AppRoutingModule.html",[100,1.861,108,1.392]],["body/modules/AppRoutingModule.html",[0,1,3,0.67,4,0.67,9,0.57,12,1.329,13,2.747,30,0.777,37,0.052,56,1.586,57,0.895,58,0.844,59,0.311,86,1.128,87,1.472,89,1.128,91,1.128,92,1.168,94,1.128,98,0.039,99,0.039,100,2.313,102,1.73,108,2.18,114,2.747,116,3.463,126,2.747,127,1.989,128,2.747,129,2.747,130,1.989,131,2.747,133,3.407,134,3.407,135,4.294,136,2.882,137,1.989,138,2.506,139,3.407,140,3.407,141,3.407,142,5.089,143,3.407,144,2.747,145,1.989,146,2.313,147,2.313,148,2.747,149,2.313,150,3.407,151,2.313,152,3.407,153,3.407,154,3.407]],["title/classes/CreateUser.html",[59,0.25,155,1.069]],["body/classes/CreateUser.html",[3,0.458,4,0.458,9,0.39,11,0.7,23,0.458,24,0.758,30,1.061,37,0.052,39,1.061,47,2.752,48,1.221,49,1.221,58,0.762,59,0.425,84,1.11,98,0.03,99,0.03,155,1.649,156,1.359,157,1.359,158,2.262,159,2.631,160,1.512,161,2.631,162,1.94,163,1.343,164,2.213,165,2.269,166,1.943,167,2.793,168,2.213,169,2.213,170,2.328,171,2.696,172,2.87,173,2.328,174,2.146,175,2.328,176,2.793,177,1.649,178,2.328,179,2.631,180,2.328,181,2.328,182,1.58,183,1.359,184,1.58,185,1.58,186,1.58,187,1.58,188,1.297,189,1.359]],["title/components/EditProfileComponent.html",[0,0.539,86,0.72]],["body/components/EditProfileComponent.html",[0,0.564,1,0.429,2,1.018,3,0.281,4,0.281,5,0.725,6,0.725,7,0.725,8,0.725,9,0.239,11,0.429,12,0.894,15,0.725,16,2.05,17,1.794,19,1.164,21,1.164,23,0.281,24,0.523,28,0.894,30,1.036,32,0.894,36,1.833,37,0.052,38,0.725,39,0.655,48,0.375,49,0.375,56,1.082,57,0.375,58,0.281,59,0.13,78,0.725,79,1.164,80,1.164,81,1.12,82,1.668,83,0.725,84,0.945,85,0.725,86,0.863,87,1.438,88,0.725,89,0.375,90,0.725,91,0.375,92,0.489,93,0.725,94,0.375,95,0.725,96,0.725,97,0.725,98,0.021,99,0.021,121,0.634,127,2.699,145,0.833,147,1.556,160,1.901,163,1.167,164,2.055,165,0.725,166,1.858,168,1.975,169,1.975,171,1.164,174,1.164,188,0.894,190,3.729,191,1.151,192,2.871,193,2.292,194,2.871,195,2.871,196,2.443,197,2.305,198,3.287,199,1.338,200,3.256,201,3.256,202,1.949,203,1.151,204,1.428,205,1.848,206,2.292,207,2.231,208,2.292,209,0.833,210,0.833,211,1.428,212,2.101,213,2.116,214,2.101,215,2.742,216,2.699,217,1.556,218,1.556,219,2.101,220,1.676,221,1.428,222,1.164,223,1.556,224,1.556,225,1.556,226,1.556,227,1.556,228,1.428,229,2.292,230,1.848,231,1.848,232,1.428,233,1.151,234,1.428,235,2.348,236,1.151,237,1.428,238,1.151,239,1.428,240,0.969,241,1.428,242,0.969,243,1.428,244,1.151,245,1.428,246,1.428,247,1.151,248,0.969,249,1.151,250,1.151,251,1.151,252,1.151,253,1.428,254,1.428,255,1.428,256,1.428,257,1.428,258,1.428,259,1.428,260,1.428,261,1.151,262,1.428,263,1.151,264,1.151,265,1.151,266,1.151,267,1.151,268,1.428,269,0.833,270,1.151,271,1.151,272,1.151,273,1.499,274,1.428,275,1.428,276,1.428,277,1.428,278,1.428,279,1.428,280,3.14,281,1.556,282,1.556,283,1.848,284,0.969,285,1.848,286,1.556,287,0.969,288,2.65,289,2.443,290,2.443,291,2.443,292,0.969,293,2.443,294,0.969,295,1.918,296,2.443,297,1.918,298,2.231,299,1.949,300,1.338,301,1.338,302,1.556,303,2.101,304,0.969,305,0.969,306,0.725,307,1.164,308,0.833,309,0.969,310,0.969,311,0.969,312,0.969,313,0.969,314,0.969,315,0.969,316,1.918,317,0.969,318,0.969,319,0.969,320,1.556,321,0.833,322,0.833,323,0.833,324,0.969,325,0.833,326,0.833,327,0.969,328,0.969,329,1.918,330,1.338,331,0.969,332,1.556,333,0.969,334,0.969,335,0.969,336,0.969,337,1.676,338,0.969,339,0.969,340,1.338,341,1.338,342,1.556,343,0.969,344,0.969,345,0.969,346,0.969,347,0.969,348,0.969,349,0.969,350,0.969,351,0.969,352,1.338,353,1.556,354,0.969,355,0.969,356,1.556,357,0.969,358,0.969,359,0.833,360,0.969]],["title/guards/EditProfileGuard.html",[138,1.6,361,1.861]],["body/guards/EditProfileGuard.html",[3,0.635,4,0.635,9,0.541,11,0.971,12,1.62,18,2.194,23,0.635,28,1.62,30,0.737,32,1.62,36,1.62,37,0.052,39,0.737,53,2.194,55,3.348,56,1.379,57,0.849,58,0.635,59,0.295,64,2.606,81,1.62,84,0.849,87,1.107,98,0.038,99,0.038,137,1.886,138,2.423,147,2.194,148,4.038,163,1.205,209,1.886,210,1.886,231,3.348,252,2.606,273,1.62,362,3.231,363,3.348,364,2.606,365,3.231,366,4.841,367,4.841,368,4.841,369,3.231,370,4.152,371,4.152,372,4.152,373,4.587,374,3.699,375,4.152,376,4.587,377,2.108,378,2.194,379,2.606,380,2.606,381,2.819,382,3.231,383,2.606,384,3.231,385,3.231,386,3.231,387,3.231]],["title/classes/EditUser.html",[59,0.25,188,1.069]],["body/classes/EditUser.html",[3,0.468,4,0.468,9,0.399,11,0.716,23,0.468,24,0.771,30,1.029,37,0.052,39,1.029,47,2.759,48,1.184,49,1.184,58,0.771,59,0.428,84,1.122,98,0.031,99,0.031,155,1.318,156,1.39,157,1.39,158,2.291,159,2.664,160,1.531,161,2.664,162,1.39,163,1.333,164,2.224,165,2.289,166,1.953,167,2.493,168,2.224,169,2.224,171,2.704,172,2.899,174,2.168,176,2.632,177,1.531,179,2.293,182,1.617,183,1.39,184,1.617,185,1.617,186,1.617,187,1.617,188,1.666,189,1.971,388,2.381,389,2.381,390,2.381,391,2.381,392,2.381]],["title/components/LoginComponent.html",[0,0.539,89,0.72]],["body/components/LoginComponent.html",[0,0.696,1,0.598,2,1.317,3,0.391,4,0.391,5,1.011,6,1.011,7,1.011,8,1.011,9,0.333,11,0.598,12,1.157,15,1.011,16,2.314,17,2.025,19,1.505,21,1.505,23,0.391,24,0.676,28,1.157,30,0.896,32,1.157,36,1.637,37,0.052,38,1.011,48,0.523,49,0.523,56,0.891,57,0.523,58,0.391,59,0.182,78,1.011,79,1.505,80,1.505,81,1.382,82,1.993,83,1.011,84,0.779,85,1.011,86,0.523,87,0.682,88,1.011,89,1.031,90,1.011,91,0.523,92,0.682,93,1.011,94,0.523,95,1.011,96,1.011,97,1.011,98,0.027,99,0.027,121,0.885,146,2.013,149,3.18,160,1.717,163,0.779,164,2.197,166,1.929,196,2.405,199,1.73,207,2.013,212,2.068,213,1.955,214,2.45,215,2.45,216,2.291,217,2.013,218,2.013,219,2.068,222,1.505,223,2.013,224,2.013,225,2.013,226,2.013,227,2.013,235,1.993,240,1.351,242,1.351,273,1.157,280,2.665,281,2.013,282,2.013,284,1.351,286,2.013,287,1.351,288,2.886,289,2.849,290,2.849,291,2.849,292,1.351,293,2.849,294,1.351,295,2.291,296,2.849,297,2.291,298,2.665,299,2.405,300,1.73,301,1.73,302,2.013,303,2.45,304,1.351,305,1.351,306,1.011,307,1.505,308,1.162,312,1.351,313,1.351,314,1.351,315,1.351,316,2.291,317,1.351,318,1.351,319,1.351,320,2.013,321,1.162,322,1.162,323,1.162,324,1.351,325,1.162,326,1.162,327,1.351,328,1.351,329,2.291,330,1.73,331,1.351,332,2.013,333,1.351,334,1.351,335,1.351,336,1.351,337,2.068,338,1.351,339,1.351,340,1.73,341,1.73,342,2.013,343,1.351,344,1.351,345,1.351,346,1.351,347,1.351,348,1.351,349,1.351,350,1.351,351,1.351,352,1.73,353,2.013,354,1.351,355,1.351,356,2.013,357,1.351,358,1.351,359,1.162,360,1.351,393,1.605,394,3.542,395,2.965,396,3.542,397,1.991,398,1.991,399,1.991,400,1.991,401,1.991,402,1.991,403,1.991,404,1.991,405,2.391,406,1.991,407,1.991,408,1.991]],["title/components/QuizAnswerComponent.html",[0,0.539,91,0.72]],["body/components/QuizAnswerComponent.html",[0,0.67,1,0.561,2,1.254,3,0.367,4,0.367,5,0.947,6,0.947,7,0.947,8,0.947,9,0.312,15,0.947,16,2.264,17,1.982,19,1.433,21,1.433,23,0.367,24,0.644,28,1.101,30,1.111,36,1.74,37,0.052,38,1.729,39,0.867,48,0.741,49,0.741,56,0.849,57,0.49,58,0.367,59,0.17,76,1.504,78,0.947,79,1.433,80,1.433,81,0.728,82,2.332,83,0.947,84,0.741,85,0.947,86,0.49,87,0.639,88,0.947,89,0.49,90,0.947,91,0.998,92,1.712,93,0.947,94,0.49,95,0.947,96,0.947,97,0.947,98,0.026,99,0.026,121,0.829,130,2.882,145,1.988,160,1.482,168,1.254,169,1.254,176,1.089,177,1.482,199,1.648,212,1.089,213,2.041,214,1.988,215,2.603,216,2.506,219,1.089,235,1.929,247,2.747,273,1.329,288,1.988,295,1.988,300,1.089,301,2.217,303,1.648,306,1.433,307,0.947,308,1.089,309,1.266,310,1.266,311,1.266,316,1.648,321,1.089,322,1.089,323,1.089,326,1.648,329,2.382,330,1.648,340,1.648,341,1.089,352,1.089,380,2.277,409,3.981,410,1.504,411,2.277,412,3.406,413,2.823,414,3.406,415,3.406,416,4.081,417,4.081,418,4.081,419,3.799,420,3.799,421,3.799,422,4.46,423,4.46,424,4.46,425,1.865,426,1.865,427,1.865,428,1.865,429,1.865,430,1.865,431,2.823,432,1.865,433,1.865,434,1.865,435,1.865,436,1.865,437,1.865,438,1.865,439,1.865,440,1.865,441,2.823,442,1.865,443,2.823,444,1.865,445,1.865,446,1.865,447,2.823,448,1.865,449,2.823,450,1.865,451,1.865,452,1.865,453,1.865,454,1.865,455,1.865,456,1.865,457,1.865,458,1.865,459,1.865,460,1.865,461,1.865,462,1.865,463,1.865,464,1.865,465,1.865,466,2.277,467,2.823,468,3.463,469,3.799,470,2.823,471,2.823,472,2.823,473,2.823,474,2.823,475,2.823,476,2.277,477,2.823,478,3.406,479,1.865,480,1.865,481,2.823,482,1.865,483,3.406,484,2.823,485,3.799,486,1.865,487,1.865,488,1.865,489,1.865,490,1.865,491,1.865,492,1.865,493,1.865,494,1.865,495,1.865,496,1.865,497,1.865]],["title/components/RegistrationComponent.html",[0,0.539,94,0.72]],["body/components/RegistrationComponent.html",[0,0.783,1,0.416,2,0.992,3,0.272,4,0.272,5,0.702,6,0.702,7,0.702,8,0.702,9,0.231,11,0.416,15,0.702,16,2.023,17,1.771,19,1.134,21,1.134,23,0.272,24,0.51,28,0.871,30,1.026,32,0.871,36,1.818,37,0.052,38,0.702,39,0.641,46,1.801,48,0.738,49,0.363,56,1.138,57,0.363,58,0.272,59,0.126,78,0.702,79,1.134,80,1.134,81,0.539,82,1.638,83,0.702,84,0.93,85,0.702,86,0.363,87,0.474,88,0.702,89,0.363,90,0.702,91,0.363,92,0.963,93,0.702,94,0.847,95,1.797,96,0.702,97,0.702,98,0.02,99,0.02,121,0.614,137,0.807,144,3.757,146,2.404,149,1.516,155,0.871,158,0.807,160,1.844,163,1.047,164,2.037,165,0.702,166,1.844,167,0.807,168,1.955,169,1.955,174,1.134,177,0.871,196,2.816,197,2.283,199,1.303,200,3.213,201,3.213,202,0.939,203,1.115,205,1.801,209,0.807,210,0.807,213,2.15,214,2.066,215,2.72,216,2.676,217,1.516,218,1.516,219,2.066,220,1.64,222,1.134,223,1.516,224,1.516,225,1.516,226,1.516,227,1.516,233,1.115,235,2.327,236,1.115,238,1.115,240,0.939,242,0.939,244,1.115,248,0.939,249,1.115,250,1.115,251,1.115,263,1.115,264,1.115,265,1.115,266,1.115,267,1.115,269,0.807,270,1.115,271,1.115,272,1.115,273,1.477,280,3.112,281,1.516,282,1.516,283,1.801,284,0.939,285,1.801,286,1.907,287,1.516,288,2.877,289,2.404,290,2.404,291,2.404,292,1.907,293,2.404,294,0.939,295,1.883,296,2.404,297,1.883,298,2.19,299,1.907,300,1.303,301,1.64,302,1.516,303,2.21,304,0.939,305,0.939,306,0.702,307,1.922,308,1.303,309,0.939,310,0.939,311,0.939,312,1.516,313,1.516,314,1.516,315,1.516,316,2.421,317,1.516,318,1.516,319,1.516,320,2.19,321,1.303,322,1.303,323,1.303,324,1.516,325,1.303,326,1.303,327,1.516,328,0.939,329,1.883,331,0.939,332,1.516,333,0.939,334,0.939,335,0.939,336,0.939,337,1.64,338,0.939,339,0.939,340,1.303,341,1.303,342,1.516,343,0.939,344,0.939,345,0.939,346,0.939,347,0.939,348,0.939,349,0.939,350,0.939,351,0.939,352,1.64,353,1.516,354,0.939,355,0.939,356,1.516,357,0.939,358,0.939,359,0.807,360,0.939,381,1.516,405,1.801,498,1.115,499,2.809,500,2.233,501,2.809,502,3.226,503,1.382,504,2.233,505,1.801,506,1.382,507,1.382,508,2.233,509,1.382,510,1.382,511,1.382,512,1.382,513,1.382,514,1.382,515,1.382,516,1.382,517,1.115,518,1.115,519,1.382,520,1.382,521,1.382,522,1.382,523,1.382,524,1.382,525,1.382,526,1.382,527,1.382,528,1.801,529,2.233,530,2.233,531,2.233,532,1.382,533,1.382,534,1.382,535,1.382,536,1.382,537,1.382,538,1.382,539,1.382,540,1.382]],["title/classes/User.html",[59,0.25,163,0.72]],["body/classes/User.html",[3,0.442,4,0.442,9,0.377,11,0.677,23,0.442,24,0.74,30,1.106,37,0.052,39,1.106,47,2.75,48,1.274,49,1.274,58,0.748,59,0.42,84,1.093,98,0.03,99,0.03,155,1.266,156,1.314,157,1.314,158,1.894,159,2.203,160,1.266,161,2.203,162,1.314,163,1.348,164,2.195,165,2.24,166,1.927,167,2.765,168,2.195,169,2.195,171,2.683,172,2.826,174,2.113,176,2.83,177,1.721,179,2.582,182,2.203,183,1.894,184,2.582,185,2.582,186,2.203,187,2.582,188,1.266,189,1.314,269,1.314,541,2.251,542,2.251,543,2.251,544,2.251,545,2.251,546,2.251,547,2.251,548,2.251,549,2.251]],["title/injectables/UserService.html",[197,1.392,377,1.392]],["body/injectables/UserService.html",[3,0.748,4,0.442,9,0.377,11,0.677,12,1.624,18,1.528,23,0.442,24,0.74,28,1.266,30,1.007,32,1.266,36,1.793,37,0.052,39,1.081,47,2.113,48,0.591,49,0.591,56,1.251,57,0.591,58,0.442,59,0.348,68,1.894,81,1.266,84,1.093,98,0.03,99,0.03,123,1.815,151,2.203,155,1.624,163,1.37,177,0.878,188,1.624,197,2.113,202,2.582,207,2.203,209,2.43,210,2.43,212,1.894,213,2.105,222,1.647,248,1.528,261,3.357,269,1.894,273,1.624,325,1.894,374,3.706,377,1.647,378,1.528,379,1.815,381,2.996,517,3.558,518,2.616,550,2.251,551,1.815,552,3.804,553,3.244,554,3.244,555,3.804,556,4.162,557,2.251,558,4.162,559,2.251,560,3.244,561,2.251,562,3.357,563,3.244,564,3.244,565,2.251,566,3.244,567,4.162,568,2.251,569,3.804,570,3.244,571,4.412,572,3.244,573,3.244,574,3.244,575,2.251,576,3.244,577,3.244,578,3.244,579,3.244,580,3.244,581,3.804,582,2.251,583,3.244,584,2.251,585,3.244,586,1.815,587,2.251,588,2.251,589,3.244,590,2.251,591,2.251,592,3.244,593,3.244,594,3.244,595,2.251,596,3.244,597,2.251,598,2.251,599,2.251,600,2.251,601,2.251,602,2.251,603,2.251,604,2.251,605,2.251,606,2.251,607,2.251,608,2.251,609,2.251,610,2.251,611,2.251,612,3.244,613,2.251,614,3.244,615,3.244,616,3.244,617,3.244,618,2.251,619,2.251]],["title/coverage.html",[620,2.528]],["body/coverage.html",[0,1.016,1,1.078,9,0.6,10,2.892,37,0.051,39,0.818,59,0.44,68,2.093,86,0.942,89,0.942,91,0.942,94,0.942,98,0.04,99,0.04,127,2.093,130,2.093,138,2.093,155,1.399,157,2.809,163,0.942,177,1.399,188,1.399,190,2.892,191,2.892,197,1.821,213,1.594,220,2.093,230,2.892,359,3.146,361,2.435,363,2.892,364,2.892,377,1.821,393,2.892,409,2.892,410,2.892,498,2.892,551,2.892,620,2.435,621,3.586,622,3.586,623,3.586,624,3.586,625,3.586,626,3.586,627,3.586,628,3.586,629,4.434,630,3.586,631,3.586,632,3.586,633,3.586,634,2.892,635,3.586,636,3.586,637,3.586]],["title/dependencies.html",[103,1.922,638,1.853]],["body/dependencies.html",[37,0.051,57,1.029,98,0.043,99,0.043,103,2.287,118,3.773,119,3.177,121,1.741,137,2.287,378,2.66,639,3.918,640,5.476,641,3.918,642,3.918,643,3.918,644,3.918,645,3.918,646,3.918,647,3.918,648,3.918,649,3.918,650,3.918,651,3.918,652,3.918]],["title/index.html",[23,0.452,653,2.297,654,2.297]],["body/index.html",[12,1.248,37,0.042,50,2.579,68,2.815,92,1.653,98,0.042,99,0.042,151,2.171,162,1.867,171,2.318,183,1.867,189,1.867,222,2.094,307,1.624,337,1.867,411,2.579,466,2.579,468,2.579,505,2.579,528,3.889,562,2.579,586,2.579,620,2.171,655,3.198,656,4.124,657,4.124,658,3.198,659,3.198,660,4.565,661,3.198,662,3.198,663,3.198,664,3.198,665,3.198,666,3.198,667,4.124,668,3.198,669,3.198,670,3.198,671,3.198,672,3.198,673,3.198,674,3.198,675,3.198,676,4.124,677,2.579,678,3.198,679,3.198,680,3.198,681,3.198,682,3.198,683,3.198,684,3.198,685,3.198,686,4.992,687,4.124,688,3.198,689,3.198,690,3.198,691,3.198,692,3.198,693,4.124,694,4.124,695,3.198,696,4.565,697,5.2,698,4.124,699,4.565,700,3.198,701,3.198,702,3.198,703,3.198,704,3.198,705,3.198,706,4.124,707,3.198,708,3.198,709,3.198,710,3.198,711,3.198,712,3.198,713,3.198,714,3.198,715,3.198,716,3.198,717,3.198,718,3.198,719,3.198,720,3.198,721,3.198,722,3.198,723,3.198,724,3.198,725,3.198,726,3.198,727,3.198]],["title/modules.html",[102,1.891]],["body/modules.html",[37,0.045,98,0.045,99,0.045,101,2.493,102,2.168,108,2.168,119,2.9,677,3.444,728,4.271,729,4.271,730,4.922,731,4.271]],["title/overview.html",[732,3.003]],["body/overview.html",[1,1.614,2,1.643,37,0.05,86,1.281,89,1.281,91,1.281,94,1.281,98,0.041,99,0.041,101,3.265,102,1.877,103,2.637,104,2.981,105,2.981,106,2.981,107,2.981,108,2.476,109,3.643,110,2.981,111,2.981,136,2.158,156,2.158,297,2.158,306,2.293,330,2.158,361,2.51,377,1.877,476,2.981,732,2.981,733,3.696]],["title/properties.html",[24,0.751,638,1.853]],["body/properties.html",[24,0.991,37,0.048,98,0.045,99,0.045,734,4.342,735,4.342]],["title/routes.html",[136,2.174]],["body/routes.html",[37,0.046,98,0.046,99,0.046,136,2.556]],["title/miscellaneous/variables.html",[736,1.853,737,2.655]],["body/miscellaneous/variables.html",[23,0.755,32,1.499,37,0.051,39,0.877,48,1.009,49,1.009,53,2.608,98,0.042,99,0.042,145,2.699,166,1.804,220,2.895,235,1.95,273,1.499,383,3.729,634,3.098,736,3.098,737,3.098,738,3.841,739,3.841,740,3.841,741,3.841,742,4.624,743,3.841,744,4.624,745,3.841,746,3.841,747,3.841,748,3.841,749,3.841,750,3.841,751,3.841]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":177,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":735,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.9.4",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0/9",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":306,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":292,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["100",{"_index":359,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":451,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["1001682.jpg",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{}}}],["100vh",{"_index":323,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["10px",{"_index":485,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["11",{"_index":294,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["15",{"_index":333,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["15.2.0",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":487,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["1rem",{"_index":353,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["2",{"_index":330,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":491,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["242325",{"_index":304,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["24px",{"_index":484,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["255",{"_index":332,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["28fcb.web.app",{"_index":721,"title":{},"body":{"index.html":{}}}],["3",{"_index":476,"title":{},"body":{"components/QuizAnswerComponent.html":{},"overview.html":{}}}],["3/3",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["3c887e",{"_index":291,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4",{"_index":733,"title":{},"body":{"overview.html":{}}}],["4/6",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["42a948",{"_index":343,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["4caf50",{"_index":492,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["5",{"_index":297,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["5/5",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["5129486.jpg",{"_index":539,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["5220092.jpg",{"_index":536,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["5px",{"_index":341,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":356,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6",{"_index":298,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["6/6",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":431,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["66",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["6em",{"_index":302,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["7.8.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["820000",{"_index":351,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["83",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["__v",{"_index":187,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["_id",{"_index":185,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["a94442",{"_index":346,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["abstractcontrol",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":199,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["accordingly",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["account",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["activate",{"_index":370,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["activatedroutesnapshot",{"_index":366,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["active",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["add",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["additionally",{"_index":668,"title":{},"body":{"index.html":{}}}],["address",{"_index":172,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["afterviewinit",{"_index":246,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["again",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["alert",{"_index":348,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["alert(\"you",{"_index":384,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["align",{"_index":326,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["along",{"_index":227,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["already",{"_index":531,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["angular",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":411,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["answer'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["answer.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["answer.component.html",{"_index":413,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.scss",{"_index":412,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts",{"_index":410,"title":{},"body":{"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer.component.ts:11",{"_index":429,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:12",{"_index":433,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:13",{"_index":430,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:14",{"_index":432,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:15",{"_index":426,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:27",{"_index":427,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:31",{"_index":428,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:43",{"_index":435,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:49",{"_index":437,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:55",{"_index":439,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer.component.ts:59",{"_index":425,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answer/quiz",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["answer_form",{"_index":414,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["answerquiz",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["app.component",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["appmodule",{"_index":101,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":108,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apron",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["area",{"_index":475,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["auto",{"_index":480,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["available",{"_index":677,"title":{},"body":{"index.html":{},"modules.html":{}}}],["back",{"_index":532,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["backdrop",{"_index":334,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["backend",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["background",{"_index":288,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["bad",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["base",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["base_url",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["based",{"_index":680,"title":{},"body":{"index.html":{}}}],["best",{"_index":530,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["blend",{"_index":313,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["block",{"_index":355,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["blur(5px",{"_index":336,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["body",{"_index":596,"title":{},"body":{"injectables/UserService.html":{}}}],["bookmark",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{}}}],["bootstrap",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":340,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["both",{"_index":666,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":295,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["box",{"_index":328,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["brett",{"_index":537,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["browse",{"_index":730,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":490,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["building",{"_index":711,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["bulmaio",{"_index":724,"title":{},"body":{"index.html":{}}}],["calls",{"_index":515,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["can't",{"_index":385,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["canactivate",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{}}}],["canactivate(route",{"_index":365,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["capital",{"_index":469,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["catcherror",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["categorized",{"_index":681,"title":{},"body":{"index.html":{}}}],["cd",{"_index":687,"title":{},"body":{"index.html":{}}}],["center",{"_index":316,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["checkanswers",{"_index":419,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["churchman",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{}}}],["ci",{"_index":709,"title":{},"body":{"index.html":{}}}],["circle",{"_index":708,"title":{},"body":{"index.html":{}}}],["class",{"_index":59,"title":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":156,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"overview.html":{}}}],["clearinterval(this.countdowntimer",{"_index":449,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cli",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":586,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["clues",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["codecov",{"_index":716,"title":{},"body":{"index.html":{}}}],["color",{"_index":303,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["colors.jpg",{"_index":311,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["column",{"_index":540,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["command",{"_index":699,"title":{},"body":{"index.html":{}}}],["commit",{"_index":717,"title":{},"body":{"index.html":{}}}],["competitions",{"_index":673,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":704,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["compodocto",{"_index":703,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["confirm",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm_password",{"_index":201,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["confirmpassword",{"_index":220,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["console.error('an",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"toggled",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(response",{"_index":270,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["console.log(this.answer_form.value",{"_index":455,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["console.warn(this.login_form.value",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":202,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["constructor(http",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(public",{"_index":251,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(userservice",{"_index":203,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["contact",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["contain",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["container",{"_index":479,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["content",{"_index":325,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["continuous",{"_index":656,"title":{},"body":{"index.html":{}}}],["control",{"_index":235,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get(\"confirm_password",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get(\"password",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":224,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["contructor",{"_index":504,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["correctanswers",{"_index":460,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["countdown",{"_index":489,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["countdowntimer",{"_index":415,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["country",{"_index":472,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["cover",{"_index":321,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["coverage",{"_index":620,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":222,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create_user",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user(user",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser",{"_index":155,"title":{"classes/CreateUser.html":{}},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":162,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["ctrl",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl.value",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":207,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":496,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["data",{"_index":161,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["database",{"_index":184,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["decorator",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":103,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployment",{"_index":706,"title":{},"body":{"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["directives",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["directory",{"_index":691,"title":{},"body":{"index.html":{}}}],["display",{"_index":286,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["div",{"_index":349,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["docs",{"_index":659,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["don't",{"_index":284,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["don\\'t",{"_index":360,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["dynamic",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":225,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["edit_user",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["edit_user(user",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["editprofilecomponent",{"_index":86,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editprofileguard",{"_index":138,"title":{"guards/EditProfileGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["edituser",{"_index":188,"title":{"classes/EditUser.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["elementref",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":164,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["error",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["error('something",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["error.error",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["error.status",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["errors",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["even",{"_index":671,"title":{},"body":{"index.html":{}}}],["executing",{"_index":662,"title":{},"body":{"index.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["express",{"_index":726,"title":{},"body":{"index.html":{}}}],["facing",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["false",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{},"miscellaneous/variables.html":{}}}],["fed3d3",{"_index":350,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["field",{"_index":226,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fields",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":335,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["firebase",{"_index":713,"title":{},"body":{"index.html":{}}}],["first",{"_index":174,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["first_name",{"_index":200,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["firstname",{"_index":165,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["following",{"_index":698,"title":{},"body":{"index.html":{}}}],["font",{"_index":483,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["form",{"_index":160,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["format",{"_index":541,"title":{},"body":{"classes/User.html":{}}}],["formcontrol",{"_index":215,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["formgroup",{"_index":214,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["france",{"_index":470,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["friends",{"_index":670,"title":{},"body":{"index.html":{}}}],["function",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":701,"title":{},"body":{"index.html":{}}}],["generated",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["genereated",{"_index":183,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["getconfirm_password",{"_index":244,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getemail",{"_index":240,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getfirst_name",{"_index":233,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getpassword",{"_index":242,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getq1",{"_index":434,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["getq2",{"_index":436,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["getq3",{"_index":438,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["getsurname",{"_index":236,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":653,"title":{"index.html":{}},"body":{}}],["getusername",{"_index":238,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["global",{"_index":229,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["go",{"_index":690,"title":{},"body":{"index.html":{}}}],["gradient(circle",{"_index":290,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["graph",{"_index":731,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":312,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["green",{"_index":344,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["grid",{"_index":287,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["groups",{"_index":672,"title":{},"body":{"index.html":{}}}],["guard",{"_index":361,"title":{"guards/EditProfileGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":362,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["guards/edit",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h2",{"_index":482,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["handle",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["handleerror",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["handleerror(error",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["happened",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["headers",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["height",{"_index":322,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["home",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["hosting",{"_index":714,"title":{},"body":{"index.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["http",{"_index":517,"title":{},"body":{"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["httpheaders",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["https://aksharnana.github.io/quizplatform",{"_index":658,"title":{},"body":{"index.html":{}}}],["https://clumsy",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["https://quiz",{"_index":720,"title":{},"body":{"index.html":{}}}],["id",{"_index":182,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["identifier",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["if(this.toggled",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["if(user",{"_index":382,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["image",{"_index":307,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["implements",{"_index":380,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/QuizAnswerComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["information",{"_index":208,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["inject",{"_index":205,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["injectable",{"_index":377,"title":{"injectables/UserService.html":{}},"body":{"guards/EditProfileGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["input[type=\"text",{"_index":488,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["install",{"_index":684,"title":{},"body":{"index.html":{}}}],["installation",{"_index":683,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":688,"title":{},"body":{"index.html":{}}}],["integration",{"_index":657,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":281,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["invalid:not(form",{"_index":345,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["involves",{"_index":661,"title":{},"body":{"index.html":{}}}],["issue",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":327,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["japan",{"_index":477,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["jetpunk",{"_index":665,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(user",{"_index":254,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["json.stringify(response",{"_index":272,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["json.stringify(user",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":324,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["kellie",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{}}}],["kondratiev",{"_index":310,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["label",{"_index":354,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["land",{"_index":474,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["largest",{"_index":471,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["later",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["left",{"_index":296,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["link",{"_index":719,"title":{},"body":{"index.html":{}}}],["live",{"_index":718,"title":{},"body":{"index.html":{}}}],["load",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":702,"title":{},"body":{"index.html":{}}}],["locally",{"_index":689,"title":{},"body":{"index.html":{}}}],["log",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":231,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["logging",{"_index":387,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["login",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["login'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["login.component.html",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login_form",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["made",{"_index":179,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["margin",{"_index":329,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["match",{"_index":285,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["match_ctrl",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match_ctrl.value",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":736,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["mode",{"_index":314,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["models/user",{"_index":248,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":100,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":102,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":727,"title":{},"body":{"index.html":{}}}],["more",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["multiply",{"_index":315,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["navbar",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar_menu",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["network",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["new",{"_index":213,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ng",{"_index":337,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":420,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["nicely",{"_index":318,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["node",{"_index":725,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":685,"title":{},"body":{"index.html":{}}}],["none",{"_index":494,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["npm",{"_index":686,"title":{},"body":{"index.html":{}}}],["null",{"_index":383,"title":{},"body":{"guards/EditProfileGuard.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":176,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"classes/User.html":{}}}],["numcorrect",{"_index":465,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["observable",{"_index":374,"title":{},"body":{"guards/EditProfileGuard.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["oninit",{"_index":247,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["opacity",{"_index":305,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["openrunning",{"_index":695,"title":{},"body":{"index.html":{}}}],["optional",{"_index":210,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":732,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":486,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["package",{"_index":638,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":352,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["page",{"_index":466,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["param",{"_index":381,"title":{},"body":{"guards/EditProfileGuard.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":209,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["paris",{"_index":461,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["parse",{"_index":159,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["password",{"_index":166,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":283,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":516,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["pipe",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["platform",{"_index":528,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["plays",{"_index":167,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["please",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["pointer",{"_index":497,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["populate",{"_index":206,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["position",{"_index":319,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["private",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["profile",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["profile'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["profile.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":193,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.scss",{"_index":192,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts",{"_index":191,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:101",{"_index":241,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:107",{"_index":243,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:113",{"_index":245,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":228,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":221,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":204,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":232,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":211,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":234,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":237,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":239,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.guard",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.guard.ts",{"_index":364,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["profile.guard.ts:18",{"_index":369,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["profile/edit",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":467,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["project",{"_index":660,"title":{},"body":{"index.html":{}}}],["promise",{"_index":375,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":379,"title":{},"body":{"guards/EditProfileGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":196,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["pushing",{"_index":712,"title":{},"body":{"index.html":{}}}],["q1",{"_index":422,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["q2",{"_index":423,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["q3",{"_index":424,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["question",{"_index":468,"title":{},"body":{"components/QuizAnswerComponent.html":{},"index.html":{}}}],["questions",{"_index":676,"title":{},"body":{"index.html":{}}}],["quiz",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["quiz_platform",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["quiz_platformstart",{"_index":692,"title":{},"body":{"index.html":{}}}],["quizanswercomponent",{"_index":91,"title":{"components/QuizAnswerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":667,"title":{},"body":{"index.html":{}}}],["radial",{"_index":289,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["radius",{"_index":495,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["rated",{"_index":682,"title":{},"body":{"index.html":{}}}],["ray.cyclic.app/api/user",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":347,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["register",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registeruser",{"_index":502,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":500,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":499,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration_form",{"_index":501,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":94,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["related",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["repeat",{"_index":320,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["report",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["request",{"_index":518,"title":{},"body":{"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["requests",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":280,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["reset",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":269,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["results",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":273,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":594,"title":{},"body":{"injectables/UserService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{}}}],["rgba(255",{"_index":331,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["right",{"_index":299,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["route",{"_index":373,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["router",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistrationComponent.html":{}}}],["routermodule",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":368,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["routes",{"_index":136,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":697,"title":{},"body":{"index.html":{}}}],["running",{"_index":710,"title":{},"body":{"index.html":{}}}],["russia",{"_index":462,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["rxjs",{"_index":378,"title":{},"body":{"guards/EditProfileGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ryutaro",{"_index":534,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["sayles",{"_index":538,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["scale",{"_index":317,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["scoredisplay",{"_index":416,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["second",{"_index":444,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["seconds",{"_index":442,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["select",{"_index":357,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["serve",{"_index":694,"title":{},"body":{"index.html":{}}}],["servecontinuous",{"_index":705,"title":{},"body":{"index.html":{}}}],["server",{"_index":693,"title":{},"body":{"index.html":{}}}],["service",{"_index":505,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["services/user.service",{"_index":249,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":252,"title":{},"body":{"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{}}}],["sessionstorage.setitem(\"user",{"_index":271,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["setinterval",{"_index":446,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["setup",{"_index":223,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["share",{"_index":669,"title":{},"body":{"index.html":{}}}],["short",{"_index":282,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["side",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["sign",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":663,"title":{},"body":{"index.html":{}}}],["simple",{"_index":679,"title":{},"body":{"index.html":{}}}],["site",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":301,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["solid",{"_index":342,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["sporcle",{"_index":664,"title":{},"body":{"index.html":{}}}],["src/.../password.validator.ts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/edit",{"_index":190,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["src/app/guards/edit",{"_index":363,"title":{},"body":{"guards/EditProfileGuard.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:16",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/user.ts",{"_index":157,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:13",{"_index":549,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":545,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":548,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":544,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":546,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":547,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":542,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:48",{"_index":181,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:53",{"_index":173,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:57",{"_index":180,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:61",{"_index":170,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:65",{"_index":175,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:69",{"_index":178,"title":{},"body":{"classes/CreateUser.html":{}}}],["src/app/models/user.ts:79",{"_index":392,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:8",{"_index":543,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:84",{"_index":389,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:88",{"_index":391,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:92",{"_index":388,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/models/user.ts:96",{"_index":390,"title":{},"body":{"classes/EditUser.html":{}}}],["src/app/quiz",{"_index":409,"title":{},"body":{"components/QuizAnswerComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts",{"_index":498,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:101",{"_index":513,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:107",{"_index":514,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":503,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:22",{"_index":508,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:27",{"_index":507,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:53",{"_index":506,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:77",{"_index":509,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:83",{"_index":510,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:89",{"_index":511,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:95",{"_index":512,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":551,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:43",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:50",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:66",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/utilities/password.validator.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":723,"title":{},"body":{"index.html":{}}}],["stanislav",{"_index":309,"title":{},"body":{"components/EditProfileComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["started",{"_index":654,"title":{"index.html":{}},"body":{}}],["state",{"_index":367,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["statements",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":655,"title":{},"body":{"index.html":{}}}],["stop",{"_index":448,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["stoptimer",{"_index":421,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["string",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["submit",{"_index":478,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["such",{"_index":678,"title":{},"body":{"index.html":{}}}],["support",{"_index":728,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":168,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["svg",{"_index":729,"title":{},"body":{"modules.html":{}}}],["table",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":562,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["tech",{"_index":722,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["test",{"_index":371,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["testauto",{"_index":700,"title":{},"body":{"index.html":{}}}],["tests",{"_index":696,"title":{},"body":{"index.html":{}}}],["text",{"_index":481,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q1",{"_index":452,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q1\")?.value",{"_index":457,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q2",{"_index":453,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q2\")?.value",{"_index":458,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q3",{"_index":454,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.answer_form.get(\"q3\")?.value",{"_index":459,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.checkanswers",{"_index":450,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.confirm_password?.setvalue(this.userobj.password",{"_index":260,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.countdowntimer",{"_index":445,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.email?.setvalue(this.userobj.email",{"_index":258,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.email?.value",{"_index":266,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.first_name?.setvalue(this.userobj.firstname",{"_index":255,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.first_name?.value",{"_index":263,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.http.patch(this.base_url+\"/updateuser/\"+userid,userupdated",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.base_url+\"/createuser\",usernew",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.login_form.get(\"email",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.get(\"password",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.login_form.reset",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.add(\"is",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.navbar_menu?.nativeelement.classlist.remove(\"is",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password?.setvalue(this.userobj.password",{"_index":259,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.password?.value",{"_index":267,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"confirm_password",{"_index":527,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"email",{"_index":525,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"first_name",{"_index":522,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"password",{"_index":526,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"surname",{"_index":523,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.get(\"username",{"_index":524,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registration_form.reset",{"_index":521,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":520,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.stoptimer",{"_index":456,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.surname?.setvalue(this.userobj.surname",{"_index":256,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.surname?.value",{"_index":264,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.timeleft",{"_index":447,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["this.toggled",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["this.update_form.get(\"confirm_password",{"_index":279,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"email",{"_index":277,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"first_name",{"_index":274,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"password",{"_index":278,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"surname",{"_index":275,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.update_form.get(\"username",{"_index":276,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.setvalue(this.userobj.username",{"_index":257,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.username?.value",{"_index":265,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.userobj",{"_index":253,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userobj._id",{"_index":262,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["this.userservice.create_user(user).subscribe",{"_index":519,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.userservice.edit_user(user,userid).subscribe",{"_index":268,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["throwerror",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":441,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timeleft",{"_index":417,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timeleftdisplay",{"_index":418,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["timer",{"_index":443,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["toggled",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tokyo",{"_index":463,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["top",{"_index":300,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["total",{"_index":440,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["transparent",{"_index":293,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["true",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"guards/EditProfileGuard.html":{}}}],["try",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["tslib",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["tsukata",{"_index":535,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":675,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":186,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{}}}],["unsuccessful",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["up",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/QuizAnswerComponent.html":{}}}],["update",{"_index":212,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"injectables/UserService.html":{}}}],["update_form",{"_index":194,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updateuser",{"_index":198,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["updating",{"_index":189,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["url",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["url(\"../../assets/images/pexels",{"_index":308,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["url(\"../../assets/pexels",{"_index":533,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["urltree",{"_index":376,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["use",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["used",{"_index":158,"title":{},"body":{"classes/CreateUser.html":{},"classes/EditUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["user",{"_index":163,"title":{"classes/User.html":{}},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"guards/EditProfileGuard.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useranswers",{"_index":464,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["userid",{"_index":261,"title":{},"body":{"components/EditProfileComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":169,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{}}}],["usernew",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj",{"_index":195,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["users",{"_index":171,"title":{},"body":{"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"classes/User.html":{},"index.html":{}}}],["userservice",{"_index":197,"title":{"injectables/UserService.html":{}},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userupdated",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":707,"title":{},"body":{"index.html":{}}}],["utilities/password.validator",{"_index":250,"title":{},"body":{"components/EditProfileComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid.required",{"_index":339,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":338,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":219,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.email",{"_index":217,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.minlength(8",{"_index":218,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["validators.required",{"_index":216,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/CreateUser.html":{},"components/EditProfileComponent.html":{},"classes/EditUser.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":230,"title":{},"body":{"components/EditProfileComponent.html":{},"coverage.html":{}}}],["variables",{"_index":737,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":674,"title":{},"body":{"index.html":{}}}],["version",{"_index":734,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('navbar_menu",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/QuizAnswerComponent.html":{},"components/RegistrationComponent.html":{}}}],["well",{"_index":715,"title":{},"body":{"index.html":{}}}],["went",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["whether",{"_index":372,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["white",{"_index":493,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["width",{"_index":358,"title":{},"body":{"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["within",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["without",{"_index":386,"title":{},"body":{"guards/EditProfileGuard.html":{}}}],["world",{"_index":473,"title":{},"body":{"components/QuizAnswerComponent.html":{}}}],["worlds",{"_index":529,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["wrong",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["zone.js",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular @Component generated by cli\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navbar_menu\n                            \n                            \n                                title\n                            \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:30\n                \n            \n\n\n            \n                \n                    Function to toggle menu on mobile navbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navbar_menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('navbar_menu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n            \n                \n                    Angular @ViewChild Decorator\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz_Platform'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of site\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Boolean value toggled: Is navbar-mobile toggled?\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\n\n/**\n * Angular @Component generated by cli\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of site\n   */\n  title = 'Quiz_Platform';\n  \n  /**\n   * Angular @ViewChild Decorator\n   */\n  @ViewChild('navbar_menu') navbar_menu: ElementRef | undefined;\n\n  /**\n   * Boolean value toggled: Is navbar-mobile toggled?\n   */\n  toggled = false;\n\n  /**\n   * Function to toggle menu on mobile navbar\n   */\n  toggle(){\n    if(this.toggled == false){\n      this.navbar_menu?.nativeElement.classList.add(\"is-active\");\n      this.toggled = true;\n    }else{\n      this.navbar_menu?.nativeElement.classList.remove(\"is-active\");\n      this.toggled = false;\n    }\n    console.log(\"toggled navbar!\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n      \n      \n    \n  \n\n  \n    \n      \n        Home\n      \n\n      \n        Documentation\n      \n\n      \n        \n          More\n        \n\n        \n          \n            About\n          \n          \n            Jobs\n          \n          \n            Contact\n          \n          \n          \n            Report an issue\n          \n        \n      \n    \n    \n      \n        \n          \n            \n               \n            \n            Bookmark\n          \n          \n            Sign up\n          \n          \n            Log in\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Home                    Documentation                              More                                      About                                Jobs                                Contact                                          Report an issue                                                                                                           Bookmark                                Sign up                                Log in                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            QuizAnswerComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    EditProfileComponent,\n    LoginComponent,\n    QuizAnswerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { EditProfileGuard } from './guards/edit-profile.guard';\nimport { LoginComponent } from './login/login.component';\nimport { QuizAnswerComponent } from './quiz-answer/quiz-answer.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\n\n/**\n * Add component and the path at which they will load in the router\n */\nconst routes: Routes = [\n  {path: \"register\", component: RegistrationComponent},\n  {path: \"edit-profile\", component: EditProfileComponent, canActivate: [EditProfileGuard]},\n  {path: \"login\", component: LoginComponent},\n  {path: \"answerQuiz\", component: QuizAnswerComponent}\n];\n\n\n/**\n * Angular generated code to export the Routes defined within this module.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser.html":{"url":"classes/CreateUser.html","title":"class - CreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                CreateUser class, used to parse form data when creating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:61\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:53\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:65\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:69\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:57\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:48\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile/edit-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                update_form\n                            \n                            \n                                userObj\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile/edit-profile.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject userService and to populate form with current users information\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile/edit-profile.component.ts:64\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        update_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword })\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:19\n                        \n                    \n\n            \n                \n                    Global variable for logged in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile/edit-profile.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:83\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:89\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:95\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:101\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:107\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/edit-profile/edit-profile.component.ts:113\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent{\n  /**\n   * Global variable for logged in user\n   */\n  userObj : User;\n\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  update_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  }, { validators: confirmPassword });\n\n  /**\n   * Constructor to inject userService and to populate form with current users information\n   */\n  constructor(public userService: UserService){\n    let user = sessionStorage.getItem(\"User\");\n    this.userObj = JSON.parse(user!);\n    this.first_name?.setValue(this.userObj.FirstName);\n    this.surname?.setValue(this.userObj.Surname);\n    this.username?.setValue(this.userObj.Username);\n    this.email?.setValue(this.userObj.Email);\n    this.password?.setValue(this.userObj.Password);\n    this.confirm_password?.setValue(this.userObj.Password);\n  }\n\n  /**\n   * Function that will update current user\n  */\n  public updateUser() {\n    const userId = this.userObj._id;\n    let user: EditUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n    }\n    this.userService.edit_user(user,userId).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n      });\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.update_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get surname() {\n    return this.update_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.update_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.update_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.update_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.update_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            First Name is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Surname is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Username is required.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Passwords don't match.\n                        \n                    \n                \n                \n                    \n                        \n                            Update\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                            First Name is required.                                                                                                                                                                                                                                                                                                Surname is required.                                                                                                                                                                                                                                                                                                Username is required.                                                                                                                                                                                                                                                                                                                                                                            Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                                                                                                                                                                Password is required.                                                                            Passwords don\\'t match.                                                                                                                                                    Update                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditProfileGuard.html":{"url":"guards/EditProfileGuard.html","title":"guard - EditProfileGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditProfileGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/edit-profile.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Angular Directive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/edit-profile.guard.ts:18\n                \n            \n\n\n            \n                \n                    Can Activate function to test whether or not a user is logged in\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditProfileGuard implements CanActivate {\n  /**\n   * Can Activate function to test whether or not a user is logged in\n   * @param route \n   * @param state \n   * @returns \n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      let user = sessionStorage.getItem(\"User\");\n      if(user == null){\n        alert(\"You can't edit your profile without logging in!.\")\n        return false;\n      }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                EditUser class, used to parse form data when updating a user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:92\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:84\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:96\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:88\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:79\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular Directive\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login_form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:30\n                \n            \n\n\n            \n                \n                    Function that will update current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n/**\n * Angular Directive\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  /**\n     * Create a FormGroup and setup form controls for each field along with Validators\n    */\n  login_form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ])\n  });\n\n  /**\n   * Function that will update current user\n  */\n  public login() {\n    console.warn(this.login_form.value);\n    this.login_form.reset();\n  }\n\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.login_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.login_form.get(\"password\");\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Email is required.\n                        \n                        \n                            Invalid Email\n                        \n                    \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                    \n                        \n                            Password is required.\n                        \n                        \n                            Password too short.\n                        \n                    \n                \n                \n                    \n                        \n                            Login\n                        \n                    \n                \n                \n                    \n                      Don't have an account? \n                      Register\n                    \n                  \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .update {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-kellie-churchman-1001682.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 2%;\n    margin-right: 2%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Email is required.                                                                            Invalid Email                                                                                                                                                                                                                                                                                                Password is required.                                                                            Password too short.                                                                                                                                                    Login                                                                                                                      Don\\'t have an account?                       Register                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizAnswerComponent.html":{"url":"components/QuizAnswerComponent.html","title":"component - QuizAnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuizAnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz-answer/quiz-answer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-answer\n            \n\n            \n                styleUrls\n                ./quiz-answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer_form\n                            \n                            \n                                countdownTimer\n                            \n                            \n                                scoreDisplay\n                            \n                            \n                                timeLeft\n                            \n                            \n                                timeLeftDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    q1\n                                \n                                \n                                    q2\n                                \n                                \n                                    q3\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswers\n                        \n                    \n                \n            \n            \n                \ncheckAnswers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopTimer\n                        \n                    \n                \n            \n            \n                \nstopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz-answer/quiz-answer.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    q1: new FormControl('',[\n      Validators.required\n    ]),\n    q2: new FormControl('',[\n      Validators.required\n    ]),\n    q3: new FormControl('',[\n      Validators.required\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countdownTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/quiz-answer/quiz-answer.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        q1\n                    \n                \n\n                \n                    \n                        getq1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        q2\n                    \n                \n\n                \n                    \n                        getq2()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:49\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        q3\n                    \n                \n\n                \n                    \n                        getq3()\n                    \n                \n                            \n                                \n                                    Defined in src/app/quiz-answer/quiz-answer.component.ts:55\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-quiz-answer',\n  templateUrl: './quiz-answer.component.html',\n  styleUrls: ['./quiz-answer.component.scss']\n})\n\nexport class QuizAnswerComponent implements OnInit {\n  countdownTimer: any;\n  timeLeftDisplay: any;\n  scoreDisplay: any;\n  timeLeft = 60; // Total time in seconds\n  ngOnInit() {\n    // Update the timer every second\n    this.countdownTimer = setInterval(() => {\n      this.timeLeft--;\n      // Stop the timer when time is up\n      if (this.timeLeft === 0) {\n        clearInterval(this.countdownTimer);\n        //\t\t\t\t\tthis.checkAnswers();\n      }\n    }, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.countdownTimer);\n  }\n\n  answer_form = new FormGroup({\n    q1: new FormControl('',[\n      Validators.required\n    ]),\n    q2: new FormControl('',[\n      Validators.required\n    ]),\n    q3: new FormControl('',[\n      Validators.required\n    ]),\n  });\n\n  get q1() {\n    return this.answer_form.get(\"q1\");\n  }\n  /**\n   * Returns surname form control\n   */\n  get q2() {\n    return this.answer_form.get(\"q2\");\n  }\n  /**\n   * Returns username form control\n   */\n  get q3() {\n    return this.answer_form.get(\"q3\");\n  }\n\n  checkAnswers() {\n    console.log(this.answer_form.value);\n    this.stopTimer();\n\n    const q1 = this.answer_form.get(\"q1\")?.value;\n    const q2 = this.answer_form.get(\"q2\")?.value;\n    const q3 = this.answer_form.get(\"q3\")?.value;\n\n    var correctAnswers = [\"paris\", \"russia\", \"tokyo\"];\n    var userAnswers = [q1, q2, q3];\n    var numCorrect = 0;\n\n    for (var i = 0; i \n    \n\n    \n        \n    Quiz Page\n    \n        Quiz Program\n         {{timeLeft}} \n        \n            Question 1:\n            What is the capital of France?\n            \n                \n                    \n                \n            \n\n            Question 2:\n            What is the largest country in the world by land area?\n            \n                \n                    \n                \n            \n\n            Question 3:\n            What is the capital of Japan?\n            \n\n                \n                    \n                \n            \n            Submit\n        \n        {{timeLeftDisplay}}\n        {{scoreDisplay}}\n    \n\n    \n\n    \n                \n                    ./quiz-answer.component.scss\n                \n                .quiz-container {\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-size: cover;\n    margin: 0 auto;\n    text-align: center;\n    height: 100vh;\n}\n\nh2 {\n    font-size: 24px;\n    margin-bottom: 10px;\n}\n\np {\n    font-size: 16px;\n    margin-bottom: 10px;\n}\n\ninput[type=\"text\"] {\n    margin-bottom: 10px;\n}\n\n#countdown {\n    font-size: 24px;\n    text-align: center;\n}\n\n#submit-btn {\n    margin-top: 20px;\n    padding: 10px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Quiz Page            Quiz Program         {{timeLeft}}                     Question 1:            What is the capital of France?                                                                                        Question 2:            What is the largest country in the world by land area?                                                                                        Question 3:            What is the capital of Japan?                                                                                        Submit                {{timeLeftDisplay}}        {{scoreDisplay}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizAnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default @Component decorator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registration_form\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    first_name\n                                \n                                \n                                    surname\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirm_password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n                \n                    \n                            Registration Component Contructor to inject user Service and router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that will register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registration_form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  },{validators: confirmPassword})\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:27\n                        \n                    \n\n            \n                \n                    Create a FormGroup and setup form controls for each field along with Validators\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration/registration.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        first_name\n                    \n                \n\n                \n                    \n                        getfirst_name()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:77\n                                \n                            \n                    \n                        \n                                Returns first_name form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:83\n                                \n                            \n                    \n                        \n                                Returns surname form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:89\n                                \n                            \n                    \n                        \n                                Returns username form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:95\n                                \n                            \n                    \n                        \n                                Returns email form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:101\n                                \n                            \n                    \n                        \n                                Returns password form control\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm_password\n                    \n                \n\n                \n                    \n                        getconfirm_password()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration/registration.component.ts:107\n                                \n                            \n                    \n                        \n                                Returns confirm_password form control\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreateUser, User } from '../models/user';\nimport { UserService } from '../services/user.service';\nimport { confirmPassword } from '../utilities/password.validator';\nimport { Router } from '@angular/router';\n/**\n * Default @Component decorator\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\n\nexport class RegistrationComponent {\n  /**\n   * Registration Component Contructor to inject user Service and router\n   * @param userService \n   * @param router \n   */\n  constructor(public userService : UserService, public router: Router) {}\n\n  /**\n   * Create a FormGroup and setup form controls for each field along with Validators\n  */\n  registration_form = new FormGroup({\n    first_name: new FormControl('', [\n      Validators.required,\n    ]),\n    surname: new FormControl('', [\n      Validators.required\n    ]),\n    username: new FormControl('', [\n      Validators.required\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8)\n    ]),\n    confirm_password: new FormControl('', [\n      Validators.required,\n    ])\n  },{validators: confirmPassword});\n\n  /**\n   * Function that will register a new user\n  */\n  public registerUser() {\n    let user: CreateUser = {\n      FirstName: this.first_name?.value!,\n      Surname: this.surname?.value!,\n      Username: this.username?.value!,\n      Email: this.email?.value!,\n      Password: this.password?.value!,\n      Plays: 0\n    }\n    /**\n     * Calls userService to perform http request\n     */\n    this.userService.create_user(user).subscribe(\n      (response : User) => { \n        console.log(response);\n        sessionStorage.setItem(\"User\", JSON.stringify(response));\n        this.router.navigate(['/login']);\n      });\n    this.registration_form.reset();\n  }\n\n  /**\n   * Returns first_name form control\n   */\n  get first_name() {\n    return this.registration_form.get(\"first_name\");\n  }\n  /**\n   * Returns surname form control\n   */  \n  get surname() {\n    return this.registration_form.get(\"surname\");\n  }\n  /**\n   * Returns username form control\n   */\n  get username() {\n    return this.registration_form.get(\"username\");\n  }\n  /**\n   * Returns email form control\n   */\n  get email() {\n    return this.registration_form.get(\"email\");\n  }\n  /**\n   * Returns password form control\n   */\n  get password() {\n    return this.registration_form.get(\"password\");\n  }\n  /**\n   * Returns confirm_password form control\n   */\n  get confirm_password() {\n    return this.registration_form.get(\"confirm_password\");\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Quiz Platform\n            \n            \n              Worlds Best!\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  First Name is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Surname is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Username is required.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n              \n                \n                  Email is required.\n                \n                \n                  Invalid Email\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Password too short.\n                \n              \n            \n            \n              \n                \n                \n                  \n                \n              \n              \n                \n                  Password is required.\n                \n                \n                  Passwords don't match.\n                \n              \n            \n            \n              \n                \n                  Register\n                \n              \n            \n            \n              \n                Already have an account? Login\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .back {\n    display: grid;\n\n    /* The image used */\n    // background-image: url(\"../../assets/pexels-ryutaro-tsukata-5220092.jpg\");\n    background-image: url(\"../../assets/images/pexels-brett-sayles-5129486.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n    height: 100vh;\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.column {\n    padding: 0;\n}\n\n.register {\n    display: grid;\n\n    // background: radial-gradient(circle, #3C887e 10%, transparent 11%), radial-gradient(circle at bottom left, #3C887e 5%, transparent 6%), radial-gradient(circle at bottom right, #3C887e 5%, transparent 6%), radial-gradient(circle at top left, #3C887e 5%, transparent 6%), radial-gradient(circle at top right, #3C887e 5%, transparent 6%);\n    // background-size: 6em 6em;\n    // background-color: #242325;\n    // opacity: 1;\n    background-image: url(\"../../assets/images/pexels-stanislav-kondratiev-colors.jpg\");\n    background-color: gray;\n    background-blend-mode: multiply;\n\n\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 100vh;\n\n    justify-content: center;\n    align-items: center;\n}\n\n.box {\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgba(255, 255, 255, .15);\n    backdrop-filter: blur(5px);\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid #42A948;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid #a94442;\n    /* red */\n}\n\n.alert div {\n    background-color: #fed3d3;\n    color: #820000;\n    padding: 1rem;\n    margin-bottom: 1rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: .5rem;\n}\n\nselect {\n    width: 100%;\n    padding: .5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Quiz Platform                                      Worlds Best!                                                                                                                                                                                                                              First Name is required.                                                                                                                                                                                                    Surname is required.                                                                                                                                                                                                    Username is required.                                                                                                                                                                                                                                                      Email is required.                                                  Invalid Email                                                                                                                                                                                                    Password is required.                                                  Password too short.                                                                                                                                                                                                    Password is required.                                                  Passwords don\\'t match.                                                                                                      Register                                                                                    Already have an account? Login                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'QuizAnswerComponent', 'selector': 'app-quiz-answer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                User class, response from database in this format\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                __v\n                            \n                            \n                                _id\n                            \n                            \n                                Email\n                            \n                            \n                                FirstName\n                            \n                            \n                                Password\n                            \n                            \n                                Plays\n                            \n                            \n                                Surname\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        __v\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    Unknown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n            \n                \n                    ID Genereated by Database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Users Email Address\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Users first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Users Password\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Plays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Number of plays made by user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Users Surname\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:13\n                        \n                    \n\n            \n                \n                    Username for user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User{\n    /**\n     * ID Genereated by Database\n     */\n    _id : string = \"\";\n\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n    /**\n     * Unknown\n     */\n    __v: number = 0;\n}\n\n/**\n * CreateUser class, used to parse form data when creating a user\n */\nexport class CreateUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n    /**\n     * Number of plays made by user\n     */\n    Plays: number = 0;\n}\n\n/**\n * EditUser class, used to parse form data when updating a user\n */\nexport class EditUser{\n    /**\n     * Username for user\n     */\n    Username: string = \"\";\n\n    /**\n     * Users first name\n     */\n    FirstName: string = \"\";\n    /**\n     * Users Surname\n     */\n    Surname: string = \"\";\n    /**\n     * Users Email Address\n     */\n    Email: string = \"\";\n    /**\n     * Users Password\n     */\n    Password: string = \"\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Angular Directive\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_user\n                            \n                            \n                                edit_user\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            Class UserService constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create_user\n                        \n                    \n                \n            \n            \n                \ncreate_user(user: CreateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:50\n                \n            \n\n\n            \n                \n                    Take user input and create new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit_user\n                        \n                    \n                \n            \n            \n                \nedit_user(user: EditUser, userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:66\n                \n            \n\n\n            \n                \n                    Take new info and update current user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:26\n                \n            \n\n\n            \n                \n                    handleError function to handle http request errors (from angular documentation)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://clumsy-apron-ray.cyclic.app/api/user\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:43\n                        \n                    \n\n            \n                \n                    All user related requests use this base url\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\n\nimport { CreateUser, EditUser, User } from '../models/user';\n\n/**\n * Angular Directive\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * Class UserService constructor\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * handleError function to handle http request errors (from angular documentation)\n   * @param error \n   * @returns \n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n\n  /**\n   * All user related requests use this base url\n   */\n  base_url = \"https://clumsy-apron-ray.cyclic.app/api/user\";\n\n  /**\n   * Take user input and create new user\n   * @param user \n   * @returns \n   */\n  create_user(user: CreateUser) : Observable{\n    let userNew = JSON.stringify(user);\n    return this.http.post(this.base_url+\"/createUser\",userNew,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  /**\n   * Take new info and update current user.\n   * @param user \n   * @param userID \n   * @returns \n   */\n  edit_user(user: EditUser, userID: string) : Observable{\n    let userUpdated = JSON.stringify(user);\n    return this.http.patch(this.base_url+\"/updateUser/\"+userID,userUpdated,\n    {headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })}).pipe(\n      catchError(this.handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/guards/edit-profile.guard.ts\n            \n            guard\n            EditProfileGuard\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            CreateUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            EditUser\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/quiz-answer/quiz-answer.component.ts\n            \n            component\n            QuizAnswerComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/utilities/password.validator.ts\n            \n            variable\n            confirmPassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bulma : ^0.9.4\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nService\nStatus\n\n\n\n\nContinuous Integration\n\n\n\nCode Coverage\n\n\n\nDocumentation\nhttps://aksharnana.github.io/QuizPlatform-Docs/\n\n\n\nQuiz Platform\nThis project involves creating and executing a quiz platform similar to Sporcle or Jetpunk, where users can both create and take quizzes. Additionally, users can share their quiz results with friends, and even create groups for competitions. Various types of questions should be available, such as simple question-answer, image-based, and matching questions. Quizzes should also be categorized and rated by users.\nInstallation\nInstall node_modules with npm:\n  cd Quiz_Platform\n  npm installRun Locally\nGo to the project directory\n  cd Quiz_PlatformStart the server\n  ng serve --openRunning Tests\nTo run tests, run the following command\n  npm run testAuto Documentation\nTo generate local documentation, run the following command\n  npm run compodocTo serve the genereated documentation, run the command\n  npm run compodoc-serveContinuous Integration / Continuous Deployment\nQuiz Platform is using Circle CI for running tests, building and pushing to firebase hosting as well as updating the codecov page on every commit.\nDeployment\nThe live project link is:\nhttps://quiz-platform-28fcb.web.app/\nTech Stack\nClient: Angular, BulmaIO\nServer: Node, Express, MongoDB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nQuizAnswerComponent\n\nQuizAnswerComponent\n\nAppModule -->\n\nQuizAnswerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmPassword   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utilities/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n    const ctrl = control.get(\"password\");\n    const match_ctrl = control.get(\"confirm_password\");\n    return ctrl && match_ctrl && ctrl.value !== match_ctrl.value ? { confirmPassword: false } : null;\n}\n                    \n                \n\n            \n                \n                    Validator Function to validate password and confirm password fields.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
